{"version":3,"sources":["assets/vancouver.jpg","assets/trippin-logo.png","assets/trippin-logo-bottom.png","components/Home.js","components/AddLocationButton.js","actions/addLocation.js","components/MapInfo.js","components/Map.js","actions/getLocation.js","components/Notes.js","actions/addNotes.js","components/Info.js","actions/addPhotos.js","components/DropPhotos.js","components/Photos.js","components/InfoPhotos.js","actions/index.js","components/Location.js","components/Dates.js","components/SaveButton.js","components/City.js","components/Navbar.js","components/LocationButton.js","components/Itinerary.js","components/Itineraries.js","components/Lists.js","components/Login.js","components/AuthRoute.js","components/ProfilePage.js","actions/users.js","components/App.js","serviceWorker.js","reducers/index.js","reducers/store.js","index.js"],"names":["module","exports","Home","render","Fragment","className","Grid","container","spacing","item","xs","md","Button","href","React","Component","require","connect","state","authentication","uuid","AddLocationButton","props","handleButtonClick","addLocationToItinerary","updateButtonMsg","console","log","currentMapLocation","mapLocation","city","Area","country","Country","location","Name","countries","map","name","includes","cities","cityID","filter","id","locations","addLocation","address","Address","info","Info","notes","userPhotos","setState","class","setTimeout","finalButtonMsg","setInitialButtonState","prevProps","this","createElement","onClick","type","add","MapInfo","phoneDisplay","undefined","phone","Box","fontWeight","p","borderColor","Typography","variant","websiteDisplay","website","ratingDisplay","ratingValue","rating","parseFloat","toString","mb","Rating","defaultValue","value","precision","readOnly","photoDisplay","photos","length","Paper","elevation","style","maxWidth","maxHeight","overflow","GridList","display","flexWrap","justifyContent","width","height","cols","photo","GridListTile","key","getUrl","src","reviewDisplay","reviews","reviewRender","margin","List","review","ListItem","reviewCardRender","author","author_name","authorInitial","charAt","text","date","relative_time_description","Card","padding","layout","CardHeader","avatar","Avatar","aria-label","backgroundColor","red","title","subheader","CardContent","color","component","placePhoneNumber","placeWebsite","status","placeStatus","placeRating","placeReviews","placePhotos","borderBottom","Geocode","setApiKey","process","containerStyle","marginTop","boxShadow","Map","getCity","addressArray","i","types","long_name","getArea","j","getState","getCountry","onMarkerDragEnd","event","newLat","latLng","lat","newLng","lng","fromLatLng","then","response","results","formatted_address","address_components","area","markerPosition","mapPosition","onLoad","autocomplete","onPlaceChanged","place","getPlace","placeId","place_id","geometry","placeName","formatted_phone_number","placeTypes","business_status","fulladdress","placeArea","placeCountry","getLocation","displayDetails","bordered","borderRadius","Item","label","span","displayLocationInfo","zoom","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","googleMapsApiKey","libraries","mapContainerStyle","center","draggable","onDragEnd","placeholder","boxSizing","border","borderSpacing","fontSize","outline","textOverflow","left","marginLeft","payload","memo","Notes","handleSaveNotes","notesText","addNotes","index","indexOfLocation","slice","findIndex","currentLocation","handleNotesInput","bind","target","onChange","marginBottom","styles","makeStyles","theme","root","font","withStyles","addPhotos","DropzoneDialogButton","open","files","IconButton","handleOpen","onSave","handleSave","acceptedFiles","showPreviews","maxFileSize","onClose","handleClose","InfoPhotos","path","alt","addMsg","msg","selectMsg","msgId","deleteMsg","deleteLocation","location_id","renderLocation","changeView","newView","byID","saveItinerary","itinerary","getCurrentItineraryID","Location","showNotes","showInfo","showPhotos","handleEditBtnClick","handleInfoBtnClick","handlePhotoBtnClick","handleAddPhotoBtnClick","showAddPhotos","currLoc","idx","file","preview","DropPhotos","renderSubComp","Dates","handleChangeStartDate","dateString","format","endDateString","Date","dateRanges","end","parse","startDateChange","openDialog","errorMessage","handleChangeEndDate","startDateString","start","endDateChange","deleteDate","dates","push","forEach","utils","DateFnsUtils","paddingLeft","DatePicker","animateYearScrolling","handleDateDelete","autoFocus","addNewDate","datesComponent","green","contentStyle","trigger","modal","close","renderDatesPopup","Snackbar","autoHideDuration","Alert","severity","currentView","dateIndex","SaveButton","Itinerary","currentItinerary","axios","get","res","data","currentItineraryID","patch","catch","err","post","City","renderItinerary","content","countryID","cityToRenderID","cityToRender","countryToRenderID","countryToRender","locationsToRender","loc","lists","useStyles","flexGrow","menuButton","marginRight","appBar","bachgroundColor","toolBar","top","classes","useState","loginStatus","auth","anchorEl","setAnchorEl","Boolean","AppBar","Toolbar","edge","aria-controls","aria-haspopup","currentTarget","profilePic","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","MenuItem","LocationButton","isCitiesEmpty","locationID","insertNewCity","insertNewCountry","location_name","location_address","editItinerary","idToDelete","deletionIsCountry","nameOfDeletion","renderCity","renderCountry","_id","setItineraryFromDB","handleDialogOpen","stopPropagation","itineraryNameChange","paddingTop","TextField","error","helperText","inputProps","handleNameChange","handleEditItineraryName","deletionMessage","Dialog","aria-labelledby","aria-describedby","DialogTitle","DialogActions","startIcon","deleteFromItinerary","isCountry","cityToDisplayIndex","deleteCity","deleteCountry","renderItineraryName","renderDeleteConfirmation","dispatch","Itineraries","bg","leftPanel","bottomPanel","rightPanel","table","Lists","currentTargetId","currentListId","addedCountry","countryList","handleChange","addList","renderList","targetId","prevState","indexOf","states","newList","list","checkedName","Checkbox","checked","listName","JSON","stringify","Login","responseGoogle","responseFacebook","logIn","email","picture","url","history","success","getBasicProfile","getGivenName","getEmail","getImageUrl","clientId","buttonText","onSuccess","onFailure","cookiePolicy","appId","autoLoad","icon","fields","callback","cssClass","nameEmailObj","logOut","withRouter","to","Profilepage","createKey","MapWithMarkerClusterer","clusterer","rel","EmailShareButton","subject","body","EmailIcon","size","round","FacebookShareButton","quote","FacebookIcon","getCurrentUserProfile","userProfile","App","exact","window","hostname","match","PlacesId","jsonObj","userState","defaultLocations","note","defaultCities","defaultCountries","defaultView","currentUser","profilePicture","emailAddress","firstName","lastName","combineReducers","action","newArray","indexToRemove","splice","newLocation","concat","indexToChange","newAuth","visited","itineraries","currentUserProfile","persistConfig","storage","persistedReducer","persistReducer","store","createStore","persistor","persistStore","ReactDOM","loading","document","getElementById","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.f60f87cc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/vancouver.7e23aeae.jpg\";","module.exports = __webpack_public_path__ + \"static/media/trippin-logo.5e56a26a.png\";","module.exports = __webpack_public_path__ + \"static/media/trippin-logo-bottom.08b67e15.png\";","import React from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { GiCalendar, GiDesk, GiChecklist } from \"react-icons/gi\";\r\nimport \"./Home.css\"\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Home extends React.Component {\r\n    render = () => {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"bg\">\r\n                <Grid container className=\"container\" spacing={2}>\r\n                    <Grid className=\"item\" item xs={12} md={4}>\r\n                        <Button href=\"/itineraries\" className=\"button_home\">\r\n                            <div>\r\n                                <GiCalendar className=\"icon\" />\r\n                                <div className=\"buttonText\">Future Trip Itineraries</div>\r\n                            </div>\r\n                        </Button>\r\n                    </Grid>\r\n                    <Grid className=\"item\" item xs={12} md={4}>\r\n                        <Button href=\"/archive\" className=\"button_home\">\r\n                            <div>\r\n                                <GiDesk className=\"icon\" />\r\n                                <div className=\"buttonText\">Archived Itineraries</div>\r\n                            </div>\r\n                        </Button>\r\n                    </Grid>\r\n                    <Grid className=\"item\" item xs={12} md={4}>\r\n                        <Button href=\"/lists\" className=\"button_home\">\r\n                            <div>\r\n                                <GiChecklist className=\"icon\" />\r\n                                <div className=\"buttonText\">Your lists</div>\r\n                            </div>\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n            </React.Fragment>\r\n        );\r\n    };\r\n}\r\n\r\n\r\n\r\nconst muiStyles = {\r\n    bg: {\r\n        position: \"absolute\",\r\n        backgroundImage: `url(${require(\"../assets/vancouver.jpg\")})`,\r\n        backgroundSize: \"cover\",\r\n        height: \"100vh\",\r\n        width: \"100vw\",\r\n        top: \"0\",\r\n        left: \"0\"\r\n    },\r\n    text: {\r\n        color: \"#000000\",\r\n        fontSize: \"30px\"\r\n    },\r\n    container: {\r\n        justifyContent: \"center\",\r\n\r\n        padding: \"20% 10%\",\r\n        width: \"100vw\",\r\n        height: \"100vh\"\r\n    },\r\n    item: {\r\n        textAlign: \"center\"\r\n    },\r\n    button: {\r\n        top: \"20vh\",\r\n        height: \"50vh\",\r\n        width: \"80%\",\r\n        backgroundColor: \"#FFFFFF\",\r\n        borderTop: \"5px solid #2E3B52\",\r\n        transition: \"transform 0.5s ease-in-out\",\r\n        \"&:hover\": {\r\n            background: \"rgba(0, 0, 0, 0.7)\",\r\n            transform: \"translateY(-3vh);\",\r\n            \"-ms-transform\": \"none\",\r\n            color: \"white\"\r\n        },\r\n        boxShadow: \"0px 6px 4px rgba(0, 0, 0, 0.2)\",\r\n    },\r\n    icon: {\r\n        fontSize: \"6em\"\r\n    },\r\n    buttonText: {\r\n        fontSize: \"1.45em\"\r\n    }\r\n};\r\n\r\nconst mapStateToProps = (state) => { //name is by convention\r\n    return {\r\n        authentication: state.authentication\r\n    }; //now it will appear as props\r\n};\r\nexport default connect(mapStateToProps)(Home);","import React from \"react\";\r\nimport { connect }  from 'react-redux';\r\nimport './AddLocationButton.css';\r\nimport { addLocation } from \"../actions/addLocation\";\r\n\r\nconst { uuid } = require('uuidv4');\r\n\r\n\r\n\r\nclass AddLocationButton extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            mapLocation: this.props.mapLocation,\r\n            class: \"submit-button state-0\"\r\n        };\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.mapLocation !== this.props.mapLocation) {\r\n            this.setState({\r\n                mapLocation: this.props.mapLocation,\r\n            })\r\n        }\r\n    }\r\n\r\n    handleButtonClick = () => {\r\n        this.addLocationToItinerary();\r\n        this.updateButtonMsg();\r\n    }\r\n\r\n\r\n\r\n    addLocationToItinerary = () =>{\r\n        console.log('Adding Location to Itinerary');\r\n        let currentMapLocation = this.props.mapLocation;\r\n\r\n        let city = currentMapLocation.Area;\r\n        let country = currentMapLocation.Country;\r\n        let location = currentMapLocation.Name;\r\n\r\n        if(this.props.countries.map(item => item.name).includes(country)){\r\n            if(this.props.cities.map(item => item.name).includes(city)){\r\n                let cityID = this.props.cities.filter((item) => {return item.name == city})[0].id;\r\n                console.log(cityID);\r\n                if(!this.props.locations.map(item => item.location).includes(location)){\r\n                    this.props.addLocation({\r\n                        id: uuid(),\r\n                        location: this.props.mapLocation.Name,\r\n                        address: this.props.mapLocation.Address,\r\n                        cityID: 0,\r\n                        info: this.props.mapLocation.Info,\r\n                        notes: \"\",\r\n                        userPhotos: []\r\n                    });\r\n                    console.log(\"valid location\");\r\n                    console.log(this.props.locations);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n     \r\n    updateButtonMsg = () => {\r\n    this.setState({\r\n        ...this.state,\r\n        class: this.state.class + ' state-1 animated'});\r\n    \r\n    setTimeout(this.finalButtonMsg, 2000);\r\n  };\r\n  \r\n    finalButtonMsg = () => {\r\n        this.setState({\r\n            ...this.state,\r\n            class: this.state.class + ' state-2'});\r\n    \r\n    setTimeout(this.setInitialButtonState, 2000);\r\n  };\r\n  \r\n    setInitialButtonState = () => {\r\n        this.setState({\r\n            ...this.state,\r\n            class: \"submit-button state-0\" });\r\n    \r\n  };\r\n  \r\n\r\n    render() {\r\n\r\n       return(\r\n            <div>\r\n                {\r\n                    React.createElement('div', { className: this.state.class,  onClick: this.handleButtonClick },  \r\n                    React.createElement('span', {className: \"pre-state-msg\" }, \"Add\"), \r\n                    React.createElement('span', {className: \"current-state-msg hide\" }, \".......\"),\r\n                    React.createElement('span', {className: \"done-state-msg hide\" }, \"Added\") ) \r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return { \r\n        mapLocation: state.mapLocation,\r\n        cities: state.cities,\r\n        countries: state.countries,\r\n        locations: state.locations,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {addLocation})(AddLocationButton); \r\n\r\n\r\n\r\n","export const addLocation = location => {\r\n    return {\r\n        type: 'ADD_LOCATION',\r\n        add: location\r\n    };\r\n};","import React from \"react\";\r\nimport { connect }  from 'react-redux';\r\nimport AddLocationButton from './AddLocationButton';\r\n//import { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport { Rating } from '@material-ui/lab';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { red } from '@material-ui/core/colors';\r\nimport { Paper } from '@material-ui/core';\r\nimport { List } from '@material-ui/core';\r\nimport { ListItem } from '@material-ui/core';\r\nimport \"./InfoPhotos.css\"\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\n\r\n\r\n\r\nclass MapInfo extends React.Component {\r\n    \r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            mapLocation: this.props.mapLocation,\r\n            info: this.props.mapLocation.Info,\r\n            phone: this.props.mapLocation.Info.placePhoneNumber,\r\n            website: this.props.mapLocation.Info.placeWebsite,\r\n            status: this.props.mapLocation.Info.placeStatus,\r\n            rating: this.props.mapLocation.Info.placeRating,\r\n            reviews: this.props.mapLocation.Info.placeReviews,\r\n            photos: this.props.mapLocation.Info.placePhotos\r\n        };\r\n    }\r\n\r\n\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.mapLocation !== this.props.mapLocation) {\r\n            this.setState({\r\n                mapLocation: this.props.mapLocation,\r\n                info: this.props.mapLocation.Info,\r\n                phone: this.props.mapLocation.Info.placePhoneNumber,\r\n                website: this.props.mapLocation.Info.placeWebsite,\r\n                status: this.props.mapLocation.Info.placeStatus,\r\n                rating: this.props.mapLocation.Info.placeRating,\r\n                reviews: this.props.mapLocation.Info.placeReviews,\r\n                photos: this.props.mapLocation.Info.placePhotos\r\n            })\r\n        }\r\n    }\r\n\r\n    phoneDisplay = () => {\r\n        if (this.state.phone !== undefined && this.state.phone !== ''){\r\n            return (\r\n                <Box fontWeight=\"fontWeightLight\" p={2} borderColor=\"transparent\">\r\n                <Typography variant=\"h5\" >Phone Number</Typography>\r\n                <Typography variant=\"subtitle1\"> {this.state.phone}</Typography>\r\n               </Box>\r\n            )\r\n    } else return null;\r\n}\r\n\r\n    websiteDisplay = () => {\r\n        if (this.state.website !== undefined && this.state.website !== ''){\r\n            return (\r\n                <Box fontWeight=\"fontWeightLight\" p={2} borderColor=\"transparent\">\r\n                <Typography variant=\"h5\" >Website</Typography>\r\n                <Typography variant=\"subtitle1\">{this.state.website}</Typography>\r\n               </Box>\r\n            )\r\n    } else return null;\r\n    }\r\n\r\n    ratingDisplay = () => {\r\n        \r\n        let ratingValue = 0;\r\n        if (this.state.rating) { ratingValue = parseFloat(this.state.rating.toString()); };\r\n        \r\n        if (this.state.rating !== undefined && this.state.rating !== ''){\r\n            return (\r\n                <Box borderColor=\"transparent\" mb={2} p={1} fontWeight=\"fontWeightLight\">\r\n                <Typography variant=\"h5\">Rating</Typography>\r\n                <Rating name=\"half-rating-read\" defaultValue={0} value={ratingValue} precision={0.1} readOnly />\r\n                </Box>\r\n            )\r\n    } else return null;\r\n    }\r\n\r\n    photoDisplay = () => {\r\n        let photos = this.state.photos;\r\n        if (this.state.photos !== undefined && this.state.photos !== null && this.state.photos.length > 0 ){\r\n        return (\r\n            <div className=\"photos\">\r\n            <div className=\"photos-display\">\r\n            <Paper elevation={2} style={{maxWidth: 400, maxHeight: 200, overflow: 'auto'}}>\r\n\r\n        <GridList className=\"gridList\" style={{ display: 'flex', flexWrap: 'wrap', justifyContent: 'space-around', width: 600, height:200, spacing: \"0\"}} cols={5}>\r\n          {photos.map((photo) => (\r\n            <GridListTile style={{width: \"100px\", spacing: \"0\"}} key={photo.getUrl({'maxWidth': 200, 'maxHeight': 200})} cols={5}>\r\n\r\n              <img src={photo.getUrl({'maxWidth': 200, 'maxHeight': 200})}  />\r\n\r\n            </GridListTile>\r\n          ))}\r\n        </GridList>\r\n        </Paper>\r\n\r\n            </div>\r\n            </div>\r\n        );\r\n    } else return null;\r\n}\r\n\r\n    reviewDisplay = () => {\r\n\r\n        // reviews is an array of reviews\r\n        let reviews = this.state.reviews;\r\n        if ( reviews !== undefined) {\r\n            if (reviews.length > 0) {\r\n            return (\r\n                <Box borderColor=\"transparent\" mb={2} p={1} fontWeight=\"fontWeightLight\">\r\n                <Typography variant=\"h5\">Reviews</Typography>\r\n                {this.reviewRender(reviews)}\r\n                </Box>\r\n                \r\n            )\r\n                 }\r\n        }\r\n    }\r\n\r\n    reviewRender = (reviews) => {\r\n        return (\r\n            <Paper elevation={2} style={{maxWidth: 600, maxHeight: 300, overflow: 'auto', margin: \"1rem 2rem 1rem 3rem\"}}>\r\n            <List>\r\n            {reviews.map((review, key) => (\r\n            <ListItem key={`item-${key}-${key}`}>\r\n            {this.reviewCardRender(review)}\r\n          </ListItem>\r\n        ))}\r\n            </List>\r\n          </Paper>\r\n        )\r\n    }\r\n\r\n    reviewCardRender = (review) => {\r\n        let author = review.author_name;\r\n        let authorInitial = author.charAt(0);\r\n        let text = review.text;\r\n        let date = review.relative_time_description;\r\n        let rating = review.rating;\r\n        return (\r\n\r\n        <Card style={{maxWidth: \"500px\", padding: \"1rem 1rem\"}} layout=\"vertical\">\r\n\r\n        <CardHeader\r\n          avatar={\r\n            <Avatar aria-label=\"Review\" style={{backgroundColor: red[500]}}>\r\n              {authorInitial}\r\n            </Avatar>\r\n          }\r\n          title={author}\r\n          subheader={date}\r\n        />\r\n        <Rating name=\"half-rating-read\" defaultValue={0} value={rating || 0} precision={0.1} readOnly />\r\n        <CardContent>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n            {text}\r\n          </Typography>\r\n        </CardContent>\r\n\r\n      </Card>\r\n        )\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    render() {\r\n       return(\r\n\r\n            <div className=\"mainInfo\">\r\n            <Box borderColor=\"transparent\" p={2}>\r\n            <Box  borderColor=\"transparent\"  fontWeight=\"fontWeightBold\" borderBottom={1} p={1} mb={2}>\r\n            <Typography>LOCATION INFORMATION</Typography>\r\n            </Box>\r\n\r\n           {this.phoneDisplay()}\r\n\r\n           {this.websiteDisplay()}\r\n\r\n           {this.ratingDisplay()}\r\n\r\n           <Box fontWeight=\"fontWeightLight\"  borderColor=\"transparent\">\r\n                <Typography variant=\"h5\" >Location Photos</Typography>\r\n                {this.photoDisplay()}\r\n               </Box>\r\n\r\n\r\n           {this.reviewDisplay()}\r\n\r\n           <div className=\"addButton\">\r\n                <AddLocationButton />\r\n            </div>\r\n\r\n               \r\n                </Box>\r\n            </div> \r\n        )\r\n    }\r\n}\r\n\r\n/* const styles = makeStyles((theme) => ({\r\n    root: {\r\n      '& > *': {\r\n        margin: theme.spacing(1),\r\n        font: '30px Roboto'\r\n      },\r\n    },\r\n  })); */\r\n\r\nconst mapStateToProps = (state) => {\r\n    console.log('State',state);\r\n    return { \r\n        mapLocation: state.mapLocation\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(MapInfo); \r\n\r\n\r\n\r\n","import React from 'react';\r\nimport './App.css';\r\nimport {\r\n    InfoWindow,\r\n    LoadScript,\r\n    GoogleMap,\r\n    Marker,\r\n    Autocomplete\r\n} from \"@react-google-maps/api\";\r\nimport Geocode from \"react-geocode\";\r\nimport { Descriptions } from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport { getLocation } from '../actions/getLocation';\r\nimport MapInfo from \"./MapInfo\";\r\n\r\n\r\n\r\nGeocode.setApiKey(process.env.REACT_APP_API_KEY);\r\n\r\nconst containerStyle = {\r\n    width: '100%',\r\n    height: '100%',\r\n    marginTop: '1rem',\r\n    boxShadow: \"0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)\"\r\n};\r\n\r\n\r\n\r\n\r\nclass Map extends React.Component {\r\n    constructor(props) {\r\n    super(props);\r\n    \r\n    this.autocomplete = null;\r\n\r\n    this.state = {\r\n        placeId: '',\r\n        placeName: '',\r\n        address: '',\r\n        city: '',\r\n        area: '',\r\n        state: '',\r\n        country: '',\r\n        zoom: 10,\r\n        height: 400,\r\n        mapPosition: {\r\n            lat: 0,\r\n            lng: 0,\r\n        },\r\n        markerPosition: {\r\n            lat: 0,\r\n            lng: 0,\r\n        }\r\n    };\r\n}\r\n\r\n    componentDidMount() {\r\n        if (navigator.geolocation) {\r\n            navigator.geolocation.getCurrentPosition(position => {\r\n                this.setState({\r\n                    mapPosition: {\r\n                        lat: position.coords.latitude,\r\n                        lng: position.coords.longitude,\r\n                    },\r\n                    markerPosition: {\r\n                        lat: position.coords.latitude,\r\n                        lng: position.coords.longitude,\r\n                    }\r\n                }, () => {\r\n                    Geocode.fromLatLng(position.coords.latitude, position.coords.longitude)\r\n                        .then(response => {\r\n                            const address = response.results[0].formatted_address,\r\n                                addressArray = response.results[0].address_components,\r\n                                city = this.getCity(addressArray),\r\n                                area = this.getArea(addressArray),\r\n                                state = this.getState(addressArray),\r\n                                country = this.getCountry(addressArray);\r\n\r\n                            this.setState({\r\n                                address: (address) ? address : \"\",\r\n                                area: (area) ? area : \"\",\r\n                                city: (city) ? city : \"\",\r\n                                state: (state) ? state : \"\",\r\n                                country: (country)? state : \"\",\r\n                            })\r\n                        })\r\n                })\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    getCity = (addressArray) => {\r\n        let city = '';\r\n        for (let i = 0; i < addressArray.length; i++) {\r\n            if (addressArray[i].types[0] && 'administrative_area_level_2' === addressArray[i].types[0]) {\r\n                city = addressArray[i].long_name;\r\n                return city;\r\n            }\r\n        }\r\n    };\r\n\r\n    getArea = (addressArray) => {\r\n        let area = '';\r\n        for (let i = 0; i < addressArray.length; i++) {\r\n            if (addressArray[i].types[0]) {\r\n                for (let j = 0; j < addressArray.length; j++) {\r\n                    if ('sublocality_level_1' === addressArray[i].types[j] || 'locality' === addressArray[i].types[j]) {\r\n                        area = addressArray[i].long_name;\r\n                        return area;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    getState = (addressArray) => {\r\n        let state = '';\r\n        for (let i = 0; i < addressArray.length; i++) {\r\n            if (addressArray[i].types[0] && 'administrative_area_level_1' === addressArray[i].types[0]) {\r\n                state = addressArray[i].long_name;\r\n                return state;\r\n            }\r\n        }\r\n    };\r\n\r\n    getCountry = (addressArray) => {\r\n        let country = '';\r\n        for (let i = 0; i < addressArray.length; i++) {\r\n            if (addressArray[i].types[0] && 'country' === addressArray[i].types[0]) {\r\n                country = addressArray[i].long_name;\r\n                return country;\r\n            }\r\n        }\r\n    };\r\n\r\n    onMarkerDragEnd = (event) => {\r\n        let newLat = event.latLng.lat();\r\n        let newLng = event.latLng.lng();\r\n        //console.log(newLng, newLat);\r\n\r\n        Geocode.fromLatLng(newLat, newLng)\r\n            .then(response => {\r\n                console.log(response);\r\n                const address = response.results[0].formatted_address,\r\n                    addressArray = response.results[0].address_components,\r\n                    city = this.getCity(addressArray),\r\n                    area = this.getArea(addressArray),\r\n                    state = this.getState(addressArray);\r\n                    console.log(address);\r\n\r\n                this.setState({\r\n                    address: (address) ? address : \"\",\r\n                    area: (area) ? area : \"\",\r\n                    city: (city) ? city : \"\",\r\n                    state: (state) ? state : \"\",\r\n                    markerPosition: {\r\n                        lat: newLat,\r\n                        lng: newLng,\r\n                    },\r\n                    mapPosition: {\r\n                        lat: newLat,\r\n                        lng: newLng,\r\n                    }\r\n                })\r\n            });\r\n    };\r\n\r\n    onLoad = (autocomplete) => {\r\n        console.log('autocomplete: ', autocomplete);\r\n        this.autocomplete = autocomplete;\r\n        // this.autocomplete.addListener('place_changed', this.onPlaceChanged);\r\n    };\r\n\r\n    onPlaceChanged = () => {\r\n        // if (this.autocomplete !== null) {\r\n            // console.log(this.autocomplete.getPlace())\r\n         \r\n        const place = this.autocomplete.getPlace();\r\n        console.log(place);\r\n        const address = place.formatted_address,\r\n            placeId = place.place_id,\r\n            addressArray = place.address_components;\r\n        const city = this.getCity(addressArray),\r\n              area = this.getArea(addressArray),\r\n              state = this.getState(addressArray),\r\n              country = this.getCountry(addressArray),\r\n              newLat = place.geometry.location.lat(),\r\n              newLng = place.geometry.location.lng();\r\n        const placeName = place.name;\r\n\r\n        // location info\r\n        const placeWebsite = place.website;\r\n        const placeReviews = place.reviews;\r\n        const placePhotos = place.photos;\r\n        const placePhoneNumber = place.formatted_phone_number;\r\n        const placeRating = place.rating;\r\n        const placeTypes = place.types;\r\n        const placeStatus = place.business_status;\r\n\r\n        const info = {\r\n            placeWebsite: placeWebsite,\r\n            placeReviews: placeReviews,\r\n            placePhotos: placePhotos,\r\n            placePhoneNumber: placePhoneNumber,\r\n            placeRating: placeRating,\r\n            placeTypes: placeTypes,\r\n            placeStatus: placeStatus\r\n        }\r\n\r\n\r\n        this.setState({\r\n            placeId: (placeId) ? placeId: \"\",\r\n            placeName: (placeName) ? placeName : \"\",\r\n            address: (address) ? address : \"\",\r\n            area: (area) ? area : \"\",\r\n            city: (city) ? city : \"\",\r\n            state: (state) ? state : \"\",\r\n            country: (country)? country: \"\",\r\n            markerPosition: {\r\n                lat: newLat,\r\n                lng: newLng,\r\n            },\r\n            mapPosition: {\r\n                lat: newLat,\r\n                lng: newLng,\r\n            },\r\n            info: info\r\n        })\r\n\r\n    // } else {\r\n    //     console.log('Autocomplete is not loaded yet!')\r\n    //   }\r\n\r\n        // create mapLocation object\r\n        const mapLocation = {\r\n            placeId: this.state.placeId,\r\n            placeName: this.state.placeName,\r\n            fulladdress: this.state.address,\r\n            placeArea: this.state.area,\r\n            placeCountry: this.state.country,\r\n            info: this.state.info,\r\n        }\r\n        // Reducer call to update the name of the facility and address\r\n        console.log('OnPlaceChange call', mapLocation);\r\n        console.log(\"This is Map Location\");\r\n        console.log(mapLocation);\r\n        this.props.getLocation(mapLocation);\r\n    };\r\n\r\n    displayDetails = () => {\r\n        if (this.state.placeId !== null && this.state.placeId !== ''){\r\n            return (     \r\n                  <Descriptions bordered layout=\"horizontal\" style={{ width: '70%', padding: \"1rem 1rem\", margin: \"0rem 2rem 0.5rem 4rem\",\r\n            backgroundColor: \"#ebeced\",  boxShadow: \"0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)\", borderRadius: \"10px\"}}>\r\n                    <Descriptions.Item label=\"CITY\" span={3}>{this.state.city}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"AREA\" span={3}>{this.state.area}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"STATE\" span={3}>{this.state.state}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"ADDRESS \" span={3}>{this.state.address}</Descriptions.Item>\r\n                </Descriptions>\r\n                ) \r\n        } else return null;\r\n    }\r\n\r\n    displayLocationInfo = () => {\r\n        if (this.state.placeId !== null && this.state.placeId !== ''){\r\n            return (     \r\n                <div className=\"bottom-panel\">\r\n                <MapInfo />\r\n                </div>\r\n                ) \r\n        } else return null;\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n\r\n        \r\n        return (\r\n\r\n            <div style={{ width: '85%', height: '450px', padding: \"3rem 1rem\"}}>\r\n\r\n            {this.displayDetails()}\r\n\r\n                <LoadScript\r\n                    googleMapsApiKey={process.env.REACT_APP_API_KEY}\r\n                    libraries={[\"places\"]}\r\n                >\r\n                    <GoogleMap\r\n                        mapContainerStyle={containerStyle}\r\n                        zoom={8}\r\n                        center={{ lat: this.state.mapPosition.lat, lng: this.state.mapPosition.lng }}\r\n                    >\r\n                        <Marker\r\n                            draggable={true}\r\n                            onDragEnd={this.onMarkerDragEnd}\r\n                            position={{ lat: this.state.markerPosition.lat, lng: this.state.markerPosition.lng}}\r\n                            \r\n                        >\r\n                          <InfoWindow position={{ lat: this.state.markerPosition.lat+0.1, lng: this.state.markerPosition.lng}}>\r\n                                <div>\r\n                                    {this.state.address}\r\n                                </div>\r\n                            </InfoWindow>\r\n                        </Marker>\r\n                        <Autocomplete\r\n                         onLoad={this.onLoad}\r\n                         onPlaceChanged={this.onPlaceChanged}\r\n          >\r\n              <input\r\n              type=\"text\"\r\n              placeholder=\"Input here\"\r\n              style={{\r\n                boxSizing: `border-box`,\r\n                border: `1px solid transparent`,\r\n                borderSpacing: '1px',\r\n                width: `400px`,\r\n                height: `32px`,\r\n                marginTop: '0.5rem',\r\n                padding: `0.5rem 1rem`,\r\n                borderRadius: `3px`,\r\n                boxShadow: `0 2px 6px rgba(0, 0, 0, 0.3)`,\r\n                fontSize: `14px`,\r\n                outline: `none`,\r\n                textOverflow: `ellipses`,\r\n                position: \"absolute\",\r\n                left: \"50%\",\r\n                marginLeft: \"-120px\"\r\n              }}\r\n            />\r\n            </Autocomplete>\r\n                    </GoogleMap>\r\n                </LoadScript>\r\n\r\n                {this.displayLocationInfo()}\r\n            </div>\r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default connect(null, {getLocation})(React.memo(Map));\r\n","export const getLocation = location => {\r\n    return {\r\n        type: \"GET_LOCATION\",\r\n        payload: location,\r\n    }\r\n}\r\n\r\n","import React from \"react\";\r\nimport  {connect}  from 'react-redux';\r\nimport  {addNotes} from './../actions/addNotes'\r\nimport \"./Notes.css\"\r\n\r\nclass Notes extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        let newArray = this.props.location.slice();\r\n        let indexOfLocation= newArray.findIndex((item) => {\r\n            return this.props.id == item.id;\r\n        });\r\n        this.state = {\r\n            currentLocation: this.props.location[indexOfLocation],\r\n           notesText: this.props.location[indexOfLocation].notes,\r\n           index: indexOfLocation\r\n           // userImages image object will change when database added: {fileName:\"name\", fileLoc:\"../imgs/name.jpg\"}\r\n        };\r\n        this.handleNotesInput = this.handleNotesInput.bind(this);\r\n    }\r\n\r\n    handleNotesInput(event) {\r\n        this.setState({\r\n            currentLocation: this.state.currentLocation,\r\n            notesText: event.target.value,\r\n            index: this.state.index\r\n        });\r\n      }\r\n\r\n    handleSaveNotes = () => {\r\n        console.log(this.state.notesText);\r\n        this.props.addNotes({\r\n        notes: this.state.notesText,\r\n        index: this.state.index\r\n        });\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"notes\">\r\n            <div className=\"notes-outer\">\r\n                <div className=\"notes-inner\">\r\n                    <textarea id=\"notes-text\" value={this.state.notesText} onChange={this.handleNotesInput}>\r\n                    </textarea>\r\n                </div>\r\n                <div id=\"notes-inner-button\">\r\n                    <button id=\"notes-button\" value=\"notes-button\"  type=\"button\" onClick={this.handleSaveNotes}>\r\n                        Save\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return { \r\n        currentLocation: state.currentLocation,\r\n        locations: state.locations,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {addNotes})(Notes); \r\n","export const addNotes = payload => {\r\n    return {\r\n        type: 'ADD_NOTES',\r\n        add: payload\r\n    };\r\n};","import React from \"react\";\r\nimport {makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport { Rating } from '@material-ui/lab';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { red } from '@material-ui/core/colors';\r\nimport { Paper } from '@material-ui/core';\r\nimport { List } from '@material-ui/core';\r\nimport { ListItem } from '@material-ui/core';\r\nimport \"./InfoPhotos.css\"\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\n\r\n\r\nclass Info extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        console.log(this.props.location);\r\n        console.log(this.props.id);\r\n        let newArray = this.props.location.slice();\r\n        let indexOfLocation= newArray.findIndex((item) => {\r\n            return this.props.id == item.id;\r\n        });\r\n\r\n        console.log(indexOfLocation);\r\n        console.log(this.props.location[indexOfLocation]);\r\n\r\n        this.state = {\r\n            currentLocation: this.props.location[indexOfLocation],\r\n            info: this.props.location[indexOfLocation].info,\r\n            phone: this.props.location[indexOfLocation].info.placePhoneNumber,\r\n            website: this.props.location[indexOfLocation].info.placeWebsite,\r\n            status: this.props.location[indexOfLocation].info.placeStatus,\r\n            rating: this.props.location[indexOfLocation].info.placeRating,\r\n            reviews: this.props.location[indexOfLocation].info.placeReviews,\r\n            photos: this.props.location[indexOfLocation].info.placePhotos,\r\n        };\r\n    }\r\n\r\n    photoDisplay = () => {\r\n      let photos = this.state.photos;\r\n      if (this.state.photos !== undefined && this.state.photos !== ''){\r\n      return (\r\n          <div className=\"photos\">\r\n          <div className=\"photos-display\">\r\n          <Paper elevation={2} style={{maxWidth: 700, maxHeight: 200, overflow: 'auto'}}>\r\n\r\n      <GridList className=\"gridList\" style={{ display: 'flex', flexWrap: 'wrap', justifyContent: 'space-around', width: 700, height:200, spacing: \"0\"}} cols={7}>\r\n        {photos.map((photo) => (\r\n          <GridListTile style={{width: \"100px\", spacing: \"0\"}} key={photo.getUrl({'maxWidth': 200, 'maxHeight': 200})} cols={7}>\r\n\r\n            <img src={photo.getUrl({'maxWidth': 200, 'maxHeight': 200})}  />\r\n          </GridListTile>\r\n        ))}\r\n      </GridList>\r\n      </Paper>\r\n\r\n          </div>\r\n          </div>\r\n      );\r\n  } else return null;\r\n}\r\n\r\n    reviewDisplay = () => {\r\n\r\n        // reviews is an array of reviews\r\n        let reviews = this.state.reviews;\r\n        if ( reviews !== undefined) {\r\n            if (reviews.length > 0) {\r\n            return (\r\n                <Box style={{marginBottom: \"4rem\"}}borderColor=\"transparent\" mb={2} p={1} fontWeight=\"fontWeightLight\">\r\n                <Typography variant=\"h5\">Reviews</Typography>\r\n                {this.reviewRender(reviews)}\r\n                </Box>\r\n                \r\n            )\r\n                 }\r\n        }\r\n    }\r\n\r\n    reviewRender = (reviews) => {\r\n        return (\r\n            <Paper elevation={2} style={{maxWidth: 600, maxHeight: 300, overflow: 'auto', margin: \"2rem 2rem 1rem 2rem\"}}>\r\n            <List>\r\n            {reviews.map((review, key) => (\r\n            <ListItem key={`item-${key}-${key}`}>\r\n            {this.reviewCardRender(review)}\r\n          </ListItem>\r\n        ))}\r\n            </List>\r\n          </Paper>\r\n        )\r\n    }\r\n\r\n    reviewCardRender = (review) => {\r\n        let author = review.author_name;\r\n        let authorInitial = author.charAt(0);\r\n        let text = review.text;\r\n        let date = review.relative_time_description;\r\n        let rating = review.rating;\r\n        return (\r\n\r\n        <Card style={{maxWidth: \"500px\", padding: \"0.5rem 0.5rem\"}} layout=\"vertical\">\r\n\r\n        <CardHeader\r\n          avatar={\r\n            <Avatar aria-label=\"Review\" style={{backgroundColor: red[500]}}>\r\n              {authorInitial}\r\n            </Avatar>\r\n          }\r\n          title={author}\r\n          subheader={date}\r\n        />\r\n        <Rating name=\"half-rating-read\" defaultValue={0} value={rating || 0} precision={0.1} readOnly />\r\n        <CardContent>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n            {text}\r\n          </Typography>\r\n        </CardContent>\r\n\r\n      </Card>\r\n        )\r\n    }\r\n\r\n\r\n\r\n\r\n   \r\n      render() {\r\n        let ratingValue = 0;\r\n        if (this.state.rating) { ratingValue = parseFloat(this.state.rating.toString()); };\r\n        \r\n       return(\r\n            <div className=\"mainInfo\">\r\n            <Box borderColor=\"transparent\" p={3}>\r\n\r\n               <Box fontWeight=\"fontWeightLight\" component=\"fieldset\"  borderColor=\"transparent\">\r\n                <Typography variant=\"h6\" >Phone Number</Typography>\r\n                <Typography variant=\"body2\"> {this.state.phone}</Typography>\r\n               </Box>\r\n\r\n               <Box fontWeight=\"fontWeightLight\" component=\"fieldset\"    borderColor=\"transparent\">\r\n                <Typography variant=\"h6\" >Website</Typography>\r\n                <Typography variant=\"body1\">{this.state.website}</Typography>\r\n               </Box>\r\n\r\n                <Box component=\"fieldset\" borderColor=\"transparent\" fontWeight=\"fontWeightLight\">\r\n                <Typography variant=\"h6\">Rating</Typography>\r\n                <Rating name=\"half-rating-read\" defaultValue={0} value={ratingValue} precision={0.1} readOnly />\r\n                </Box>\r\n                \r\n                </Box>\r\n\r\n                <Box fontWeight=\"fontWeightLight\" p={2} borderColor=\"transparent\">\r\n                <Typography variant=\"h5\" >Website</Typography>\r\n                {this.photoDisplay()}\r\n               </Box> \r\n\r\n\r\n                {this.reviewDisplay()}\r\n\r\n                \r\n              \r\n            </div> \r\n        )\r\n    }\r\n\r\n    \r\n\r\n}\r\n\r\nconst styles = makeStyles((theme) => ({\r\n    root: {\r\n      '& > *': {\r\n        margin: theme.spacing(1),\r\n        font: '30px Roboto'\r\n      },\r\n    },\r\n  }));\r\n\r\nexport default withStyles(styles)(Info); \r\n","export const addPhotos = payload => {\r\n    return {\r\n        type: 'ADD_PHOTOS',\r\n        add: payload\r\n    };\r\n};","import React, { Component } from 'react'\r\nimport {DropzoneDialog} from 'material-ui-dropzone';\r\nimport  {connect}  from 'react-redux';\r\nimport  {addPhotos} from '../actions/addPhotos';\r\nimport Button from '@material-ui/core/Button';\r\nimport AddAPhotoOutlinedIcon from '@material-ui/icons/AddAPhotoOutlined';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n \r\nexport class DropzoneDialogButton extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        let newArray = this.props.location.slice();\r\n        let indexOfLocation= newArray.findIndex((item) => {\r\n            return this.props.id == item.id;\r\n        });\r\n        this.state = {\r\n            open: false,\r\n            files: [],\r\n            currentLocation: this.props.location[indexOfLocation],\r\n           photos: this.props.location[indexOfLocation].userPhotos,\r\n           index: indexOfLocation\r\n        };\r\n    }\r\n \r\n    handleClose() {\r\n        this.setState({\r\n            open: false\r\n        });\r\n    }\r\n \r\n    handleSave(files) {\r\n        //Saving files to state for further use and closing Modal.\r\n        this.props.addPhotos({files: files, index: this.state.index});\r\n        this.setState({\r\n            files: files,\r\n            open: false,\r\n            photos: this.props.locations[this.state.index].userPhotos\r\n        });\r\n\r\n    }\r\n \r\n    handleOpen() {\r\n        this.setState({\r\n            open: true,\r\n        });\r\n    }\r\n \r\n    render() {\r\n        let photos = this.props.locations[this.state.index].userPhotos;\r\n        return (\r\n            <div>\r\n\r\n\r\n                <IconButton aria-label=\"Add Photo\" name=\"Add Photo\" onClick={this.handleOpen.bind(this)}>\r\n                <AddAPhotoOutlinedIcon />\r\n                </IconButton>\r\n\r\n                <DropzoneDialog\r\n                    open={this.state.open}\r\n                    onSave={this.handleSave.bind(this)}\r\n                    acceptedFiles={['image/jpeg', 'image/png', 'image/bmp']}\r\n                    showPreviews={true}\r\n                    maxFileSize={5000000}\r\n                    onClose={this.handleClose.bind(this)}\r\n                />\r\n\r\n            \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return { \r\n        currentLocation: state.currentLocation,\r\n        locations: state.locations,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {addPhotos})(DropzoneDialogButton); \r\n","import React from \"react\";\r\nimport  {connect}  from 'react-redux';\r\nimport  {addPhotos} from '../actions/addPhotos'\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport { Paper } from '@material-ui/core';\r\n\r\nclass InfoPhotos extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        let newArray = this.props.location.slice();\r\n        let indexOfLocation= newArray.findIndex((item) => {\r\n            return this.props.id == item.id;\r\n        });\r\n        this.state = {\r\n            currentLocation: this.props.location[indexOfLocation],\r\n           photos: this.props.location[indexOfLocation].userPhotos,\r\n           index: indexOfLocation\r\n           // userImages image object will change when database added: {fileName:\"name\", fileLoc:\"../imgs/name.jpg\"}\r\n        };\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        \r\n        return(\r\n            <div className=\"photos\">\r\n            <div className=\"photos-display\">\r\n            <Paper elevation={2} style={{maxWidth: 600, maxHeight: 200, overflow: 'auto', margin: \"1rem 1rem 1rem 1rem\"}}>\r\n\r\n        <GridList className=\"gridList\" style={{ display: 'flex',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'space-around', width: 600, height:200, spacing: \"0\"}} cols={5}>\r\n          {this.state.photos.map((photo, index) => (\r\n            <GridListTile style={{width: \"200px\"}} key={index} cols={5}>\r\n            <img src={photo.path} alt=\"Photo\" />\r\n            </GridListTile>\r\n          ))}\r\n        </GridList>\r\n        </Paper>\r\n\r\n            </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return { \r\n        currentLocation: state.currentLocation,\r\n        locations: state.locations\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {addPhotos})(InfoPhotos); \r\n\r\n","import React from \"react\";\r\nimport  {connect}  from 'react-redux';\r\nimport  {addPhotos} from '../actions/addPhotos'\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport { Paper } from '@material-ui/core';\r\n\r\nclass InfoPhotos extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        let newArray = this.props.location.slice();\r\n        let indexOfLocation= newArray.findIndex((item) => {\r\n            return this.props.id == item.id;\r\n        });\r\n        console.log(this.props.location[indexOfLocation]);\r\n        console.log(this.props.location);\r\n        this.state = {\r\n            currentLocation: this.props.location[indexOfLocation],\r\n            info: this.props.location[indexOfLocation].info,\r\n            photos: this.props.location[indexOfLocation].info.placePhotos,\r\n            index: indexOfLocation\r\n           // userImages image object will change when database added: {fileName:\"name\", fileLoc:\"../imgs/name.jpg\"}\r\n        };\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        \r\n        return(\r\n            <div className=\"photos\">\r\n            <div className=\"photos-display\">\r\n            <Paper elevation={2} style={{maxWidth: 600, maxHeight: 300, overflow: 'auto', margin: \"1rem 1rem 1rem 1rem\"}}>\r\n\r\n        <GridList className=\"gridList\" style={{ display: 'flex',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'space-around', width: 700, height:200, spacing: \"0\"}} cols={7}>\r\n          {this.state.photos.map((photo) => (\r\n            <GridListTile style={{width: \"150px\"}} key={photo.getUrl({'maxWidth': 200, 'maxHeight': 200})} cols={7}>\r\n\r\n              <img src={photo.getUrl({'maxWidth': 200, 'maxHeight': 200})}  />\r\n            </GridListTile>\r\n          ))}\r\n        </GridList>\r\n        </Paper>\r\n\r\n            </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return { \r\n        currentLocation: state.currentLocation,\r\n        locations: state.locations\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {addPhotos})(InfoPhotos); \r\n\r\n","export const addMsg = msg => {\r\n    return {\r\n        type: 'ADD_MSG',\r\n        addMsg: msg\r\n    };\r\n};\r\n\r\nexport const selectMsg = msgId => {\r\n    return {\r\n        type: 'SELECT_MSG',\r\n        selectMsg: msgId\r\n    }\r\n};\r\n\r\nexport const deleteMsg = msgId => {\r\n    return {\r\n        type: 'DELETE_MSG',\r\n        deleteMsg: msgId\r\n    }\r\n};\r\n\r\nexport const chooseUser = userName => {\r\n    return {\r\n        type: 'CHOOSE_USER',\r\n        chooseUser: userName\r\n    }\r\n};\r\n\r\nexport const logOut = () => {\r\n    return {\r\n        type: 'LOGOUT'\r\n    }\r\n};\r\n\r\nexport const logIn = nameEmailObj => {\r\n    return {\r\n        type: 'LOGIN',\r\n        logIn: nameEmailObj\r\n    }\r\n}\r\n\r\nexport const deleteLocation = (id) => {\r\n    return {\r\n        type: 'DEL_LOCATION',\r\n        location_id: id,\r\n    };\r\n};\r\nexport const deleteCity = (id) => {\r\n    return {\r\n        type: 'DEL_CITY',\r\n        location_id: id,\r\n    };\r\n};\r\nexport const deleteCountry = (id) => {\r\n    return {\r\n        type: 'DEL_COUNTRY',\r\n        location_id: id,\r\n    };\r\n};\r\n\r\nexport const addLocation = (id,name,address,cityID) => {\r\n    return {\r\n        type: 'NEW_LOCATION',\r\n        location_id: id,\r\n        location_name: name,\r\n        location_address: address,\r\n        cityID: cityID,\r\n    };\r\n};\r\n\r\n\r\nexport const renderLocation = (locations) => {\r\n    return{\r\n        type: \"RENDER_LOCATION\",\r\n        payload: locations\r\n    }\r\n}\r\nexport const renderCountry = (locations) => {\r\n    return{\r\n        type: \"RENDER_COUNTRY\",\r\n        payload: locations\r\n    }\r\n}\r\nexport const renderCity = (locations) => {\r\n    return{\r\n        type: \"RENDER_CITY\",\r\n        payload: locations\r\n    }\r\n}\r\nexport const startDateChange = (place,type,date,dateIndex,) => {\r\n    if (type === 'city'){\r\n        return{\r\n            type: \"START_DATE_CHANGE_CITY\",\r\n            place: place,\r\n            date: date,\r\n            dateIndex: dateIndex,\r\n        }\r\n    }\r\n    else if (type ==='country'){\r\n        return{\r\n            type: \"START_DATE_CHANGE_COUNTRY\",\r\n            place: place,\r\n            date: date,\r\n            dateIndex: dateIndex,\r\n        }\r\n    }\r\n    else if (type ==='itinerary'){\r\n        return{\r\n            type: \"START_DATE_CHANGE_ITINERARY\",\r\n            date: date,\r\n            dateIndex: dateIndex,\r\n        }\r\n    }\r\n    return {}\r\n};\r\n\r\nexport const endDateChange = (place,type,date,dateIndex,) => {\r\n    if (type === 'city'){\r\n        return{\r\n            type: \"END_DATE_CHANGE_CITY\",\r\n            place: place,\r\n            date: date,\r\n            dateIndex: dateIndex,\r\n        }\r\n    }\r\n    else if (type ==='country'){\r\n        return{\r\n            type: \"END_DATE_CHANGE_COUNTRY\",\r\n            place: place,\r\n            date: date,\r\n            dateIndex: dateIndex,\r\n        }\r\n    }\r\n    else if (type ==='itinerary'){\r\n        return{\r\n            type: \"END_DATE_CHANGE_ITINERARY\",\r\n            date: date,\r\n            dateIndex: dateIndex,\r\n        }\r\n    }\r\n    return {}\r\n};\r\nexport const deleteDate = (place,type,dateIndex) => {\r\n    if (type === 'city'){\r\n        return{\r\n            type: \"DELETE_DATE_CITY\",\r\n            place: place,\r\n            dateIndex: dateIndex,\r\n        }\r\n    }\r\n    else if (type ==='country'){\r\n        return{\r\n            type: \"DELETE_DATE_COUNTRY\",\r\n            place: place,\r\n            dateIndex: dateIndex,\r\n        }\r\n    }\r\n    else if (type ==='itinerary'){\r\n        return{\r\n            type: \"DELETE_DATE_ITINERARY\",\r\n            place: place,\r\n            dateIndex: dateIndex,\r\n        }\r\n    }\r\n    return {}\r\n};\r\nexport const addNewDate = (place,type,start,end) => {\r\n    if (type === 'city'){\r\n        return{\r\n            type: \"NEW_DATE_CITY\",\r\n            place: place,\r\n            start: start,\r\n            end: end,\r\n        }\r\n    }\r\n    else if (type ==='country'){\r\n        return{\r\n            type: \"NEW_DATE_COUNTRY\",\r\n            place: place,\r\n            start: start,\r\n            end: end,\r\n        }\r\n    }\r\n    else if (type ==='itinerary'){\r\n        return{\r\n            type: \"NEW_DATE_ITINERARY\",\r\n            place: place,\r\n            start: start,\r\n            end: end,\r\n        }\r\n    }\r\n    return {}\r\n};\r\n\r\nexport const changeView = (id) => {\r\n    let view = {\r\n        byID: {\r\n            city: id,\r\n        }\r\n    };\r\n    return {\r\n        type: 'CHANGE_VIEW',\r\n        newView: view,\r\n    };\r\n};\r\n\r\nexport const itineraryNameChange = (name) => {\r\n    return {\r\n        type: 'NAME_CHANGE',\r\n        name: name,\r\n    };\r\n};\r\n\r\nexport const saveItinerary= (itinerary) => {\r\n    return {\r\n        type: 'SAVE_ITINERARY',\r\n        payload: itinerary\r\n    }\r\n}\r\n\r\nexport const getCurrentItineraryID = (id) => {\r\n    return {\r\n        type: \"GET_CURRENT_ITINERARY_ID\",\r\n        payload: id\r\n    }\r\n}\r\n\r\nexport const insertNewCountry = (id, name) => {\r\n    return{\r\n        type: \"NEW_COUNTRY\",\r\n        id: id,\r\n        name: name,\r\n    }\r\n}\r\nexport const insertNewCity = (id, name,countryID) => {\r\n    return{\r\n        type: \"NEW_CITY\",\r\n        id: id,\r\n        name: name,\r\n        countryID: countryID,\r\n    }\r\n}\r\nexport const setItineraryFromDB = (itinerary) => {\r\n    return{\r\n        type: \"SET_ITINERARY\",\r\n        payload:itinerary,\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Iteneraries.css';\r\nimport Notes from \"./Notes\";\r\nimport Info from \"./Info\";\r\nimport DropPhotos from \"./DropPhotos\";\r\nimport Photos from \"./Photos\";\r\nimport InfoPhotos from \"./InfoPhotos\";\r\nimport {connect} from \"react-redux\";\r\nimport {deleteLocation} from \"../actions\";\r\nimport './Location.css';\r\n//import { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport NotesOutlinedIcon from '@material-ui/icons/NotesOutlined';\r\n// import EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\nimport DeleteOutlineRoundedIcon from '@material-ui/icons/DeleteOutlineRounded';\r\nimport PhotoAlbumOutlinedIcon from '@material-ui/icons/PhotoAlbumOutlined';\r\n\r\nclass Location extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            showNotes: false,\r\n            showInfo: false,\r\n            showPhotos: false\r\n        };\r\n        this.handleEditBtnClick = this.handleEditBtnClick.bind(this);\r\n        this.handleInfoBtnClick = this.handleInfoBtnClick.bind(this);\r\n        this.handlePhotoBtnClick = this.handlePhotoBtnClick.bind(this);\r\n        this.handleAddPhotoBtnClick = this.handleAddPhotoBtnClick.bind(this);\r\n\r\n\r\n    }\r\n\r\n    handleEditBtnClick() {\r\n        this.setState({\r\n            showNotes: !this.state.showNotes,\r\n            showInfo: false,\r\n            showPhotos: false,\r\n            showAddPhotos: false\r\n        })\r\n    }\r\n\r\n    handleInfoBtnClick() {\r\n        this.setState({\r\n            showNotes: false,\r\n            showInfo: !this.state.showInfo,\r\n            showPhotos: false,\r\n            showAddPhotos: false\r\n        })\r\n    }\r\n\r\n    handlePhotoBtnClick() {\r\n        this.setState({\r\n            showNotes: false,\r\n            showInfo: false,\r\n            showPhotos: !this.state.showPhotos,\r\n            showAddPhotos: false\r\n        })\r\n    }\r\n\r\n    handleAddPhotoBtnClick() {\r\n        this.setState({\r\n            showNotes: false,\r\n            showInfo: false,\r\n            showPhotos: false, \r\n            showAddPhotos: !this.state.showAddPhotos\r\n        });\r\n    }\r\n\r\n    renderSubComp(){\r\n       if (this.state.showNotes) {\r\n           const currLoc = this.props.locations[this.props.idx];\r\n           console.log(currLoc);\r\n         return <Notes location={this.props.locations} idx={this.props.idx} id={this.props.id}/>\r\n        }\r\n        else if (this.state.showInfo) {\r\n            const currLoc = this.props.locations[this.props.idx];\r\n           console.log(currLoc);\r\n            return <Info location={this.props.locations} idx={this.props.idx} id={this.props.id}/>\r\n        }\r\n       else if (this.state.showPhotos) {\r\n           return <InfoPhotos location={this.props.locations} idx={this.props.idx} id={this.props.id}/>\r\n       } else if (this.state.showAddPhotos) {\r\n           let photos = this.props.locations[this.props.idx].userPhotos;\r\n           if (photos.length > 0){\r\n        return (<div>{photos.map((file) => <img src={file.preview} /> )}</div>  );\r\n           } else return null;\r\n    } else \r\n       return null;\r\n    }\r\n\r\n    render() {\r\n\r\n        return(\r\n            <div>\r\n            <div className=\"location-bar\">\r\n                <label className={\"location\"}>{this.props.name} </label>\r\n                <label className={\"address\"}> {this.props.address}</label>\r\n                <div className={\"buttonDiv\"}>\r\n\r\n                <IconButton className={\"btn\"} aria-label=\"Info\" name=\"Info\" onClick={this.handleInfoBtnClick}>\r\n                <ExpandMoreOutlinedIcon />\r\n                </IconButton>\r\n\r\n\r\n                <IconButton className={\"btn\"} aria-label=\"Edit\" name=\"Edit\" onClick={this.handleEditBtnClick}>\r\n                <NotesOutlinedIcon />\r\n                </IconButton>\r\n\r\n\r\n\r\n                <IconButton className={\"btn\"} aria-label=\"Photo\" name=\"Photo\" onClick={this.handlePhotoBtnClick}>\r\n                <PhotoAlbumOutlinedIcon />\r\n                </IconButton>\r\n                \r\n                <IconButton aria-label=\"Photo\" name=\"Photo\" >\r\n                <DropPhotos location={this.props.locations} idx={this.props.idx} id={this.props.id}/>\r\n                </IconButton>\r\n\r\n                <IconButton className={\"btn\"} aria-label=\"Delete\"  name=\"Delete\" onClick={() => this.props.deleteLocation(this.props.id)}>\r\n                <DeleteOutlineRoundedIcon />\r\n                </IconButton>\r\n\r\n\r\n\r\n\r\n                </div>\r\n            </div>\r\n            <div className=\"display-notes\">\r\n            {this.renderSubComp()}\r\n            </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n        locations: state.locations,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, {deleteLocation})(Location);\r\n","import React from \"react\";\r\nimport {connect} from 'react-redux';\r\nimport Popup from \"reactjs-popup\";\r\nimport { MuiPickersUtilsProvider,DatePicker  } from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport format from 'date-fns/format'\r\nimport {startDateChange, endDateChange, deleteDate, addNewDate} from \"../actions\";\r\nimport DateRangeIcon from '@material-ui/icons/DateRange';\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport './Dates.css';\r\nimport { green } from '@material-ui/core/colors';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\n\r\nclass Dates extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            openDialog: false,\r\n            errorMessage: \"\",\r\n        };\r\n    }\r\n\r\n    handleDateDelete(index){\r\n        this.props.deleteDate(this.props.place,this.props.type,index)\r\n    }\r\n    renderDatesPopup(){\r\n        let dates = [];\r\n        dates.push(<h1>{this.props.place.name} Dates</h1>)\r\n        this.props.place.dateRanges.forEach((item,index) => {\r\n            dates.push(\r\n                <div style={{fontSize: 20}}>\r\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                        <ul style={{paddingLeft: 15}}>\r\n                            <li>\r\n                                Date #{index+1}\r\n                                <div className={\"DatePicker\"}>\r\n                                    <DatePicker\r\n                                        label={\"Start Date\"}\r\n                                        value={new Date(item.start)}\r\n                                        onChange={(date)=>{this.handleChangeStartDate(date,index)}}\r\n                                        animateYearScrolling                                    />\r\n                                </div>\r\n                                <div className={\"DatePicker\"}>\r\n                                    <DatePicker\r\n                                        label={\"End Date\"}\r\n                                        value={new Date(item.end)}\r\n                                        onChange={(date)=>{this.handleChangeEndDate(date,index)}}\r\n                                        animateYearScrolling\r\n                                    />\r\n                                </div>\r\n                                <div style={{marginTop:10,display:\"inline-block\"}}>\r\n                                    <IconButton  key={index}aria-label=\"Delete\"  name=\"Delete\">\r\n                                        <DeleteForeverIcon color={\"secondary\"} onClick={this.handleDateDelete.bind(this,index)}/>\r\n                                    </IconButton>\r\n                                </div>\r\n\r\n                            </li>\r\n                        </ul>\r\n                    </MuiPickersUtilsProvider>\r\n                </div>\r\n            )\r\n        });\r\n        dates.push(\r\n            <Button variant=\"contained\" color=\"primary\" autoFocus onClick={this.addNewDate.bind(this)}>\r\n                NEW DATE\r\n            </Button>)\r\n        return dates;\r\n    }\r\n    addNewDate(){\r\n        let dateString = format(new Date(), 'yyyy/MM/dd');\r\n        console.log(dateString)\r\n        this.props.addNewDate(this.props.place,this.props.type,dateString,dateString)\r\n    }\r\n    handleClose(){\r\n        this.setState({openDialog: false});\r\n    }\r\n    handleChangeStartDate = (date,index) => {\r\n        let dateString = format(date, 'yyyy/MM/dd');\r\n        let endDateString = format(new Date(this.props.place.dateRanges[index].end), 'yyyy/MM/dd');\r\n        //All date validation here\r\n        if (Date.parse(dateString) <= Date.parse(endDateString)){\r\n            this.props.startDateChange(this.props.place,this.props.type,dateString,index)\r\n        }\r\n        else{\r\n            this.setState({openDialog: true, errorMessage:\"Start date cannot be after end date\"});\r\n        }\r\n    };\r\n    handleChangeEndDate = (date,index) => {\r\n        let dateString = format(date, 'yyyy/MM/dd');\r\n        let startDateString = format(new Date(this.props.place.dateRanges[index].start), 'yyyy/MM/dd');\r\n        //All date validation here\r\n        if (Date.parse(startDateString) <= Date.parse(dateString)){\r\n            this.props.endDateChange(this.props.place,this.props.type,dateString,index)\r\n        }\r\n        else{\r\n            this.setState({openDialog: true, errorMessage:\"End date cannot be before start date\"});\r\n        }\r\n    };\r\n    render() {\r\n        let datesComponent =(\r\n            <div className={\"datesDiv\"}>\r\n                <ul className={\"zeroPad zeroMarg displayInline\"}>\r\n                {this.props.place.dateRanges.map((date,index) => (\r\n                    <li key={index}>{date.start + \" - \" + date.end}</li>\r\n                ))}\r\n            </ul>\r\n                <div className={\"buttonCalendar\"}>\r\n                    <IconButton  aria-label=\"Edit\" name=\"Edit\" >\r\n                        <DateRangeIcon className={\"edit-btn\"} style={{ color: green[500] }}/>\r\n                    </IconButton>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n        return(\r\n            <div className={this.props.class+ \"\"}>\r\n\r\n                <Popup contentStyle={{width: \"600px\"}}trigger={datesComponent} modal>\r\n                    {close => (\r\n                        <div className=\"modal\" style={{color: \"black\"}}>\r\n                            <a className=\"close\" onClick={close}>\r\n                                &times;\r\n                            </a>\r\n                            {this.renderDatesPopup()}\r\n                        </div>\r\n                    )}\r\n                </Popup>\r\n                <Snackbar open={this.state.openDialog} autoHideDuration={5000} onClose={this.handleClose.bind(this)}>\r\n                    <Alert onClose={this.handleClose.bind(this)} severity=\"error\">\r\n                        {this.state.errorMessage}\r\n                    </Alert>\r\n                </Snackbar>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n        locations: state.locations,\r\n        currentView: state.currentView,\r\n        cities: state.cities,\r\n        countries: state.countries,\r\n        itinerary: state.itinerary,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps,{addNewDate,deleteDate,startDateChange,endDateChange})(Dates);","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport axios from 'axios'; \r\nimport {saveItinerary,getCurrentItineraryID} from \"../actions\"\r\nconst { uuid } = require('uuidv4');\r\n\r\nclass SaveButton extends React.Component {\r\n\r\n    saveItinerary = () => {\r\n        console.log(\"Save itinerary called\")\r\n        let Itinerary = {};\r\n        if (this.props.currentItinerary == null) {\r\n            console.log(\"Current Itinerary has not been saved yet\");\r\n            Itinerary = {\r\n                id: uuid(),\r\n                locations: this.props.locations,\r\n                cities: this.props.cities,\r\n                countries: this.props.countries,\r\n                itinerary: this.props.itinerary,\r\n            }\r\n            this.props.saveItinerary(Itinerary);\r\n        } else {\r\n            Itinerary = {\r\n                id: this.props.currentItinerary.id,\r\n                locations: this.props.locations,\r\n                cities: this.props.cities,\r\n                countries: this.props.countries,\r\n                itinerary: this.props.itinerary,\r\n            };\r\n            this.props.saveItinerary(Itinerary);\r\n        }\r\n\r\n        //console.log(Itinerary.id);\r\n        this.props.getCurrentItineraryID(Itinerary.id);\r\n        axios.get(\"/itinerary/exist/\"+ Itinerary.id)\r\n            .then(res => {\r\n                console.log(\"exist worked\");\r\n                console.log(res.data);\r\n                if(res.data) {\r\n                    console.log(\"Going to call patch\");\r\n                    console.log(Itinerary);\r\n                    console.log(this.props.currentItineraryID)\r\n                    axios.patch(\"/itinerary/save/\" + this.props.currentItineraryID, Itinerary)\r\n                    .then(res=> {\r\n                        console.log(res.data);\r\n                    })\r\n                    .catch(err=> {\r\n                        console.log(err);\r\n                    })\r\n                } else {\r\n                console.log(\"Going to call post\");\r\n                axios.post(\"/itinerary/save\", Itinerary)\r\n                    .then(res => {\r\n                        console.log(\"Itinerary added to db and the Object id is \"  + res.data);\r\n                    })\r\n                    .catch(err => {\r\n                        console.log(err);\r\n                    })\r\n\r\n                }\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <button className={\"addLocationButton\"} onClick={() => this.saveItinerary()}>Save Itinerary</button>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n        currentItinerary: state.currentItinerary,\r\n        locations: state.locations,\r\n        cities: state.cities,\r\n        countries: state.countries,\r\n        currentItineraryID: state.currentItineraryID,\r\n        itinerary: state.itinerary,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, {saveItinerary,getCurrentItineraryID})(SaveButton);","import React from \"react\";\r\nimport Location from \"./Location\";\r\nimport './Iteneraries.css';\r\nimport {connect} from 'react-redux';\r\nimport Dates from \"./Dates\";\r\nimport Collapsible from \"react-collapsible\";\r\nimport SaveButton from \"./SaveButton\";\r\n\r\n\r\nclass City extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            locations: this.props.locations\r\n        };\r\n    }\r\n\r\n\r\n    componentWillUpdate(prevProps) {\r\n        if (prevProps.locations !== this.props.locations) {\r\n            this.setState({\r\n                ...this.state,\r\n                locations: this.props.locations\r\n            })\r\n        }\r\n    }\r\n\r\n    renderItinerary = () => {\r\n        const content = [];\r\n        const locations = this.props.locations;\r\n        for (const country of this.props.countries) {\r\n            content.push(\r\n                <Collapsible className=\"cityDiv\" key={country.name} trigger={\r\n                    <div>\r\n                        <h3>{country.name}</h3>\r\n                        <Dates place={country} class={\"date\"} type={\"country\"}/>\r\n                    </div>\r\n                }>\r\n\r\n                {this.props.cities.filter(function(city){\r\n                    return city.countryID == country.id;\r\n                }).map(function(city,index){\r\n                    return (<div key={index}  onClick={() => this.props.changeView(country,city)}>{city.name}</div>)\r\n                },this)\r\n                }\r\n            </Collapsible>\r\n            )\r\n        }\r\n        return content;\r\n    }\r\n\r\n    render() {\r\n        //Empty locations/cities. render a 'guide' on how to add to itinerary\r\n        if (this.props.currentView.byID.city === -1) {\r\n            return (\r\n                <div className={\"cityDiv\"}>\r\n                    <h3>START ADDING TO THE ITINERARY BY SEARCHING A LOCATION AND HITTING\r\n                    THE 'ADD LOCATION' BUTTON</h3>\r\n                </div>\r\n            );\r\n        }\r\n        let cityToRenderID = this.props.currentView.byID.city;\r\n        let cityToRender = this.props.cities.filter(function(city){\r\n            return city.id == cityToRenderID;\r\n        });\r\n        cityToRender = cityToRender[0];\r\n\r\n        let countryToRenderID = cityToRender.countryID;\r\n        let countryToRender = this.props.countries.filter(function(country){\r\n            return country.id == countryToRenderID;\r\n        });\r\n        countryToRender = countryToRender[0];\r\n\r\n        let locationsToRender = this.props.locations.filter(function(loc){\r\n            console.log(\"REnder CITY\",loc.location);\r\n            return loc.cityID === cityToRenderID;\r\n        });\r\n\r\n        \r\n\r\n        return (\r\n            <div className={\"cityDiv\"}>\r\n                <h2>{cityToRender.name}, {countryToRender.name}</h2>\r\n                <Dates place={cityToRender} class={\"datesDiv bottomBorder\"} type={\"city\"}/>\r\n                <div className={\"locationsDiv\"}>\r\n                    <ul className={\"zeroPad zeroMarg\"}>\r\n                        {locationsToRender.map((loc,index) => (\r\n                            <li key={index}> <Location idx={index} name={loc.location} address={loc.address} id={loc.id}/></li>\r\n                        ))}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n        locations: state.locations,\r\n        itinerary: state.itinerary,\r\n        currentView: state.currentView,\r\n        cities: state.cities,\r\n        countries: state.countries,\r\n        lists: state.lists,\r\n        msgId: state.msgId,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(City);\r\n//\r\n// const muiStyles = {\r\n//     bg: {\r\n//         position: \"absolute\",\r\n//         backgroundImage: `url(${require(\"../assets/vancouver.jpg\")})`,\r\n//         backgroundSize: \"cover\",\r\n//         height: \"100vh\",\r\n//         width: \"100vw\",\r\n//         top: \"0\",\r\n//         left: \"0\",\r\n//         color: \"#000000\",\r\n//         fontSize: \"30px\"\r\n//     }\r\n// };\r\n\r\n// export default withStyles(muiStyles)(City);","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport blue from \"@material-ui/core/colors/blue\";\r\nimport {connect} from \"react-redux\";\r\nimport {Avatar} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(1)\r\n    },\r\n    title: {\r\n        flexGrow: 1\r\n    },\r\n    appBar: {\r\n        height: \"50px\",\r\n        bachgroundColor: \"#000000\"\r\n    },\r\n    toolBar: {\r\n        top: \"-7px\"\r\n    }\r\n}));\r\n\r\nfunction Navbar(props) {\r\n    const { authentication } = props;\r\n    const classes = useStyles();\r\n    const [auth, setAuth] = React.useState(authentication.loginStatus);\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const open = Boolean(anchorEl);\r\n\r\n    const handleChange = (event) => {\r\n        setAuth(event.target.checked);\r\n    };\r\n\r\n    const handleMenu = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar position=\"static\" className={classes.appBar}>\r\n                <Toolbar className={classes.toolBar}>\r\n                    <IconButton edge=\"start\" className={classes.menuButton} color=\"blue\" aria-label=\"menu\">\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <div className={\"smallIcon\"}>\r\n                        <img src={require(\"../assets/trippin-logo.png\")}></img>\r\n                    </div>\r\n                    <Typography variant=\"h6\" className={classes.title}>\r\n\r\n                    </Typography>\r\n                    {auth && (\r\n                        <div>\r\n                            <IconButton\r\n                                aria-label=\"account of current user\"\r\n                                aria-controls=\"menu-appbar\"\r\n                                aria-haspopup=\"true\"\r\n                                onClick={handleMenu}\r\n                                color=\"inherit\"\r\n                            >\r\n                                <Avatar src={authentication.profilePic} />\r\n                            </IconButton>\r\n                            <Menu\r\n                                id=\"menu-appbar\"\r\n                                anchorEl={anchorEl}\r\n                                anchorOrigin={{\r\n                                    vertical: 'top',\r\n                                    horizontal: 'right',\r\n                                }}\r\n                                keepMounted\r\n                                transformOrigin={{\r\n                                    vertical: 'top',\r\n                                    horizontal: 'right',\r\n                                }}\r\n                                open={open}\r\n                                onClose={handleClose}\r\n                            >\r\n                                <MenuItem onClick={handleClose}>Profile</MenuItem>\r\n                                <MenuItem onClick={handleClose}>My account</MenuItem>\r\n                            </Menu>\r\n\r\n                        </div>\r\n                    )}\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => { //name is by convention\r\n    return {\r\n        authentication: state.authentication\r\n    }; //now it will appear as props\r\n};\r\nexport default connect(mapStateToProps)(Navbar);","import {addLocation, changeView, insertNewCity, insertNewCountry} from \"../actions\";\r\nimport React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nconst { uuid } = require('uuidv4');\r\n\r\nclass LocationButton extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n    render() {\r\n        return (\r\n            <button className={\"addLocationButton\"} onClick={this.addLocationToItinerary.bind(this)}>Add Location</button>\r\n        )\r\n    }\r\n    addLocationToItinerary() {\r\n        let isCitiesEmpty = (this.props.cities.length === 0) ? true : false\r\n        let currentMapLocation = this.props.mapLocation;\r\n\r\n        let city = currentMapLocation.Area;\r\n        let cityID = uuid();\r\n\r\n        let address = currentMapLocation.Address;\r\n        let country = currentMapLocation.Country;\r\n        let location = currentMapLocation.Name;\r\n        if (country === \"\")\r\n            return\r\n\r\n        if(this.props.countries.map(item => item.name).includes(country)){\r\n            if(this.props.cities.map(item => item.name).includes(city)){\r\n                //Country and City exist in itinerary\r\n                let cityID = this.props.cities.filter((item) => {return item.name === city})[0].id;\r\n                console.log(cityID);\r\n                if(!this.props.locations.map(item => item.location).includes(location)){\r\n                    let locationID = uuid();\r\n                    this.props.addLocation(locationID,location,address,cityID);\r\n                }\r\n            }\r\n            //New city to add\r\n            else{\r\n                let countryID = this.props.countries.filter((item) => {return item.name === country})[0].id;\r\n                //New City to add\r\n                if (city !== \"\"){\r\n                    this.props.insertNewCity(cityID,city,countryID)\r\n                    //New Location to add\r\n                    if (city !== location){\r\n                        let locationID = uuid();\r\n                        this.props.addLocation(locationID,location,address,cityID);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else{\r\n            //New Country to add\r\n            let countryID = uuid();\r\n            //New City to add\r\n            if (city !== \"\"){\r\n                this.props.insertNewCity(cityID,city,countryID)\r\n                //New Location to add\r\n                if (city !== location){\r\n                    let locationID = uuid();\r\n                    this.props.addLocation(locationID,location,address,cityID);\r\n                }\r\n            }\r\n            this.props.insertNewCountry(countryID,country);\r\n        }\r\n        console.log(this.props.cities)\r\n        if (isCitiesEmpty){\r\n            this.props.changeView(cityID);\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n        mapLocation: state.mapLocation,\r\n        cities: state.cities,\r\n        countries: state.countries,\r\n        locations: state.locations,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps,{changeView,addLocation,insertNewCountry,insertNewCity})(LocationButton);","import React from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport {\r\n    changeView,\r\n    renderLocation,\r\n    getCurrentItineraryID,\r\n    saveItinerary,\r\n    itineraryNameChange,\r\n    deleteCountry, deleteCity, deleteLocation, renderCity, renderCountry, setItineraryFromDB\r\n} from '../actions';\r\nimport './Itinerary.css';\r\nimport './Iteneraries.css';\r\nimport Collapsible from \"react-collapsible\";\r\nimport City from \"./City\";\r\nimport Map from \"./Map\";\r\nimport SaveButton from \"./SaveButton\";\r\nimport LocationButton from \"./LocationButton\";\r\nimport Dates from \"./Dates\";\r\nimport axios from \"axios\";\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport { TextField } from '@material-ui/core';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nclass Itinerary extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            editItinerary: false,\r\n            name: this.props.itinerary.name,\r\n            openDialog: false,\r\n            idToDelete: null,\r\n            deletionIsCountry: false,\r\n            nameOfDeletion: null,\r\n        };\r\n    }\r\n\r\n    componentDidMount(){\r\n        axios.get(\"/itinerary/\")\r\n            .then(response => {\r\n            if(response.data.length > 0){\r\n                console.log(response.data)\r\n                this.props.renderLocation(response.data[0].locations);\r\n                this.props.renderCity(response.data[0].cities);\r\n                this.props.renderCountry(response.data[0].countries);\r\n                this.props.getCurrentItineraryID(response.data[0]._id);\r\n                this.props.saveItinerary({id: response.data[0].id});\r\n                this.props.setItineraryFromDB(response.data[0].itinerary);\r\n                if(response.data[0].cities.length >= 1){\r\n                    this.props.changeView(response.data[0].cities[0].id)\r\n                }\r\n                else{\r\n                    this.props.changeView(-1)\r\n                }\r\n            } else {\r\n                this.props.renderLocation([]);\r\n            }\r\n        })\r\n            .catch(err => console.log(\"Err: \" + err));\r\n    }\r\n\r\n\r\n    renderItinerary() {\r\n        const content = [];\r\n        const locations = this.props.locations;\r\n        for (const country of this.props.countries) {\r\n            content.push(\r\n                <Collapsible key={country.name} trigger={\r\n                    <div>\r\n                        <div>\r\n                            <h1 className={\"itinerary_name\"}>{country.name}</h1>\r\n                            <IconButton className={\"edit-btn\"} aria-label=\"Delete\"  name=\"Delete\">\r\n                                <DeleteForeverIcon color=\"secondary\"\r\n                                                   onClick={(event) => {this.handleDialogOpen(country,true);event.stopPropagation();}}/>\r\n                            </IconButton>\r\n                        </div>\r\n                            <Dates place={country} class={\"dates\"} type={\"country\"}/>\r\n                    </div>\r\n                }>\r\n\r\n                {this.props.cities.filter(function(city){\r\n                    return city.countryID === country.id;\r\n                }).map(function(city,index){\r\n                    return (\r\n                        <div key={index} className=\"stripe item-font relativeDiv\" onClick={() => this.props.changeView(city.id)}>\r\n                            {city.name}\r\n                            <div className={\"buttonDivDelete\"}>\r\n                                <IconButton  aria-label=\"Delete\"  name=\"Delete\">\r\n                                    <DeleteForeverIcon color=\"secondary\"  onClick={(event) => {this.handleDialogOpen(city,false);event.stopPropagation();}}/>\r\n                                </IconButton>\r\n                            </div>\r\n\r\n                        </div>\r\n                    )\r\n                },this)\r\n                }\r\n            </Collapsible>\r\n            )\r\n        }\r\n        return content;\r\n    }\r\n    handleEditItineraryName(){\r\n        if (!this.state.editItinerary){\r\n            this.setState({editItinerary: !this.state.editItinerary});\r\n        }\r\n        else{\r\n            //Do other stuff  first\r\n            if (this.state.name.length > 0){\r\n                this.props.itineraryNameChange(this.state.name);\r\n                this.setState({editItinerary: !this.state.editItinerary});\r\n            }\r\n        }\r\n    }\r\n    renderItineraryName(){\r\n        //Itinerary is not being edited\r\n        if (!this.state.editItinerary){\r\n            return (\r\n                <div>\r\n                    <h1 className={\"itinerary_name\"}>{this.props.itinerary.name}</h1>\r\n                    <IconButton  className={\"edit-btn\"} aria-label=\"Edit\" name=\"Edit\" onClick={this.handleEditItineraryName.bind(this)}>\r\n                        <EditOutlinedIcon />\r\n                    </IconButton>\r\n                </div>\r\n            );\r\n        }\r\n        else{\r\n            return(\r\n                <div id={\"itinerary-div\"}>\r\n                    <div style={{paddingTop:10}}>\r\n                        <TextField id=\"filled-basic\"\r\n                                    label=\"New Itinerary Name\"\r\n                                    variant=\"outlined\"\r\n                                    error ={this.state.name.length === 0 ? true : false }\r\n                                    helperText={this.state.name.length === 0 ? \"Itinerary name cannot be empty!\" : \"\" }\r\n                                    defaultValue={this.props.itinerary.name}\r\n                                    inputProps={{\r\n                                        style: {\r\n                                            fontSize: \"2.5em\",\r\n                                            fontWeight: \"bold\",\r\n                                        }}} // font styling of input text\r\n                                    onChange={this.handleNameChange.bind(this)}/>\r\n                        <IconButton  aria-label=\"Edit\" name=\"Edit\" onClick={this.handleEditItineraryName.bind(this)}>\r\n                            <SaveIcon className={\"edit-btn\"}/>\r\n                        </IconButton>\r\n                    </div>\r\n\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n    handleNameChange(event){\r\n        this.setState({\r\n            name: event.target.value,\r\n        });\r\n    }\r\n    renderDeleteConfirmation() {\r\n        let placeType = this.state.deletionIsCountry ? \"country\" : \"city\"\r\n\r\n        let deletionMessage = \"Are you sure you want to delete the \"\r\n            + placeType + \" '\"+ this.state.nameOfDeletion+\"' from '\" +\r\n            this.props.itinerary.name + \"' ?\";\r\n        return (<Dialog\r\n            open={this.state.openDialog}\r\n            onClose={this.handleClose.bind(this)}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n        >\r\n            <DialogTitle id=\"alert-dialog-title\">{deletionMessage}</DialogTitle>\r\n            <DialogActions>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    startIcon={<DeleteIcon />}\r\n                    onClick={this.deleteFromItinerary.bind(this)}\r\n                >\r\n                    Delete\r\n                </Button>\r\n                <Button onClick={this.handleClose.bind(this)} variant=\"contained\" color=\"primary\" autoFocus>\r\n                    Cancel\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>)\r\n    }\r\n\r\n    handleClose(){\r\n        this.setState({openDialog: false});\r\n    }\r\n    handleDialogOpen(place,isCountry){\r\n        // stopBubbling(this.event);\r\n        this.setState({\r\n            openDialog: true,\r\n            idToDelete: place.id,\r\n            deletionIsCountry: isCountry,\r\n            nameOfDeletion: place.name,});\r\n    }\r\n    deleteFromItinerary(){\r\n        let countries = this.props.countries;\r\n        let cities = this.props.cities;\r\n        let citiesReference = this.props.cities;\r\n        let locations = this.props.locations;\r\n        console.log(this.state.deletionIsCountry)\r\n        if (this.state.deletionIsCountry){\r\n            //cascade deletes to every city and location in delete country\r\n            cities = cities.filter((item) => item.countryID === this.state.idToDelete);\r\n            console.log(cities)\r\n            for (const city of cities){\r\n                //Find a new city to display\r\n                if (city.id === this.props.currentView.byID.city){\r\n                    let cityToDisplayIndex = this.props.cities.findIndex((item) => {\r\n                        return city.id !== item.id;\r\n                    });\r\n                    //No city left to display\r\n                    if(cityToDisplayIndex === -1 || countries.length === 1)\r\n                        this.props.changeView(-1);\r\n                    else\r\n                        this.props.changeView(this.props.cities[cityToDisplayIndex].id);\r\n                }\r\n                this.props.deleteCity(city.id);\r\n                locations = locations.filter((item) => item.cityID === city.id);\r\n                for (const location of locations){\r\n                    this.props.deleteLocation(location.id);\r\n                }\r\n            }\r\n            //Delete the country at the end of deleting cities and locations it contains\r\n            this.props.deleteCountry(this.state.idToDelete);\r\n        }\r\n        //Delete button hit for city, cascade deletions to locations and possibly change view\r\n        else{\r\n            //Find a new city to display\r\n            if (this.state.idToDelete === this.props.currentView.byID.city){\r\n                let cityToDisplayIndex = cities.findIndex((item) => {\r\n                    return this.state.idToDelete !== item.id;\r\n                });\r\n                if(cityToDisplayIndex === -1)\r\n                    this.props.changeView(-1);\r\n                else\r\n                    this.props.changeView(cities[cityToDisplayIndex].id);\r\n            }\r\n            this.props.deleteCity(this.state.idToDelete);\r\n            locations = locations.filter((item) => item.cityID === this.state.idToDelete);\r\n            for (const location of locations){\r\n                this.props.deleteLocation(location.id);\r\n            }\r\n\r\n        }\r\n        this.handleClose();\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <div className={\"itineraryHeader\"}>\r\n                    {this.renderItineraryName()}\r\n                </div>\r\n                <div className={\"itineraryHeader\"}>\r\n                    <Dates place={this.props.itinerary} class={\"dates itinerary_dates\"} type={\"itinerary\"}/>\r\n                </div>\r\n                {this.renderItinerary()}\r\n                {/*<City/>*/}\r\n                {/*<LocationButton/>*/}\r\n                {/*<SaveButton/>*/}\r\n                {/*<Map className={\"map\"}/>*/}\r\n                {this.renderDeleteConfirmation()}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n//state has entire state of app!!\r\nconst mapStateToProps = (state) => { //name is by convention\r\n    return {\r\n        lists: state.lists,\r\n        msgId: state.msgId,\r\n        countries: state.countries,\r\n        cities: state.cities,\r\n        itinerary: state.itinerary,\r\n        locations: state.locations,\r\n        currentView: state.currentView,\r\n    }; //now it will appear as props\r\n};\r\nfunction stopBubbling(evt){\r\n    evt.stopPropagation();\r\n    evt.cancelBubble = true;\r\n}\r\n\r\nconst dispatch = {\r\n    changeView,\r\n    renderLocation,\r\n    renderCity,\r\n    renderCountry,\r\n    getCurrentItineraryID,\r\n    saveItinerary,\r\n    itineraryNameChange,\r\n    deleteCity,\r\n    deleteCountry,\r\n    deleteLocation,\r\n    setItineraryFromDB,\r\n};\r\nexport default connect(mapStateToProps, dispatch )(Itinerary);\r\n","import React from \"react\";\r\nimport { withStyles } from \"@material-ui/core\";\r\nimport City from \"./City\";\r\nimport './Itinerary.css';\r\nimport Map from \"./Map\";\r\nimport Navbar from \"./Navbar\";\r\nimport {connect} from \"react-redux\";\r\nimport {addMsg, deleteMsg, selectMsg} from \"../actions\";\r\nimport Redirect from \"react-router-dom/es/Redirect\";\r\nimport Collapsible from \"react-collapsible\";\r\nimport { changeView, renderLocation, getCurrentItineraryID,saveItinerary} from '../actions';\r\nimport './Itinerary.css';\r\nimport './Iteneraries.css';\r\nimport Dates from \"./Dates\";\r\nimport axios from \"axios\";\r\n\r\nimport Itinerary from \"./Itinerary\";\r\nimport LocationButton from \"./LocationButton\";\r\nimport SaveButton from \"./SaveButton\";\r\n\r\nclass Itineraries extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n\r\n        };\r\n       // console.log(this.props.authentication.loginStatus );\r\n    }\r\n\r\n    componentDidMount(){\r\n        axios.get(\"/itinerary/\")\r\n            .then(response => {\r\n            if(response.data.length > 0){\r\n                this.props.renderLocation(response.data[0].locations);\r\n                this.props.getCurrentItineraryID(response.data[0]._id);\r\n                this.props.saveItinerary({id: response.data[0].id});\r\n            } else {\r\n                this.props.renderLocation([]);\r\n            }\r\n        })\r\n            .catch(err => console.log(\"Err\" + err));\r\n        console.log(\"GOT HERE!!!!\");\r\n    }\r\n\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        console.log(this.props.locations);\r\n        return(\r\n            <div className={classes.bg + \" bgScroll\"} >\r\n                <React.Fragment>\r\n                    <div><Navbar/></div>\r\n                    <div>\r\n                        <div className={classes.leftPanel}>\r\n                            <div className= {\"top-panel\"}>\r\n                                <Itinerary location={this.props.locations} />\r\n                                <div className={classes.bottomPanel}>\r\n                                    <div style={{marginTop: 5}}>\r\n                                        <LocationButton/>\r\n                                        <SaveButton/>\r\n                                    </div>\r\n                                    <Map/>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className={`${classes.rightPanel} ${classes.table}`}>\r\n                            <City/>\r\n                        </div>\r\n                    </div>\r\n                </React.Fragment>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n//state has entire state of app!!\r\nconst mapStateToProps = (state) => { //name is by convention\r\n    return {\r\n        lists: state.lists,\r\n        msgId: state.msgId,\r\n        countries: state.countries,\r\n        cities: state.cities,\r\n        itinerary: state.itinerary,\r\n        locations: state.locations,\r\n        authentication: state.authentication\r\n    }; //now it will appear as props\r\n};\r\n\r\nconst muiStyles = {\r\n    bg: {\r\n        position: \"absolute\",\r\n        height: \"100vh\",\r\n        width: \"100vw\",\r\n        top: \"0\",\r\n        left: \"0\",\r\n        color: \"#000000\",\r\n        fontSize: \"30px\"\r\n    },\r\n    rightPanel: {\r\n        position: \"absolute\",\r\n        // height: \"100vh\",\r\n        left: \"50vw\",\r\n        width: \"50vw\",\r\n    },\r\n    leftPanel: {\r\n        position: \"absolute\",\r\n        //height: \"100vh\",\r\n        width: \"50vw\",\r\n        top: \"6vh\"\r\n    },\r\n    bottomPanel: {\r\n        position: \"relative\",\r\n        //height: \"100vh\",\r\n        width: \"50vw\",\r\n    },\r\n    table: {\r\n        top: \"5vh\"\r\n    }\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps, { addMsg, selectMsg, deleteMsg, changeView, renderLocation, getCurrentItineraryID, saveItinerary })(withStyles(muiStyles)(Itineraries));","import React from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { addMsg, selectMsg, deleteMsg } from '../actions';\r\nimport Popup from \"reactjs-popup\";\r\nimport \"./Lists.css\";\r\nimport Collapsible from \"react-collapsible\";\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport {Checkbox} from \"@material-ui/core\";\r\nimport \"./Expandable.css\"\r\n\r\nclass Lists extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            currentTargetId: \"none\",\r\n            currentListId: -1,\r\n            addedCountry: [],\r\n            country: require(\"../assets/country_state_city\"),\r\n            countryList: []\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.addList = this.addList.bind(this);\r\n        this.renderCountry = this.renderCountry.bind(this);\r\n        this.renderList = this.renderList.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        let targetId = event.target.id;\r\n        this.setState(prevState => ({\r\n            [targetId]: !prevState[targetId]\r\n        }));\r\n        this.setState({currentTargetId: targetId});\r\n        if (this.state.targetId === false) {\r\n            // let countryName = event.target.parentNode.trigger;\r\n            let countryName = \"Albania\";\r\n            let index = null;\r\n\r\n            if (!this.state.addedCountry.includes(countryName)) {\r\n                this.setState({countryList: [{\"name\": [countryName],\r\n                    \"states\": {\"name\": \"Berat District\"}}]});\r\n                this.setState({addedCountry: [countryName]});\r\n\r\n\r\n            } else {\r\n                index = this.state.addedCountry.indexOf(countryName);\r\n                this.state.countryList[index].states.push({\"name\": [[event.target.name]]});\r\n            }\r\n        }\r\n    };\r\n\r\n    addList() {\r\n        let newList = {\r\n            \"listId\": null,\r\n            \"listName\": \"New List\",\r\n            \"countryList\": this.state.countryList\r\n        };\r\n        this.props.addMsg(newList);\r\n        this.setState({\r\n                countryList: []\r\n            });\r\n    }\r\n\r\n    renderCountry() {\r\n        const list = [];\r\n        let checkedName = null;\r\n        for (const item of this.state.country) {\r\n            list.push(\r\n                <React.Fragment>\r\n                <Collapsible trigger={item.name} id={item.id}>\r\n                    {item.states.map((state, index) => {\r\n                        checkedName = \"checkbox\" + index.toString();\r\n                        return (\r\n                            <div className=\"stripe\">\r\n                                <Checkbox checked={this.state.checkedName} onClick={this.handleChange} id={checkedName} name={state.name} />\r\n                                {state.name}\r\n                            </div>\r\n                        )})}\r\n                </Collapsible>\r\n                </React.Fragment>);\r\n        }\r\n\r\n        return list;\r\n    }\r\n\r\n    renderList() {\r\n        const content = [];\r\n        for (const list of this.props.lists) {\r\n            content.push(<Collapsible trigger={list.listName}>\r\n                {list.countryList.map(function(country) {\r\n                        return (<Collapsible trigger={country.name}>\r\n                            {country.states.map(function(state) {\r\n                                return (<div className=\"stripe\">{state.name}</div>)\r\n                            })}\r\n                        </Collapsible>)\r\n                }\r\n\r\n                )\r\n                }\r\n            </Collapsible>)\r\n                }\r\n        return content;\r\n        }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                {this.renderList()}\r\n                <Popup className=\"widthFix\" trigger={<button className=\"button\"> Add List </button>} modal>\r\n                    {close => (\r\n                        <div className=\"modal\">\r\n                            <a className=\"close\" onClick={close}>\r\n                                &times;\r\n                            </a>\r\n                            <div className=\"header\"> Modal Title </div>\r\n                            <div className=\"content\">\r\n                                {this.renderCountry()}\r\n                            </div>\r\n                            <div className=\"actions\">\r\n                                <button\r\n                                    className=\"button\"\r\n                                    onClick={() => {\r\n                                        this.addList();\r\n                                        close();\r\n                                    }}\r\n                                >\r\n                                    Add List\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </Popup>\r\n                <div> {JSON.stringify(this.props.lists[this.props.lists.length-1])} </div>\r\n                <div> {this.state.addedCountry.toString()} </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n//state has entire state of app!!\r\nconst mapStateToProps = (state) => { //name is by convention\r\n    return {\r\n        lists: state.lists,\r\n        msgId: state.msgId,\r\n        authentication: state.authentication\r\n    }; //now it will appear as props\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps, { addMsg, selectMsg, deleteMsg })(Lists);\r\n","import React from 'react';\r\nimport GoogleLogin from 'react-google-login';\r\nimport  FacebookLogin  from 'react-facebook-login';\r\nimport {connect} from \"react-redux\";\r\nimport { logIn, logOut } from \"../actions\";\r\nimport { withRouter } from 'react-router'\r\n// import { TiSocialFacebookCircular } from 'react-icons/lib/ti/social-facebook-circular';\r\n\r\nclass Login extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    responseGoogle = (response) => {\r\n        console.log(response);\r\n    };\r\n\r\n    responseFacebook = (response) => {\r\n            this.props.logIn({\r\n                \"name\": response.name,\r\n                \"email\": response.email,\r\n                \"profilePic\": response.picture.data.url\r\n            });\r\n            console.log(JSON.stringify(this.props.authentication));\r\n            this.props.history.push('/');\r\n    };\r\n\r\n    success = (response) => {\r\n        this.props.logIn({\r\n            \"name\": response.getBasicProfile().getGivenName(),\r\n            \"email\": response.getBasicProfile().getEmail(),\r\n            \"profilePic\": response.getBasicProfile().getImageUrl()\r\n        });\r\n        console.log(JSON.stringify(this.props.authentication));\r\n        this.props.history.push('/');\r\n    };\r\n\r\n\r\n\r\n    render() {\r\n        console.log(this.props.authentication);\r\n        return (\r\n            <div className='bg-login'>\r\n                <div className={\"smallIcon-login\"}>\r\n                    <img src={require(\"../assets/trippin-logo-bottom.png\")}></img>\r\n                </div>\r\n                <GoogleLogin\r\n                    clientId=\"839868194801-vofkpao3v7j2ktes9ojrramfk16gk9ec.apps.googleusercontent.com\"\r\n                    buttonText=\"Login with Google\"\r\n                    onSuccess={this.success}\r\n                    onFailure={this.responseGoogle}\r\n                    cookiePolicy={'single_host_origin'}\r\n                    className=\"google\"\r\n                />\r\n                <br/>\r\n                <FacebookLogin\r\n                    appId=\"197967948192976\"\r\n                    autoLoad={false}\r\n                    icon=\"fa-facebook\"\r\n                    fields=\"name,email,picture\"\r\n                    callback={this.responseFacebook}\r\n                    cssClass=\"facebook\"/>\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n};\r\n\r\nconst mapStateToProps = (state) => { //name is by convention\r\n    return {\r\n        authentication: state.authentication\r\n    }; //now it will appear as props\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps, { logIn, logOut })(withRouter(Login));","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\nimport Login from \"./Login\";\r\n\r\nconst AuthRoute = props => {\r\n    const { authentication } = props;\r\n    if (authentication.loginStatus === false) return <Redirect to=\"/login\" />;\r\n    return <Route {...props} />;\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    authentication: state.authentication\r\n});\r\n\r\nexport default connect(mapStateToProps)(AuthRoute);","import React from 'react';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { connect } from \"react-redux\";\r\nimport { getCurrentUserProfile } from \"../actions/users\";\r\nimport \"./ProfilePage.css\";\r\nimport { GoogleMap, LoadScript, MarkerClusterer, Marker } from \"@react-google-maps/api\";\r\nimport { EmailShareButton, FacebookShareButton, FacebookMessengerShareButton, EmailIcon, FacebookIcon, FacebookMessengerIcon } from \"react-share\";\r\n\r\nconst title = \"My Itinerary\";\r\n\r\nconst shareUrl = 'http://github.com';\r\n\r\nconst mapContainerStyle = {\r\n  height: '400px',\r\n  width: '600px',\r\n  display: 'inline-block',\r\n};\r\n\r\nconst center = { lat: -28.024, lng: 140.887 };\r\n\r\nconst locations = [\r\n  { lat: -31.56391, lng: 147.154312 },\r\n  { lat: -33.718234, lng: 150.363181 },\r\n  { lat: -33.727111, lng: 150.371124 },\r\n  { lat: -33.848588, lng: 151.209834 },\r\n  { lat: -33.851702, lng: 151.216968 },\r\n  { lat: -34.671264, lng: 150.863657 },\r\n  { lat: -35.304724, lng: 148.662905 },\r\n  { lat: -36.817685, lng: 175.699196 },\r\n  { lat: -36.828611, lng: 175.790222 },\r\n  { lat: -37.75, lng: 145.116667 },\r\n  { lat: -37.759859, lng: 145.128708 },\r\n  { lat: -37.765015, lng: 145.133858 },\r\n  { lat: -37.770104, lng: 145.143299 },\r\n  { lat: -37.7737, lng: 145.145187 },\r\n  { lat: -37.774785, lng: 145.137978 },\r\n  { lat: -37.819616, lng: 144.968119 },\r\n  { lat: -38.330766, lng: 144.695692 },\r\n  { lat: -39.927193, lng: 175.053218 },\r\n  { lat: -41.330162, lng: 174.865694 },\r\n  { lat: -42.734358, lng: 147.439506 },\r\n  { lat: -42.734358, lng: 147.501315 },\r\n  { lat: -42.735258, lng: 147.438 },\r\n  { lat: -43.999792, lng: 170.463352 },\r\n]\r\n\r\n// ----- not sure what this is used for -------//\r\n// const options = {\r\n//   imagePath:\r\n//     'https://developers.google.com/maps/documentation/javascript/examples/markerclusterer/m', // so you must have m1.png, m2.png, m3.png, m4.png, m5.png and m6.png in that folder\r\n// }\r\n\r\n\r\nclass Profilepage extends React.Component {\r\n  render() {\r\n\r\n    function createKey(location) {\r\n      return location.lat + location.lng\r\n    }\r\n\r\n    const MapWithMarkerClusterer = () => {\r\n      return (\r\n        <LoadScript\r\n          googleMapsApiKey={process.env.REACT_APP_API_KEY}\r\n          libraries={[\"places\"]}>\r\n          <GoogleMap id='marker-example' mapContainerStyle={mapContainerStyle} zoom={3} center={center}>\r\n            <MarkerClusterer /*options={options}*/>\r\n              {(clusterer) =>\r\n                locations.map((location) => (\r\n                  <Marker key={createKey(location)} position={location} clusterer={clusterer} />\r\n                ))\r\n              }\r\n            </MarkerClusterer>\r\n          </GoogleMap>\r\n        </LoadScript>\r\n      )\r\n    }\r\n\r\n\r\n    // <div class=\"mask rgba-black-light align-items-center\">\r\n    //       <Grid container className=\"container\" spacing={1}>\r\n    //         <Grid item xs>\r\n    //           <div className=\"profile-container\">\r\n    //             <link href=\"https://use.fontawesome.com/releases/v5.8.2/css/all.css\" rel=\"stylesheet\" />\r\n    //             <div className=\"profile-img\">\r\n    //               <img src={this.props.authentication.profilePic} />\r\n    //             </div>\r\n    //             <ul className=\"ul\">\r\n    //               <li> {this.props.authentication.name} </li>\r\n    //               <br />\r\n    //               <li> Email Address: {this.props.authentication.email} </li>\r\n    //               <br />\r\n    //                 You have visited {locations.length} countries\r\n    //                 <li> You have visited {locations.length} countries\r\n    //                   <MapWithMarkerClusterer className=\"display-map\"/>\r\n    //                 </li>\r\n    //             </ul>\r\n    //           </div>\r\n    //         </Grid>\r\n    //       </Grid>\r\n    //       </div>\r\n\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n          <div className=\"profile-bg\">\r\n            <div className=\"mask rgba-black-light align-items-center\">\r\n              <Grid container className=\"container\" spacing={2}>\r\n                <Grid item xs>\r\n                  <div className=\"profile-container\">\r\n                    <link href=\"https://use.fontawesome.com/releases/v5.8.2/css/all.css\" rel=\"stylesheet\" />\r\n                    <div className=\"profile-img\">\r\n                      <img src={this.props.authentication.profilePic} />\r\n                      <i className=\"fa fa-edit\"></i>\r\n                    </div>\r\n                    <ul className=\"ul\">\r\n                      <li> {this.props.authentication.name} </li>\r\n                      <br />\r\n                      <li> Email Address: {this.props.authentication.email} </li>\r\n                      <br />\r\n                      <li> You have visited {locations.length} countries\r\n                      <br />\r\n                      </li>\r\n                      <br />\r\n                      <li>\r\n                        <EmailShareButton\r\n                            url={shareUrl}\r\n                            subject={title}\r\n                            body=\"body\"\r\n                        >\r\n                          <EmailIcon size={32} round />\r\n                        </EmailShareButton>\r\n                        <FacebookShareButton\r\n                            url={shareUrl}\r\n                            quote={title}\r\n\r\n                        >\r\n                          <FacebookIcon size={32} round />\r\n                        </FacebookShareButton>\r\n                      </li>\r\n                    </ul>\r\n                    <div id=\"display-map\">\r\n                    <MapWithMarkerClusterer/>\r\n                    </div>\r\n                  </div>\r\n                </Grid>\r\n              </Grid>\r\n            </div>\r\n          </div>\r\n        </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n          authentication: state.authentication\r\n  };\r\n};\r\n\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, { getCurrentUserProfile})(Profilepage)\r\n","export const getCurrentItineraryID = (id) => {\r\n    return {\r\n        type: \"GET_CURRENT_ITINERARY_ID\",\r\n        payload: id\r\n    }\r\n}\r\n\r\nexport const getCurrentUserProfile = (userProfile) => {\r\n    return {\r\n        type: \"GET_CURRENT_USER_PROFILE\",\r\n        payload: userProfile\r\n    }\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport Home from \"./Home\";\r\nimport Map from \"./Map\";\r\nimport Itineraries from \"./Itineraries\";\r\nimport Itinerary from \"./Itinerary\";\r\nimport Lists from \"./Lists\";\r\nimport Login from \"./Login\";\r\nimport './fonts.css';\r\nimport AuthRoute from \"./AuthRoute\";\r\nimport Navbar from \"./Navbar\";\r\nimport ProfilePage from './ProfilePage';\r\n\r\n\r\n\r\n\r\n\r\nfunction App() {\r\n    return (\r\n        <Router>\r\n            <Navbar/>\r\n            <div>\r\n                <Route exact path=\"/itineraries\">\r\n                    <Itineraries />\r\n                </Route>\r\n               \r\n            </div>\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import {combineReducers} from 'redux';\r\nimport React from 'react';\r\nimport '../index.css';\r\n\r\nconst currentLocation = {\r\n    Name: \"\",\r\n    Address: \"\",\r\n    PlacesId: \"ChIJK7VbnXxxhlQRCbKQyeRwBJ4\",\r\n    Area: \"\",\r\n    Country: \"\",\r\n    Info: {}\r\n}\r\n\r\n\r\n/*** Handles all changes to current location\r\n * params =\r\n *      currentLocation - currentLocation selected in the itinerary list for editting\r\n *       action - valid actions are addNotes\r\n *              - (should also be able to have a setCurrentLocation that changes current location when selected) ***/\r\nconst currentLocationReducer = (currentLocation = {name: \"\", address: \"\", info: {}, notes: \"\"}, action) => {\r\n    if (action.type === 'ADD_NOTES') {\r\n        // change the notes of current location to the action.text\r\n        console.log(action.text + \"hereherehhere\");\r\n        currentLocation.notes = action.text;\r\n        console.log(JSON.stringify(currentLocation));\r\n        return currentLocation;\r\n    }\r\n    return currentLocation;\r\n};\r\n\r\n\r\n\r\nconst mapLocationReducer = (state = currentLocation, action) => {\r\n    switch(action.type) {\r\n        case 'GET_LOCATION':\r\n            return {\r\n                ...state,\r\n                Name: action.payload.placeName,\r\n                Address: action.payload.fulladdress,\r\n                PlacesId: action.payload.placeId,\r\n                Info: action.payload.info,\r\n                Area: action.payload.placeArea,\r\n                Country: action.payload.placeCountry\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nlet jsonObj = [{\r\n    \"listId\": 0,\r\n    \"listName\": \"Visited Countries/Cities\",\r\n    \"countryList\": [\r\n        {\r\n            \"id\": 199,\r\n            \"name\": \"Singapore\",\r\n            \"iso3\": \"SGP\",\r\n            \"iso2\": \"SG\",\r\n            \"phone_code\": \"65\",\r\n            \"capital\": \"Singapur\",\r\n            \"currency\": \"SGD\",\r\n            \"states\": [\r\n                {\r\n                    \"id\": 4651,\r\n                    \"name\": \"Central Singapore Community Development Council\",\r\n                    \"state_code\": \"01\",\r\n                    \"cities\": [\r\n                        {\r\n                            \"id\": 104057,\r\n                            \"name\": \"Singapore\",\r\n                            \"latitude\": \"1.28967000\",\r\n                            \"longitude\": \"103.85007000\"\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"id\": 4649,\r\n                    \"name\": \"North East Community Development Council\",\r\n                    \"state_code\": \"02\",\r\n                    \"cities\": []\r\n                },\r\n                {\r\n                    \"id\": 4653,\r\n                    \"name\": \"North West Community Development Council\",\r\n                    \"state_code\": \"03\",\r\n                    \"cities\": [\r\n                        {\r\n                            \"id\": 104058,\r\n                            \"name\": \"Woodlands\",\r\n                            \"latitude\": \"1.43801000\",\r\n                            \"longitude\": \"103.78877000\"\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"id\": 4650,\r\n                    \"name\": \"South East Community Development Council\",\r\n                    \"state_code\": \"04\",\r\n                    \"cities\": []\r\n                },\r\n                {\r\n                    \"id\": 4652,\r\n                    \"name\": \"South West Community Development Council\",\r\n                    \"state_code\": \"05\",\r\n                    \"cities\": []\r\n                }\r\n            ]\r\n        }]\r\n},\r\n    {\r\n        \"listId\": 1,\r\n        \"listName\": \"Wishlist!\",\r\n        \"countryList\": []\r\n    },\r\n\r\n];\r\n\r\nlet userState = {\r\n    \"loginStatus\": false,\r\n    \"name\": null,\r\n    \"email\": null,\r\n    \"profilePic\": null,\r\n    // \"id\": null,\r\n    \"visited\": null,\r\n    \"itineraries\": null\r\n};\r\n\r\nconst listReducer = (lists = jsonObj, action) => {\r\n    if (action.type === 'ADD_MSG') {\r\n        return [...lists, action.addMsg];\r\n    }\r\n    if (action.type === 'DELETE_MSG') {\r\n        return lists.filter((item, index) => index !== action.deleteMsg);\r\n    }\r\n    return lists;\r\n};\r\n\r\nconst selector = (msgId = 0, action) => {\r\n    if (action.type == 'SELECT_MSG') {\r\n        return action.selectMsg;\r\n    }\r\n    return msgId;\r\n};\r\n\r\nconst authenticationReducer = (authentication = userState, action) => {\r\n    if (action.type === \"LOGOUT\") {\r\n            let newAuth = {\r\n                \"loginStatus\": false,\r\n                \"name\": null,\r\n                \"email\": null,\r\n                \"profilePic\": null,\r\n               // \"id\": null,\r\n                \"visited\": null,\r\n                \"itineraries\": null\r\n            };\r\n            return newAuth;\r\n    }\r\n    if (action.type === \"LOGIN\") {\r\n        let newAuth = {\r\n            loginStatus: true,\r\n            name: action.logIn.name,\r\n            email: action.logIn.email,\r\n            profilePic: action.logIn.profilePic,\r\n           // id: action.logIn._id,\r\n            visited: action.logIn.visited,\r\n            itineraries: action.logIn.itineraries\r\n        };\r\n        return newAuth;\r\n    }\r\n    return authentication;\r\n};\r\n\r\n\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n\r\n\r\n\r\n\r\n\r\nconst defaultLocations = [{id:0, location: \"Rogers Arena\", address: \"800 Griffiths Way, Vancouver, BC V6B 6G1\", cityID: 0, notes: \"\", info: {}, userPhotos: []},\r\n    {id:1, location: \"Playland\", address: \"2901 E Hastings St, Vancouver, BC V5K 5J1\", cityID: 0, notes: \"\", info: {}, userPhotos: []},\r\n    {id:2, location: \"Science World\", address: \"1455 Quebec St, Vancouver, BC V6A 3Z7\", cityID: 0, notes: \"\", info: {}, userPhotos: []},\r\n    {id:3, location: \"Stanley Park\", address: \" Vancouver, BC V6G 1Z4\", cityID: 0, note: \"\", info: {}, userPhotos: []},\r\n    {id:4, location: \"Capilano Suspension Bridge\", address: \"3735 Capilano Rd, North Vancouver, BC V7R 4J1\", cityID: 0, notes: \"\", info: {}, userPhotos: []},\r\n    {id:5, location: \"SHOULD NOT RENDER THIS LOCATION\", address: \"3735 Capilano Rd, North Vancouver, BC V7R 4J1\", cityID: 100, notes: \"\", info: {}, userPhotos: []},\r\n    {id:6, location: \"Craigdarroch Castle\", address: \"1050 Joan Crescent, Victoria, BC V8S 3L5\", cityID: 2, notes: \"\", info: {}, userPhotos: []},\r\n    {id:7, location: \"Alcatraz Island\", address: \"San Francisco, CA 94133, United States\", cityID: 1, notes: \"\", info: {}, userPhotos: []}];\r\n\r\nconst locationsReducer = (locations = defaultLocations, action) => {\r\n    if (action.type === \"ADD_LOCATION\"){\r\n        let newArray = locations.slice();\r\n        newArray.push(action.add);\r\n        console.log(\"newArray: \", newArray);\r\n        return newArray;\r\n    }\r\n    else if (action.type === \"DEL_LOCATION\"){\r\n        let newArray = locations.slice();\r\n        let indexToRemove = newArray.findIndex((item) => {\r\n           return action.location_id === item.id;\r\n        });\r\n        newArray.splice(indexToRemove, 1);\r\n        return newArray;\r\n    }\r\n    else if (action.type === \"NEW_LOCATION\"){\r\n        let newLocation = {\r\n            id: action.location_id,\r\n            location: action.location_name,\r\n            address: action.location_address,\r\n            cityID: action.cityID,\r\n            notes: \"\",\r\n            info: {},\r\n        };\r\n        return locations.concat(newLocation);\r\n    }\r\n    else if (action.type === \"RENDER_LOCATION\"){\r\n        return action.payload;\r\n    }\r\n    else if (action.type === \"ADD_NOTES\"){\r\n        let notes = action.add.notes;\r\n        let index = action.add.index;\r\n        console.log(index);\r\n        console.log(locations[index]);\r\n        locations[index].notes = notes;\r\n        return locations;\r\n    }\r\n    else if (action.type == \"ADD_PHOTOS\"){\r\n        let photos = action.add.files;\r\n        let index = action.add.index;\r\n        console.log(index);\r\n        console.log(locations[index]);\r\n        locations[index].userPhotos.push(photos);\r\n        return locations;\r\n    }\r\n\r\n\r\n    return locations;\r\n};\r\n\r\nconst defaultCities = [{name: \"Vancouver\", id: 0, countryID: 0, dateRanges : [{start: \"2020/08/20\", end: \"2020/08/21\"}, {start: \"2020/08/20\", end: \"2020/08/21\"}]},\r\n    {name: \"San Francisco\", id: 1, countryID: 1, dateRanges : [{start: \"2020/08/21\", end: \"2020/08/22\"}]},\r\n    {name: \"Victoria\", id: 2, countryID: 0, dateRanges : [{start: \"2020/08/22\", end: \"2020/08/23\"}]}];\r\nconst cityReducer = (cities = defaultCities, action) =>{\r\n    if (action.type === 'START_DATE_CHANGE_CITY'){\r\n        let newArray = cities.slice();\r\n        let indexToChange = newArray.findIndex((item) => {\r\n            return action.place.id === item.id;\r\n        });\r\n        newArray[indexToChange].dateRanges[action.dateIndex].start = action.date;\r\n        return newArray\r\n    }\r\n    else if (action.type === 'END_DATE_CHANGE_CITY'){\r\n        let newArray = cities.slice();\r\n        let indexToChange = newArray.findIndex((item) => {\r\n            return action.place.id === item.id;\r\n        });\r\n        newArray[indexToChange].dateRanges[action.dateIndex].end = action.date;\r\n        return newArray\r\n    }\r\n    else if (action.type === \"NEW_CITY\"){\r\n        let city = {\r\n            name: action.name,\r\n            id: action.id,\r\n            dateRanges: [],\r\n            countryID: action.countryID,\r\n        };\r\n        return cities.concat(city);\r\n    }\r\n    else if (action.type ===\"DEL_CITY\"){\r\n        let newArray = cities.slice();\r\n        let indexToRemove = newArray.findIndex((item) => {\r\n            return action.location_id === item.id;\r\n        });\r\n        newArray.splice(indexToRemove, 1);\r\n        return newArray;\r\n    }\r\n    else if (action.type === 'DELETE_DATE_CITY'){\r\n        let newArray = cities.slice();\r\n        let indexToChange = newArray.findIndex((item) => {\r\n            return action.place.id === item.id;\r\n        });\r\n        newArray[indexToChange].dateRanges.splice(action.dateIndex,1);\r\n        return newArray\r\n    }\r\n    else if (action.type === 'NEW_DATE_CITY'){\r\n        let newArray = cities.slice();\r\n        let indexToChange = newArray.findIndex((item) => {\r\n            return action.place.id === item.id;\r\n        });\r\n        let date = {start: action.start, end: action.end}\r\n        newArray[indexToChange].dateRanges = newArray[indexToChange].dateRanges.concat(date);\r\n        return newArray\r\n    }\r\n    else if (action.type === \"RENDER_CITY\"){\r\n        return action.payload;\r\n    }\r\n    return cities;\r\n};\r\n\r\n\r\nconst defaultCountries = [{name: \"Canada\", id: 0, dateRanges : [{start: \"2020/08/20\", end: \"2020/08/25\"},{start: \"2020/08/29\", end: \"2020/08/31\"}]},\r\n    {name: \"United States\", id: 1, dateRanges : [{start: \"2020/08/25\", end: \"2020/08/28\"}]}];\r\nconst countryReducer = (countries = defaultCountries, action) =>{\r\n    if (action.type === 'START_DATE_CHANGE_COUNTRY'){\r\n        let newArray = countries.slice();\r\n        let indexToChange = newArray.findIndex((item) => {\r\n            return action.place.id === item.id;\r\n        });\r\n        newArray[indexToChange].dateRanges[action.dateIndex].start = action.date;\r\n        return newArray\r\n    }\r\n    else if (action.type === 'END_DATE_CHANGE_COUNTRY'){\r\n        let newArray = countries.slice();\r\n        let indexToChange = newArray.findIndex((item) => {\r\n            return action.place.id === item.id;\r\n        });\r\n        newArray[indexToChange].dateRanges[action.dateIndex].end = action.date;\r\n        return newArray\r\n    }\r\n    else if (action.type === \"NEW_COUNTRY\"){\r\n        let country = {\r\n            name: action.name,\r\n            id: action.id,\r\n            dateRanges: [],\r\n        };\r\n        return countries.concat(country);\r\n    }\r\n    else if (action.type ===\"DEL_COUNTRY\"){\r\n        let newArray = countries.slice();\r\n        let indexToRemove = newArray.findIndex((item) => {\r\n            return action.location_id === item.id;\r\n        });\r\n        newArray.splice(indexToRemove, 1);\r\n        return newArray;\r\n    }\r\n    else if (action.type === 'DELETE_DATE_COUNTRY'){\r\n        let newArray = countries.slice();\r\n        let indexToChange = newArray.findIndex((item) => {\r\n            return action.place.id === item.id;\r\n        });\r\n        newArray[indexToChange].dateRanges.splice(action.dateIndex,1);\r\n        return newArray\r\n    }\r\n    else if (action.type === 'NEW_DATE_COUNTRY'){\r\n        let newArray = countries.slice();\r\n        let indexToChange = newArray.findIndex((item) => {\r\n            return action.place.id === item.id;\r\n        });\r\n        let date = {start: action.start, end: action.end}\r\n        newArray[indexToChange].dateRanges = newArray[indexToChange].dateRanges.concat(date);\r\n        return newArray\r\n    }\r\n    else if (action.type === \"RENDER_COUNTRY\"){\r\n        return action.payload;\r\n    }\r\n    return countries;\r\n};\r\n\r\nconst defaultView = {\r\n    byID:{\r\n        city: 0, //**** set to -1 if nothing to render\r\n    }\r\n};\r\nconst currentViewReducer = (currentView = defaultView, action) => {\r\n   if(action.type === \"CHANGE_VIEW\"){\r\n        return action.newView;\r\n    }\r\n    return currentView;\r\n};\r\n\r\nconst itineraryReducer = (itinerary = { name: \"Test itinerary\", dateRanges : [{start: \"2020/08/20\", end: \"2020/08/28\"}]}, action) =>{\r\n    if (action.type === \"NAME_CHANGE\"){\r\n        return{\r\n            ...itinerary,\r\n            name: action.name\r\n        };\r\n    }\r\n    else if (action.type === \"ADD_LOCATION___NULL\") {\r\n        itinerary.push(action.add);\r\n        return itinerary;\r\n    }\r\n    else if (action.type === 'START_DATE_CHANGE_ITINERARY'){\r\n        let newArray = itinerary.dateRanges.slice();\r\n        newArray[action.dateIndex].start = action.date;\r\n        return{\r\n            ...itinerary,\r\n            dateRanges: newArray,\r\n        };\r\n    }\r\n    else if (action.type === 'END_DATE_CHANGE_ITINERARY'){\r\n        let newArray = itinerary.dateRanges.slice();\r\n        newArray[action.dateIndex].end = action.date;\r\n        return{\r\n            ...itinerary,\r\n            dateRanges: newArray,\r\n        };\r\n    }\r\n    else if (action.type === 'DELETE_DATE_ITINERARY'){\r\n        let newArray = itinerary.dateRanges.slice();\r\n        newArray.splice(action.dateIndex,1);\r\n        return {\r\n            ...itinerary,\r\n            dateRanges: newArray,\r\n        }\r\n    }\r\n    else if (action.type === 'NEW_DATE_ITINERARY'){\r\n        let newArray = [...itinerary.dateRanges];\r\n        newArray = newArray.concat({start: action.start, end: action.end});\r\n        return {\r\n            ...itinerary,\r\n            dateRanges: newArray,\r\n        }\r\n    }\r\n    else if (action.type === \"SET_ITINERARY\"){\r\n        return action.payload\r\n    }\r\n    return itinerary;\r\n};\r\n\r\nconst currentItineraryReducer = (currentItinerary = null, action) => {\r\n    if(action.type === \"SAVE_ITINERARY\") {\r\n        return action.payload;\r\n    }\r\n\r\n    return currentItinerary;\r\n}\r\n\r\nconst currentItineraryObjectIDReducer = (id = null, action) => {\r\n    if(action.type === \"GET_CURRENT_ITINERARY_ID\") {\r\n        return action.payload;\r\n    }\r\n\r\n    return id;\r\n}\r\n\r\n\r\n\r\n// -- Current User's information -- //\r\nconst currentUser = {\r\n    profilePicture: \"https://i.pinimg.com/474x/c4/c6/11/c4c611741a47f0237c7c035601243623--suits-usa-men-in-suits.jpg\",\r\n    emailAddress: \"www.test@gmail.com\",\r\n    firstName: \"Harvey\",\r\n    lastName: \"Spectre\",\r\n}\r\n\r\nconst currentUserProfileReducer = (state = currentUser, action) => {\r\n    if(action.type === \"GET_CURRENT_USER_PROFILE\") {\r\n        return {\r\n            ...state,\r\n            profilePicture: action.payload.profilePicture,\r\n            emailAddress: action.payload.emailAddress,\r\n            firstName: action.payload.firstName,\r\n            lastName: action.payload.lastName,\r\n        }\r\n    }\r\n    return state;\r\n}\r\n\r\nexport default combineReducers({\r\n    locations: locationsReducer,\r\n    itinerary: itineraryReducer,\r\n    currentView: currentViewReducer,\r\n    cities: cityReducer,\r\n    countries: countryReducer,\r\n    mapLocation: mapLocationReducer,\r\n    currentLocation: currentLocationReducer,\r\n    lists: listReducer,\r\n    msgId: selector,\r\n    currentItinerary: currentItineraryReducer,\r\n    currentItineraryID: currentItineraryObjectIDReducer,\r\n    authentication: authenticationReducer,\r\n    currentUserProfile: currentUserProfileReducer\r\n});\r\n","import combineReducers from './index';\r\nimport { createStore } from 'redux'\r\nimport { persistStore, persistReducer } from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage' // defaults to localStorage for web\r\n\r\nconst persistConfig = {\r\n    key: 'root',\r\n    storage,\r\n}\r\n\r\nconst persistedReducer = persistReducer(persistConfig, combineReducers);\r\nexport const store = createStore(persistedReducer);\r\nexport const persistor = persistStore(store);\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {Provider} from 'react-redux';\r\nimport {createStore} from 'redux';\r\nimport reducers from './reducers';\r\nimport \"./reducers/store.js\";\r\nimport { PersistGate } from 'redux-persist/integration/react'\r\nimport { store, persistor} from \"./reducers/store\";\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <PersistGate loading={null} persistor={persistor}>\r\n    <App />\r\n        </PersistGate>\r\n    </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}
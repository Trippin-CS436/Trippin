{"version":3,"sources":["assets/vancouver.jpg","components/Home.js","components/AddLocationButton.js","actions/addLocation.js","components/MapInfo.js","components/Map.js","actions/getLocation.js","components/Notes.js","actions/addNotes.js","components/Info.js","actions/index.js","components/Location.js","components/Dates.js","components/City.js","components/Navbar.js","components/Itineraries.js","components/SaveButton.js","components/LocationButton.js","components/Itinerary.js","components/Lists.js","components/App.js","serviceWorker.js","reducers/index.js","index.js"],"names":["module","exports","Home","render","Fragment","className","Grid","container","spacing","item","xs","md","Button","href","React","Component","require","uuid","AddLocationButton","props","handleButtonClick","addNewLocation","mapLocation","updateButtonMsg","addLocation","id","location","Name","address","Address","cityID","info","Info","notes","setState","state","class","setTimeout","finalButtonMsg","setInitialButtonState","prevProps","this","createElement","onClick","connect","type","add","MapInfo","phoneDisplay","undefined","phone","Box","fontWeight","p","borderColor","Typography","variant","websiteDisplay","website","ratingDisplay","ratingValue","rating","parseFloat","toString","mb","Rating","name","defaultValue","value","precision","readOnly","reviewDisplay","reviews","length","reviewRender","Paper","elevation","style","maxWidth","maxHeight","overflow","margin","List","map","review","key","ListItem","reviewCardRender","author","author_name","authorInitial","charAt","text","date","relative_time_description","Card","padding","layout","CardHeader","avatar","Avatar","aria-label","backgroundColor","red","title","subheader","CardContent","color","component","placePhoneNumber","placeWebsite","status","placeStatus","placeRating","placeReviews","photos","placePhotos","borderBottom","console","log","Geocode","setApiKey","process","containerStyle","width","height","marginTop","boxShadow","Map","getCity","addressArray","i","types","long_name","getArea","j","getState","getCountry","onMarkerDragEnd","event","newLat","latLng","lat","newLng","lng","fromLatLng","then","response","results","formatted_address","address_components","city","area","markerPosition","mapPosition","onLoad","autocomplete","onPlaceChanged","place","getPlace","placeId","place_id","country","geometry","placeName","formatted_phone_number","placeTypes","business_status","fulladdress","placeArea","placeCountry","getLocation","displayDetails","bordered","opacity","borderRadius","Item","label","span","displayLocationInfo","zoom","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","googleMapsApiKey","libraries","mapContainerStyle","center","draggable","onDragEnd","placeholder","boxSizing","border","borderSpacing","fontSize","outline","textOverflow","left","marginLeft","payload","memo","Notes","handleSaveNotes","notesText","addNotes","index","indexOfLocation","slice","findIndex","currentLocation","handleNotesInput","bind","target","onChange","locations","styles","makeStyles","theme","root","font","withStyles","saveItinerary","itinerary","getCurrentItineraryID","Location","showNotes","showInfo","showPhotos","handleEditBtnClick","handleInfoBtnClick","handlePhotoBtnClick","currLoc","idx","IconButton","deleteLocation","renderSubComp","location_id","Dates","handleChangeStartDate","format","dateString","startDateChange","handleChangeEndDate","endDateChange","datesComponent","dateRanges","start","end","trigger","modal","close","utils","DateFnsUtils","DatePicker","Date","animateYearScrolling","currentView","cities","countries","dateIndex","City","cityToRenderID","byID","cityToRender","filter","countryToRenderID","countryToRender","locationsToRender","loc","Navbar","classes","navbar","link","zIndex","float","textAlign","textDecoration","Itineraries","bg","leftPanel","rightPanel","table","muiStyles","backgroundImage","backgroundSize","top","SaveButton","Itinerary","currentItinerary","axios","get","res","data","currentItineraryID","patch","catch","err","post","LocationButton","addLocationToItinerary","currentMapLocation","Area","Country","includes","locationID","location_name","location_address","renderLocation","_id","content","push","countryID","changeView","renderItinerary","lists","msgId","newView","Lists","currentTargetId","currentListId","addedCountry","countryList","handleChange","addList","renderCountry","targetId","prevState","indexOf","states","newList","addMsg","list","checkedName","Checkbox","checked","listName","renderList","JSON","stringify","msg","selectMsg","deleteMsg","App","exact","path","Boolean","window","hostname","match","PlacesId","jsonObj","defaultLocations","note","defaultCities","defaultCountries","defaultView","combineReducers","action","newArray","indexToRemove","splice","newLocation","concat","indexToChange","ReactDOM","store","createStore","reducers","document","getElementById","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.3a0e7a31.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/vancouver.7e23aeae.jpg\";","import React from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { GiCalendar, GiDesk, GiChecklist } from \"react-icons/gi\";\r\nimport \"./Home.css\"\r\n\r\nclass Home extends React.Component {\r\n    render = () => {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"bg\">\r\n                <Grid container className=\"container\" spacing={2}>\r\n                    <Grid className=\"item\" item xs={12} md={4}>\r\n                        <Button href=\"/itineraries\" className=\"button_home\">\r\n                            <div>\r\n                                <GiCalendar className=\"icon\" />\r\n                                <div className=\"buttonText\">Future Trip Itineraries</div>\r\n                            </div>\r\n                        </Button>\r\n                    </Grid>\r\n                    <Grid className=\"item\" item xs={12} md={4}>\r\n                        <Button href=\"/archive\" className=\"button_home\">\r\n                            <div>\r\n                                <GiDesk className=\"icon\" />\r\n                                <div className=\"buttonText\">Archived Itineraries</div>\r\n                            </div>\r\n                        </Button>\r\n                    </Grid>\r\n                    <Grid className=\"item\" item xs={12} md={4}>\r\n                        <Button href=\"/lists\" className=\"button_home\">\r\n                            <div>\r\n                                <GiChecklist className=\"icon\" />\r\n                                <div className=\"buttonText\">Your lists</div>\r\n                            </div>\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n            </React.Fragment>\r\n        );\r\n    };\r\n}\r\n\r\n\r\n\r\nconst muiStyles = {\r\n    bg: {\r\n        position: \"absolute\",\r\n        backgroundImage: `url(${require(\"../assets/vancouver.jpg\")})`,\r\n        backgroundSize: \"cover\",\r\n        height: \"100vh\",\r\n        width: \"100vw\",\r\n        top: \"0\",\r\n        left: \"0\"\r\n    },\r\n    text: {\r\n        color: \"#000000\",\r\n        fontSize: \"30px\"\r\n    },\r\n    container: {\r\n        justifyContent: \"center\",\r\n\r\n        padding: \"20% 10%\",\r\n        width: \"100vw\",\r\n        height: \"100vh\"\r\n    },\r\n    item: {\r\n        textAlign: \"center\"\r\n    },\r\n    button: {\r\n        top: \"20vh\",\r\n        height: \"50vh\",\r\n        width: \"80%\",\r\n        backgroundColor: \"#FFFFFF\",\r\n        borderTop: \"5px solid #2E3B52\",\r\n        transition: \"transform 0.5s ease-in-out\",\r\n        \"&:hover\": {\r\n            background: \"rgba(0, 0, 0, 0.7)\",\r\n            transform: \"translateY(-3vh);\",\r\n            \"-ms-transform\": \"none\",\r\n            color: \"white\"\r\n        },\r\n        boxShadow: \"0px 6px 4px rgba(0, 0, 0, 0.2)\",\r\n    },\r\n    icon: {\r\n        fontSize: \"6em\"\r\n    },\r\n    buttonText: {\r\n        fontSize: \"1.45em\"\r\n    }\r\n};\r\n\r\nexport default Home;","import React from \"react\";\r\nimport { connect }  from 'react-redux';\r\nimport './AddLocationButton.css';\r\nimport { addLocation } from \"../actions/addLocation\";\r\n\r\nconst { uuid } = require('uuidv4');\r\n\r\n\r\n\r\nclass AddLocationButton extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            mapLocation: this.props.mapLocation,\r\n            class: \"submit-button state-0\"\r\n        };\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.mapLocation !== this.props.mapLocation) {\r\n            this.setState({\r\n                mapLocation: this.props.mapLocation,\r\n            })\r\n        }\r\n    }\r\n\r\n    handleButtonClick = () => {\r\n        this.addNewLocation(this.props.mapLocation);\r\n        this.updateButtonMsg();\r\n    }\r\n\r\n    addNewLocation = () => {\r\n        this.props.addLocation({\r\n            id: uuid(),\r\n            location: this.props.mapLocation.Name,\r\n            address: this.props.mapLocation.Address,\r\n            cityID: 0,\r\n            info: this.props.mapLocation.Info,\r\n            notes: \"\"\r\n        });\r\n    }\r\n\r\n     \r\n    updateButtonMsg = () => {\r\n    this.setState({\r\n        ...this.state,\r\n        class: this.state.class + ' state-1 animated'});\r\n    \r\n    setTimeout(this.finalButtonMsg, 2000);\r\n  };\r\n  \r\n    finalButtonMsg = () => {\r\n        this.setState({\r\n            ...this.state,\r\n            class: this.state.class + ' state-2'});\r\n    \r\n    setTimeout(this.setInitialButtonState, 2000);\r\n  };\r\n  \r\n    setInitialButtonState = () => {\r\n        this.setState({\r\n            ...this.state,\r\n            class: \"submit-button state-0\" });\r\n    \r\n  };\r\n  \r\n\r\n    render() {\r\n\r\n       return(\r\n            <div>\r\n                {\r\n                    React.createElement('div', { className: this.state.class,  onClick: this.handleButtonClick },  \r\n                    React.createElement('span', {className: \"pre-state-msg\" }, \"Add\"), \r\n                    React.createElement('span', {className: \"current-state-msg hide\" }, \".......\"),\r\n                    React.createElement('span', {className: \"done-state-msg hide\" }, \"Added\") ) \r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return { \r\n        mapLocation: state.mapLocation\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {addLocation})(AddLocationButton); \r\n\r\n\r\n\r\n","export const addLocation = location => {\r\n    return {\r\n        type: 'ADD_LOCATION',\r\n        add: location\r\n    };\r\n};","import React from \"react\";\r\nimport { connect }  from 'react-redux';\r\nimport AddLocationButton from './AddLocationButton';\r\n//import { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport { Rating } from '@material-ui/lab';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { red } from '@material-ui/core/colors';\r\nimport { Paper } from '@material-ui/core';\r\nimport { List } from '@material-ui/core';\r\nimport { ListItem } from '@material-ui/core';\r\n\r\n\r\n\r\n\r\nclass MapInfo extends React.Component {\r\n    \r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            mapLocation: this.props.mapLocation,\r\n            info: this.props.mapLocation.Info,\r\n            phone: this.props.mapLocation.Info.placePhoneNumber,\r\n            website: this.props.mapLocation.Info.placeWebsite,\r\n            status: this.props.mapLocation.Info.placeStatus,\r\n            rating: this.props.mapLocation.Info.placeRating,\r\n            reviews: this.props.mapLocation.Info.placeReviews,\r\n            photos: this.props.mapLocation.Info.placePhotos\r\n        };\r\n    }\r\n\r\n\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.mapLocation !== this.props.mapLocation) {\r\n            this.setState({\r\n                mapLocation: this.props.mapLocation,\r\n                info: this.props.mapLocation.Info,\r\n                phone: this.props.mapLocation.Info.placePhoneNumber,\r\n                website: this.props.mapLocation.Info.placeWebsite,\r\n                status: this.props.mapLocation.Info.placeStatus,\r\n                rating: this.props.mapLocation.Info.placeRating,\r\n                reviews: this.props.mapLocation.Info.placeReviews,\r\n                photos: this.props.mapLocation.Info.placePhotos\r\n            })\r\n        }\r\n    }\r\n\r\n    phoneDisplay = () => {\r\n        if (this.state.phone !== undefined && this.state.phone !== ''){\r\n            return (\r\n                <Box fontWeight=\"fontWeightLight\" p={2} borderColor=\"transparent\">\r\n                <Typography variant=\"h5\" >Phone Number</Typography>\r\n                <Typography variant=\"subtitle1\"> {this.state.phone}</Typography>\r\n               </Box>\r\n            )\r\n    } else return null;\r\n}\r\n\r\n    websiteDisplay = () => {\r\n        if (this.state.website !== undefined && this.state.website !== ''){\r\n            return (\r\n                <Box fontWeight=\"fontWeightLight\" p={2} borderColor=\"transparent\">\r\n                <Typography variant=\"h5\" >Website</Typography>\r\n                <Typography variant=\"subtitle1\">{this.state.website}</Typography>\r\n               </Box>\r\n            )\r\n    } else return null;\r\n    }\r\n\r\n    ratingDisplay = () => {\r\n        \r\n        let ratingValue = 0;\r\n        if (this.state.rating) { ratingValue = parseFloat(this.state.rating.toString()); };\r\n        \r\n        if (this.state.website !== undefined && this.state.website !== ''){\r\n            return (\r\n                <Box borderColor=\"transparent\" mb={2} p={1} fontWeight=\"fontWeightLight\">\r\n                <Typography variant=\"h5\">Rating</Typography>\r\n                <Rating name=\"half-rating-read\" defaultValue={0} value={ratingValue} precision={0.1} readOnly />\r\n                </Box>\r\n            )\r\n    } else return null;\r\n    }\r\n\r\n    reviewDisplay = () => {\r\n\r\n        // reviews is an array of reviews\r\n        let reviews = this.state.reviews;\r\n        if ( reviews !== undefined) {\r\n            if (reviews.length > 0) {\r\n            return (\r\n                <Box borderColor=\"transparent\" mb={2} p={1} fontWeight=\"fontWeightLight\">\r\n                <Typography variant=\"h5\">Reviews</Typography>\r\n                {this.reviewRender(reviews)}\r\n                </Box>\r\n                \r\n            )\r\n                 }\r\n        }\r\n    }\r\n\r\n    reviewRender = (reviews) => {\r\n        return (\r\n            <Paper elevation={2} style={{maxWidth: 500, maxHeight: 300, overflow: 'auto', margin: \"2rem 3rem 1rem 3rem\"}}>\r\n            <List>\r\n            {reviews.map((review, key) => (\r\n            <ListItem key={`item-${key}-${key}`}>\r\n            {this.reviewCardRender(review)}\r\n          </ListItem>\r\n        ))}\r\n            </List>\r\n          </Paper>\r\n        )\r\n    }\r\n\r\n    reviewCardRender = (review) => {\r\n        let author = review.author_name;\r\n        let authorInitial = author.charAt(0);\r\n        let text = review.text;\r\n        let date = review.relative_time_description;\r\n        let rating = review.rating;\r\n        return (\r\n\r\n        <Card style={{maxWidth: \"400px\", padding: \"1rem 1rem\"}} layout=\"vertical\">\r\n\r\n        <CardHeader\r\n          avatar={\r\n            <Avatar aria-label=\"Review\" style={{backgroundColor: red[500]}}>\r\n              {authorInitial}\r\n            </Avatar>\r\n          }\r\n          title={author}\r\n          subheader={date}\r\n        />\r\n        <Rating name=\"half-rating-read\" defaultValue={0} value={rating || 0} precision={0.1} readOnly />\r\n        <CardContent>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n            {text}\r\n          </Typography>\r\n        </CardContent>\r\n\r\n      </Card>\r\n        )\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    render() {\r\n       return(\r\n\r\n            <div className=\"mainInfo\">\r\n            <Box borderColor=\"transparent\" p={2}>\r\n            <Box  borderColor=\"transparent\"  fontWeight=\"fontWeightBold\" borderBottom={1} p={1} mb={2}>\r\n            <Typography>LOCATION INFORMATION</Typography>\r\n            </Box>\r\n\r\n           {this.phoneDisplay()}\r\n\r\n           {this.websiteDisplay()}\r\n\r\n           {this.ratingDisplay()}\r\n\r\n           {this.reviewDisplay()}\r\n\r\n           <div className=\"addButton\">\r\n                <AddLocationButton />\r\n            </div>\r\n\r\n               \r\n                </Box>\r\n            </div> \r\n        )\r\n    }\r\n}\r\n\r\n/* const styles = makeStyles((theme) => ({\r\n    root: {\r\n      '& > *': {\r\n        margin: theme.spacing(1),\r\n        font: '30px Roboto'\r\n      },\r\n    },\r\n  })); */\r\n\r\nconst mapStateToProps = (state) => {\r\n    console.log('State',state);\r\n    return { \r\n        mapLocation: state.mapLocation\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(MapInfo); \r\n\r\n\r\n\r\n","import React from 'react';\r\nimport './App.css';\r\nimport {\r\n    InfoWindow,\r\n    LoadScript,\r\n    GoogleMap,\r\n    Marker,\r\n    Autocomplete\r\n} from \"@react-google-maps/api\";\r\nimport Geocode from \"react-geocode\";\r\nimport { Descriptions } from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport { getLocation } from '../actions/getLocation';\r\nimport MapInfo from \"./MapInfo\";\r\n\r\n\r\n\r\nGeocode.setApiKey(process.env.REACT_APP_API_KEY);\r\n\r\nconst containerStyle = {\r\n    width: '100%',\r\n    height: '100%',\r\n    marginTop: '1rem',\r\n    boxShadow: \"0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)\"\r\n};\r\n\r\n\r\n\r\n\r\nclass Map extends React.Component {\r\n    constructor(props) {\r\n    super(props);\r\n    \r\n    this.autocomplete = null;\r\n\r\n    this.state = {\r\n        placeId: '',\r\n        placeName: '',\r\n        address: '',\r\n        city: '',\r\n        area: '',\r\n        state: '',\r\n        country: '',\r\n        zoom: 10,\r\n        height: 400,\r\n        mapPosition: {\r\n            lat: 0,\r\n            lng: 0,\r\n        },\r\n        markerPosition: {\r\n            lat: 0,\r\n            lng: 0,\r\n        }\r\n    };\r\n}\r\n\r\n    componentDidMount() {\r\n        if (navigator.geolocation) {\r\n            navigator.geolocation.getCurrentPosition(position => {\r\n                this.setState({\r\n                    mapPosition: {\r\n                        lat: position.coords.latitude,\r\n                        lng: position.coords.longitude,\r\n                    },\r\n                    markerPosition: {\r\n                        lat: position.coords.latitude,\r\n                        lng: position.coords.longitude,\r\n                    }\r\n                }, () => {\r\n                    Geocode.fromLatLng(position.coords.latitude, position.coords.longitude)\r\n                        .then(response => {\r\n                            const address = response.results[0].formatted_address,\r\n                                addressArray = response.results[0].address_components,\r\n                                city = this.getCity(addressArray),\r\n                                area = this.getArea(addressArray),\r\n                                state = this.getState(addressArray),\r\n                                country = this.getCountry(addressArray);\r\n\r\n                            this.setState({\r\n                                address: (address) ? address : \"\",\r\n                                area: (area) ? area : \"\",\r\n                                city: (city) ? city : \"\",\r\n                                state: (state) ? state : \"\",\r\n                                country: (country)? state : \"\",\r\n                            })\r\n                        })\r\n                })\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    getCity = (addressArray) => {\r\n        let city = '';\r\n        for (let i = 0; i < addressArray.length; i++) {\r\n            if (addressArray[i].types[0] && 'administrative_area_level_2' === addressArray[i].types[0]) {\r\n                city = addressArray[i].long_name;\r\n                return city;\r\n            }\r\n        }\r\n    };\r\n\r\n    getArea = (addressArray) => {\r\n        let area = '';\r\n        for (let i = 0; i < addressArray.length; i++) {\r\n            if (addressArray[i].types[0]) {\r\n                for (let j = 0; j < addressArray.length; j++) {\r\n                    if ('sublocality_level_1' === addressArray[i].types[j] || 'locality' === addressArray[i].types[j]) {\r\n                        area = addressArray[i].long_name;\r\n                        return area;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    getState = (addressArray) => {\r\n        let state = '';\r\n        for (let i = 0; i < addressArray.length; i++) {\r\n            if (addressArray[i].types[0] && 'administrative_area_level_1' === addressArray[i].types[0]) {\r\n                state = addressArray[i].long_name;\r\n                return state;\r\n            }\r\n        }\r\n    };\r\n\r\n    getCountry = (addressArray) => {\r\n        let country = '';\r\n        for (let i = 0; i < addressArray.length; i++) {\r\n            if (addressArray[i].types[0] && 'country' === addressArray[i].types[0]) {\r\n                country = addressArray[i].long_name;\r\n                return country;\r\n            }\r\n        }\r\n    };\r\n\r\n    onMarkerDragEnd = (event) => {\r\n        let newLat = event.latLng.lat();\r\n        let newLng = event.latLng.lng();\r\n        //console.log(newLng, newLat);\r\n\r\n        Geocode.fromLatLng(newLat, newLng)\r\n            .then(response => {\r\n                console.log(response);\r\n                const address = response.results[0].formatted_address,\r\n                    addressArray = response.results[0].address_components,\r\n                    city = this.getCity(addressArray),\r\n                    area = this.getArea(addressArray),\r\n                    state = this.getState(addressArray);\r\n                    console.log(address);\r\n\r\n                this.setState({\r\n                    address: (address) ? address : \"\",\r\n                    area: (area) ? area : \"\",\r\n                    city: (city) ? city : \"\",\r\n                    state: (state) ? state : \"\",\r\n                    markerPosition: {\r\n                        lat: newLat,\r\n                        lng: newLng,\r\n                    },\r\n                    mapPosition: {\r\n                        lat: newLat,\r\n                        lng: newLng,\r\n                    }\r\n                })\r\n            });\r\n    };\r\n\r\n    onLoad = (autocomplete) => {\r\n        console.log('autocomplete: ', autocomplete);\r\n        this.autocomplete = autocomplete;\r\n        // this.autocomplete.addListener('place_changed', this.onPlaceChanged);\r\n    };\r\n\r\n    onPlaceChanged = () => {\r\n        // if (this.autocomplete !== null) {\r\n            // console.log(this.autocomplete.getPlace())\r\n         \r\n        const place = this.autocomplete.getPlace();\r\n        console.log(place);\r\n        const address = place.formatted_address,\r\n            placeId = place.place_id,\r\n            addressArray = place.address_components;\r\n        const city = this.getCity(addressArray),\r\n              area = this.getArea(addressArray),\r\n              state = this.getState(addressArray),\r\n              country = this.getCountry(addressArray),\r\n              newLat = place.geometry.location.lat(),\r\n              newLng = place.geometry.location.lng();\r\n        const placeName = place.name;\r\n\r\n        // location info\r\n        const placeWebsite = place.website;\r\n        const placeReviews = place.reviews;\r\n        const placePhotos = place.photos;\r\n        const placePhoneNumber = place.formatted_phone_number;\r\n        const placeRating = place.rating;\r\n        const placeTypes = place.types;\r\n        const placeStatus = place.business_status;\r\n\r\n        const info = {\r\n            placeWebsite: placeWebsite,\r\n            placeReviews: placeReviews,\r\n            placePhotos: placePhotos,\r\n            placePhoneNumber: placePhoneNumber,\r\n            placeRating: placeRating,\r\n            placeTypes: placeTypes,\r\n            placeStatus: placeStatus\r\n        }\r\n\r\n\r\n        this.setState({\r\n            placeId: (placeId) ? placeId: \"\",\r\n            placeName: (placeName) ? placeName : \"\",\r\n            address: (address) ? address : \"\",\r\n            area: (area) ? area : \"\",\r\n            city: (city) ? city : \"\",\r\n            state: (state) ? state : \"\",\r\n            country: (country)? country: \"\",\r\n            markerPosition: {\r\n                lat: newLat,\r\n                lng: newLng,\r\n            },\r\n            mapPosition: {\r\n                lat: newLat,\r\n                lng: newLng,\r\n            },\r\n            info: info\r\n        })\r\n\r\n    // } else {\r\n    //     console.log('Autocomplete is not loaded yet!')\r\n    //   }\r\n\r\n        // create mapLocation object\r\n        const mapLocation = {\r\n            placeId: this.state.placeId,\r\n            placeName: this.state.placeName,\r\n            fulladdress: this.state.address,\r\n            placeArea: this.state.area,\r\n            placeCountry: this.state.country,\r\n            info: this.state.info,\r\n        }\r\n        // Reducer call to update the name of the facility and address\r\n        console.log('OnPlaceChange call', mapLocation);\r\n        console.log(\"This is Map Location\");\r\n        console.log(mapLocation);\r\n        this.props.getLocation(mapLocation);\r\n    };\r\n\r\n    displayDetails = () => {\r\n        if (this.state.placeId !== null && this.state.placeId !== ''){\r\n            return (     \r\n                  <Descriptions bordered layout=\"horizontal\" style={{ width: '70%', padding: \"1rem 1rem\", margin: \"0rem 2rem 0.5rem 4rem\",\r\n            backgroundColor: \"#ebeced\", opacity:\"90%\",  boxShadow: \"0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)\", borderRadius: \"10px\"}}>\r\n                    <Descriptions.Item label=\"CITY\" span={3}>{this.state.city}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"AREA\" span={3}>{this.state.area}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"STATE\" span={3}>{this.state.state}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"ADDRESS \" span={3}>{this.state.address}</Descriptions.Item>\r\n                </Descriptions>\r\n                ) \r\n        } else return null;\r\n    }\r\n\r\n    displayLocationInfo = () => {\r\n        if (this.state.placeId !== null && this.state.placeId !== ''){\r\n            return (     \r\n                <div className=\"bottom-panel\">\r\n                <MapInfo />\r\n                </div>\r\n                ) \r\n        } else return null;\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n\r\n        \r\n        return (\r\n\r\n            <div style={{ width: '85%', height: '450px', padding: \"3rem 1rem\"}}>\r\n\r\n            {this.displayDetails()}\r\n\r\n                <LoadScript\r\n                    googleMapsApiKey={process.env.REACT_APP_API_KEY}\r\n                    libraries={[\"places\"]}\r\n                >\r\n                    <GoogleMap\r\n                        mapContainerStyle={containerStyle}\r\n                        zoom={8}\r\n                        center={{ lat: this.state.mapPosition.lat, lng: this.state.mapPosition.lng }}\r\n                    >\r\n                        <Marker\r\n                            draggable={true}\r\n                            onDragEnd={this.onMarkerDragEnd}\r\n                            position={{ lat: this.state.markerPosition.lat, lng: this.state.markerPosition.lng}}\r\n                            \r\n                        >\r\n                          <InfoWindow position={{ lat: this.state.markerPosition.lat+0.1, lng: this.state.markerPosition.lng}}>\r\n                                <div>\r\n                                    {this.state.address}\r\n                                </div>\r\n                            </InfoWindow>\r\n                        </Marker>\r\n                        <Autocomplete\r\n                         onLoad={this.onLoad}\r\n                         onPlaceChanged={this.onPlaceChanged}\r\n          >\r\n              <input\r\n              type=\"text\"\r\n              placeholder=\"Input here\"\r\n              style={{\r\n                boxSizing: `border-box`,\r\n                border: `1px solid transparent`,\r\n                borderSpacing: '1px',\r\n                width: `400px`,\r\n                height: `32px`,\r\n                marginTop: '0.5rem',\r\n                padding: `0.5rem 1rem`,\r\n                borderRadius: `3px`,\r\n                boxShadow: `0 2px 6px rgba(0, 0, 0, 0.3)`,\r\n                fontSize: `14px`,\r\n                outline: `none`,\r\n                textOverflow: `ellipses`,\r\n                position: \"absolute\",\r\n                left: \"50%\",\r\n                marginLeft: \"-120px\"\r\n              }}\r\n            />\r\n            </Autocomplete>\r\n                    </GoogleMap>\r\n                </LoadScript>\r\n\r\n                {this.displayLocationInfo()}\r\n            </div>\r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default connect(null, {getLocation})(React.memo(Map));\r\n","export const getLocation = location => {\r\n    return {\r\n        type: \"GET_LOCATION\",\r\n        payload: location,\r\n    }\r\n}\r\n\r\n","import React from \"react\";\r\nimport  {connect}  from 'react-redux';\r\nimport  {addNotes} from './../actions/addNotes'\r\nimport \"./Notes.css\"\r\n\r\nclass Notes extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        let newArray = this.props.location.slice();\r\n        let indexOfLocation= newArray.findIndex((item) => {\r\n            return this.props.id === item.id;\r\n        });\r\n        this.state = {\r\n            currentLocation: this.props.location[indexOfLocation],\r\n           notesText: this.props.location[indexOfLocation].notes,\r\n           index: indexOfLocation\r\n           // userImages image object will change when database added: {fileName:\"name\", fileLoc:\"../imgs/name.jpg\"}\r\n        };\r\n        this.handleNotesInput = this.handleNotesInput.bind(this);\r\n    }\r\n\r\n    handleNotesInput(event) {\r\n        this.setState({\r\n            currentLocation: this.state.currentLocation,\r\n            notesText: event.target.value,\r\n            index: this.state.index\r\n        });\r\n      }\r\n\r\n    handleSaveNotes = () => {\r\n        console.log(this.state.notesText);\r\n        this.props.addNotes({\r\n        notes: this.state.notesText,\r\n        index: this.state.index\r\n        });\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"notes\">\r\n            <div className=\"notes-outer\">\r\n                <div className=\"notes-inner\">\r\n                    <textarea id=\"notes-text\" value={this.state.notesText} onChange={this.handleNotesInput}>\r\n                    </textarea>\r\n                </div>\r\n                <div id=\"notes-inner-button\">\r\n                    <button id=\"notes-button\" value=\"notes-button\"  type=\"button\" onClick={this.handleSaveNotes}>\r\n                        Save\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return { \r\n        currentLocation: state.currentLocation,\r\n        locations: state.locations,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {addNotes})(Notes); \r\n\r\n/*\r\n\r\nexport default class Notes extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n           userNotes: \"\",\r\n           // userImages image object will change when database added: {fileName:\"name\", fileLoc:\"../imgs/name.jpg\"}\r\n           userImages: [],\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({userNotes: event.target.value});\r\n      }\r\n    \r\n      handleSubmit(event) {\r\n        event.preventDefault();\r\n      }\r\n\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"container\"> \r\n                <Info />\r\n                <div className=\"userNotes\">\r\n                    <form onSubmit={this.handleSubmit}>\r\n                        <label>\r\n                            User Notes\r\n                            <input type=\"text\" value={this.state.userNotes} onChange={this.handleChange} />\r\n                        </label>\r\n                        <input type=\"submit\" value=\"Submit\" />\r\n                    </form>\r\n                </div>\r\n                <div className=\"userImages\">\r\n                    <h3>Image Gallery</h3>\r\n                    <div className=\"imageGallery\">\r\n                        {this.userImages.map(image =>\r\n                            <div className=\"single-image-display\">\r\n                                <h4>{image.fileName}</h4>\r\n                                <img src={image.fileLoc} alt=\"\"/>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                    </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n*/\r\n","export const addNotes = payload => {\r\n    return {\r\n        type: 'ADD_NOTES',\r\n        add: payload\r\n    };\r\n};","import React from \"react\";\r\nimport {makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport { Rating } from '@material-ui/lab';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nclass Info extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        console.log(this.props.location);\r\n        console.log(this.props.id);\r\n        let newArray = this.props.location.slice();\r\n        let indexOfLocation= newArray.findIndex((item) => {\r\n            return this.props.id === item.id;\r\n        });\r\n\r\n        console.log(indexOfLocation);\r\n        console.log(this.props.location[indexOfLocation]);\r\n\r\n        this.state = {\r\n            currentLocation: this.props.location[indexOfLocation],\r\n            info: this.props.location[indexOfLocation].info,\r\n            phone: this.props.location[indexOfLocation].info.placePhoneNumber,\r\n            website: this.props.location[indexOfLocation].info.placeWebsite,\r\n            status: this.props.location[indexOfLocation].info.placeStatus,\r\n            rating: this.props.location[indexOfLocation].info.placeRating,\r\n            reviews: this.props.location[indexOfLocation].info.placeReviews,\r\n            photos: this.props.location[indexOfLocation].info.placePhotos,\r\n        };\r\n    }\r\n\r\n\r\n   \r\n      render() {\r\n        let ratingValue = 0;\r\n        if (this.state.rating) { ratingValue = parseFloat(this.state.rating.toString()); };\r\n        \r\n       return(\r\n            <div className=\"mainInfo\">\r\n            <Box borderColor=\"transparent\" p={3}>\r\n\r\n               <Box fontWeight=\"fontWeightLight\" component=\"fieldset\"  borderColor=\"transparent\">\r\n                <Typography variant=\"h6\" >Phone Number</Typography>\r\n                <Typography variant=\"body2\"> {this.state.phone}</Typography>\r\n               </Box>\r\n\r\n               <Box fontWeight=\"fontWeightLight\" component=\"fieldset\"    borderColor=\"transparent\">\r\n                <Typography variant=\"h6\" >Website</Typography>\r\n                <Typography variant=\"body1\">{this.state.website}</Typography>\r\n               </Box>\r\n\r\n                <Box component=\"fieldset\" borderColor=\"transparent\" fontWeight=\"fontWeightLight\">\r\n                <Typography variant=\"h6\">Rating</Typography>\r\n                <Rating name=\"half-rating-read\" defaultValue={0} value={ratingValue} precision={0.1} readOnly />\r\n                </Box>\r\n                \r\n                </Box>\r\n            </div> \r\n        )\r\n    }\r\n\r\n    \r\n\r\n}\r\n\r\nconst styles = makeStyles((theme) => ({\r\n    root: {\r\n      '& > *': {\r\n        margin: theme.spacing(1),\r\n        font: '30px Roboto'\r\n      },\r\n    },\r\n  }));\r\n\r\nexport default withStyles(styles)(Info); \r\n","export const addMsg = msg => {\r\n    return {\r\n        type: 'ADD_MSG',\r\n        addMsg: msg\r\n    };\r\n};\r\n\r\nexport const selectMsg = msgId => {\r\n    return {\r\n        type: 'SELECT_MSG',\r\n        selectMsg: msgId\r\n    }\r\n\r\n};\r\n\r\nexport const deleteMsg = msgId => {\r\n    return {\r\n        type: 'DELETE_MSG',\r\n        deleteMsg: msgId\r\n    }\r\n};\r\n\r\nexport const chooseUser = userName => {\r\n    return {\r\n        type: 'CHOOSE_USER',\r\n        chooseUser: userName\r\n    }\r\n};\r\n\r\nexport const deleteLocation = (id) => {\r\n    return {\r\n        type: 'DEL_LOCATION',\r\n        location_id: id,\r\n    };\r\n};\r\n\r\nexport const addLocation = (id,name,address,cityID) => {\r\n    return {\r\n        type: 'NEW_LOCATION',\r\n        location_id: id,\r\n        location_name: name,\r\n        location_address: address,\r\n        cityID: cityID,\r\n    };\r\n};\r\n\r\nexport const renderLocation = (locations) => {\r\n    return{\r\n        type: \"RENDER_LOCATION\",\r\n        payload: locations\r\n    }\r\n}\r\nexport const startDateChange = (place,type,date,dateIndex,) => {\r\n    if (type === 'city'){\r\n        return{\r\n            type: \"START_DATE_CHANGE_CITY\",\r\n            place: place,\r\n            date: date,\r\n            dateIndex: dateIndex,\r\n        }\r\n    }\r\n    else if (type ==='country'){\r\n        return{\r\n            type: \"START_DATE_CHANGE_COUNTRY\",\r\n            place: place,\r\n            date: date,\r\n            dateIndex: dateIndex,\r\n        }\r\n    }\r\n    return {}\r\n};\r\n\r\nexport const endDateChange = (place,type,date,dateIndex,) => {\r\n    if (type === 'city'){\r\n        return{\r\n            type: \"END_DATE_CHANGE_CITY\",\r\n            place: place,\r\n            date: date,\r\n            dateIndex: dateIndex,\r\n        }\r\n    }\r\n    else if (type ==='country'){\r\n        return{\r\n            type: \"END_DATE_CHANGE_COUNTRY\",\r\n            place: place,\r\n            date: date,\r\n            dateIndex: dateIndex,\r\n        }\r\n    }\r\n    return {}\r\n};\r\n\r\nexport const changeView = (country,city,locations) => {\r\n    let view = {\r\n        byID: {\r\n            country: country.id,\r\n            city: city.id,\r\n        }\r\n    };\r\n    return {\r\n        type: 'CHANGE_VIEW',\r\n        newView: view,\r\n    };\r\n};\r\n\r\nexport const itineraryNameChange = (name) => {\r\n    return {\r\n        type: 'NAME_CHANGE',\r\n        name: name,\r\n    };\r\n};\r\n\r\nexport const saveItinerary= (itinerary) => {\r\n    return {\r\n        type: 'SAVE_ITINERARY',\r\n        payload: itinerary\r\n    }\r\n}\r\n\r\nexport const getCurrentItineraryID = (id) => {\r\n    return {\r\n        type: \"GET_CURRENT_ITINERARY_ID\",\r\n        payload: id\r\n    }\r\n}","import React from \"react\";\r\nimport './Iteneraries.css';\r\nimport Notes from \"./Notes\";\r\nimport Info from \"./Info\";\r\nimport {connect} from \"react-redux\";\r\nimport {deleteLocation} from \"../actions\";\r\nimport './Location.css';\r\n//import { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport NotesOutlinedIcon from '@material-ui/icons/NotesOutlined';\r\n// import EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport ExpandMoreOutlinedIcon from '@material-ui/icons/ExpandMoreOutlined';\r\nimport DeleteOutlineRoundedIcon from '@material-ui/icons/DeleteOutlineRounded';\r\nimport AddAPhotoOutlinedIcon from '@material-ui/icons/AddAPhotoOutlined';\r\n\r\nclass Location extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            showNotes: false,\r\n            showInfo: false,\r\n            showPhotos: false\r\n        };\r\n        this.handleEditBtnClick = this.handleEditBtnClick.bind(this);\r\n        this.handleInfoBtnClick = this.handleInfoBtnClick.bind(this);\r\n        this.handlePhotoBtnClick = this.handlePhotoBtnClick.bind(this);\r\n\r\n\r\n    }\r\n\r\n    handleEditBtnClick() {\r\n        this.setState({\r\n            showNotes: !this.state.showNotes,\r\n            showInfo: false,\r\n            showPhotos: false\r\n        })\r\n    }\r\n\r\n    handleInfoBtnClick() {\r\n        this.setState({\r\n            showNotes: false,\r\n            showInfo: !this.state.showInfo,\r\n            showPhotos: false\r\n        })\r\n    }\r\n\r\n    handlePhotoBtnClick() {\r\n        this.setState({\r\n            showNotes: false,\r\n            showInfo: false,\r\n            showPhotos: !this.state.showPhotos\r\n        })\r\n    }\r\n\r\n    renderSubComp(){\r\n       if (this.state.showNotes) {\r\n           const currLoc = this.props.locations[this.props.idx];\r\n           console.log(currLoc);\r\n         return <Notes location={this.props.locations} idx={this.props.idx} id={this.props.id}/>\r\n        }\r\n        else if (this.state.showInfo) {\r\n            const currLoc = this.props.locations[this.props.idx];\r\n           console.log(currLoc);\r\n            return <Info location={this.props.locations} idx={this.props.idx} id={this.props.id}/>\r\n        }\r\n       else{\r\n           return null;\r\n       }\r\n    }\r\n\r\n    render() {\r\n\r\n        return(\r\n            <div>\r\n            <div className=\"location-bar\">\r\n                <label className={\"location\"}>{this.props.name} </label>\r\n                <label className={\"address\"}> {this.props.address}</label>\r\n                <div className={\"buttonDiv\"}>\r\n\r\n                <IconButton className={\"btn\"} aria-label=\"Info\" name=\"Info\" onClick={this.handleInfoBtnClick}>\r\n                <ExpandMoreOutlinedIcon />\r\n                </IconButton>\r\n\r\n\r\n                <IconButton className={\"btn\"} aria-label=\"Edit\" name=\"Edit\" onClick={this.handleEditBtnClick}>\r\n                <NotesOutlinedIcon />\r\n                </IconButton>\r\n\r\n\r\n                <IconButton className={\"btn\"} aria-label=\"Photo\" name=\"Photo\" onClick={this.handlePhotoBtnClick}>\r\n                <AddAPhotoOutlinedIcon />\r\n                </IconButton>\r\n\r\n                <IconButton className={\"btn\"} aria-label=\"Delete\"  name=\"Delete\" onClick={() => this.props.deleteLocation(this.props.idx)}>\r\n                <DeleteOutlineRoundedIcon />\r\n                </IconButton>\r\n\r\n\r\n\r\n                </div>\r\n            </div>\r\n            <div className=\"display-notes\">\r\n            {this.renderSubComp()}\r\n            </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n        locations: state.locations,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, {deleteLocation})(Location);\r\n","import React from \"react\";\r\nimport {connect} from 'react-redux';\r\nimport Popup from \"reactjs-popup\";\r\nimport { MuiPickersUtilsProvider,DatePicker  } from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport format from 'date-fns/format'\r\nimport {startDateChange,endDateChange} from \"../actions\";\r\n\r\nclass Dates extends React.Component{\r\n\r\n    render() {\r\n        let datesComponent =\r\n            <ul className={\"zeroPad zeroMarg\"}>\r\n                {this.props.place.dateRanges.map((date,index) => (\r\n                    <li key={index}>{date.start + \" - \" + date.end}</li>\r\n                ))}\r\n            </ul>;\r\n        return(\r\n            <div className={this.props.class+ \"\"}>\r\n\r\n                <Popup className=\"widthFix\" trigger={datesComponent} modal>\r\n                    {close => (\r\n                        <div className=\"modal\" style={{color: \"black\"}}>\r\n                            <a className=\"close\" onClick={close}>\r\n                                &times;\r\n                            </a>\r\n                            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                <div className={\"DatePicker\"}>\r\n                                    <DatePicker\r\n                                        label={\"Start Date\"}\r\n                                        value={new Date(this.props.place.dateRanges[0].start)}\r\n                                        onChange={this.handleChangeStartDate}\r\n                                        animateYearScrolling                                    />\r\n                                </div>\r\n                                <div className={\"DatePicker\"}>\r\n                                    <DatePicker\r\n                                        label={\"End Date\"}\r\n                                        value={new Date(this.props.place.dateRanges[0].end)}\r\n                                        onChange={this.handleChangeEndDate}\r\n                                        animateYearScrolling\r\n                                    />\r\n                                </div>\r\n                            </MuiPickersUtilsProvider>\r\n                        </div>\r\n                    )}\r\n                </Popup>\r\n            </div>\r\n\r\n        );\r\n    }\r\n    handleChangeStartDate = (date) => {\r\n        console.log(\"CHANGING START DATE: \" + format(date, 'yyyy/MM/dd'));\r\n        let dateString = format(date, 'yyyy/MM/dd');\r\n        this.props.startDateChange(this.props.place,this.props.type,dateString,0)\r\n    };\r\n    handleChangeEndDate = (date) => {\r\n        console.log(\"CHANGING END DATE: \" + format(date, 'yyyy/MM/dd'));\r\n        let dateString = format(date, 'yyyy/MM/dd');\r\n        this.props.endDateChange(this.props.place,this.props.type,dateString,0)\r\n    };\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n        locations: state.locations,\r\n        currentView: state.currentView,\r\n        cities: state.cities,\r\n        countries: state.countries\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps,{startDateChange,endDateChange})(Dates);","import React from \"react\";\r\nimport Location from \"./Location\";\r\nimport './Iteneraries.css';\r\nimport {connect} from 'react-redux';\r\nimport Dates from \"./Dates\";\r\n\r\n\r\nclass City extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n    render() {\r\n\r\n        let cityToRenderID = this.props.currentView.byID.city;\r\n        let cityToRender = this.props.cities.filter(function(city){\r\n            return city.id === cityToRenderID;\r\n        });\r\n        cityToRender = cityToRender[0];\r\n\r\n        let countryToRenderID = this.props.currentView.byID.country;\r\n        let countryToRender = this.props.countries.filter(function(country){\r\n            return country.id === countryToRenderID;\r\n        });\r\n        countryToRender = countryToRender[0];\r\n\r\n        let locationsToRender = this.props.locations.filter(function(loc){\r\n            return loc.cityID === cityToRenderID;\r\n        });\r\n        return(\r\n            <div className={\"cityDiv\"}>\r\n                <h2>{cityToRender.name}, {countryToRender.name}</h2>\r\n                <Dates place={cityToRender} class={\"datesDiv\"} type={\"city\"}/>\r\n                <div className={\"locationsDiv\"}>\r\n                    <ul className={\"zeroPad zeroMarg\"}>\r\n                        {locationsToRender.map((loc,index) => (\r\n                            <li key={index}> <Location idx={index} name={loc.location} address={loc.address} id={loc.id}/></li>\r\n                        ))}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n        locations: state.locations,\r\n        currentView: state.currentView,\r\n        cities: state.cities,\r\n        countries: state.countries\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(City);\r\n//\r\n// const muiStyles = {\r\n//     bg: {\r\n//         position: \"absolute\",\r\n//         backgroundImage: `url(${require(\"../assets/vancouver.jpg\")})`,\r\n//         backgroundSize: \"cover\",\r\n//         height: \"100vh\",\r\n//         width: \"100vw\",\r\n//         top: \"0\",\r\n//         left: \"0\",\r\n//         color: \"#000000\",\r\n//         fontSize: \"30px\"\r\n//     }\r\n// };\r\n\r\n// export default withStyles(muiStyles)(City);","import React from 'react'\r\nimport { withStyles} from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nclass Navbar extends React.Component {\r\n\r\n    render() {\r\n        const {classes} = this.props;\r\n        return (\r\n            <div className={classes.navbar}>\r\n                <Button href=\"/\" className={classes.link}>Home</Button>\r\n                <Button href=\"/itineraries\" className={classes.link}>Itineraries</Button>\r\n                <Button href=\"/archive\" className={classes.link}>Archived Trips</Button>\r\n                <Button href=\"/lists\" className={classes.link}>Your Lists</Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst style = {\r\n    navbar: {\r\n        position: \"fixed\",\r\n        backgroundColor: \"rgba(0, 0, 0, 0.7)\",\r\n        overflow: \"hidden\",\r\n        width: \"100vw\",\r\n        zIndex: \"0\"\r\n    },\r\n    link: {\r\n        float: \"left\",\r\n        color: \"white\",\r\n        textAlign: \"center\",\r\n        padding: \"5px 20px\",\r\n        textDecoration: \"none\",\r\n        fontSize: \"17px\"\r\n}\r\n};\r\n\r\nexport default withStyles(style)(Navbar);","import React from \"react\";\r\nimport { withStyles } from \"@material-ui/core\";\r\nimport City from \"./City\";\r\nimport './Itinerary.css';\r\nimport Map from \"./Map\";\r\nimport Navbar from \"./Navbar\";\r\n\r\nclass Itineraries extends React.Component {\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        return(\r\n            <React.Fragment>\r\n            <div className={classes.bg}>\r\n                <div className={classes.leftPanel}>\r\n                    <div className= {\"top-panel\"}>\r\n                    <Map />\r\n                    </div>\r\n                </div>\r\n                <div className={`${classes.rightPanel} ${classes.table}`}>\r\n                    <City/>\r\n                </div>\r\n            </div>\r\n                <div><Navbar/></div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst muiStyles = {\r\n    bg: {\r\n        position: \"absolute\",\r\n        backgroundImage: `url(${require(\"../assets/vancouver.jpg\")})`,\r\n        backgroundSize: \"cover\",\r\n        height: \"100vh\",\r\n        width: \"100vw\",\r\n        top: \"0\",\r\n        left: \"0\",\r\n        color: \"#000000\",\r\n        fontSize: \"30px\"\r\n    },\r\n    rightPanel: {\r\n        position: \"absolute\",\r\n        // height: \"100vh\",\r\n        left: \"50vw\",\r\n        width: \"50vw\"\r\n    },\r\n    leftPanel: {\r\n        position: \"absolute\",\r\n        //height: \"100vh\",\r\n        width: \"50vw\",\r\n        top: \"6vh\"\r\n    },\r\n    table: {\r\n        top: \"14vh\"\r\n    }\r\n};\r\n\r\nexport default withStyles(muiStyles)(Itineraries);","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport axios from 'axios'; \r\nimport {saveItinerary,getCurrentItineraryID} from \"../actions\"\r\nconst { uuid } = require('uuidv4');\r\n\r\nclass SaveButton extends React.Component {\r\n\r\n    saveItinerary = () => {\r\n        let Itinerary = {};\r\n        if (this.props.currentItinerary === null) {\r\n            console.log(\"Current Itinerary has not been saved yet\");\r\n            Itinerary = {\r\n                id: uuid(),\r\n                locations: this.props.locations,\r\n                cities: this.props.cities,\r\n                countries: this.props.countries,\r\n            }\r\n            this.props.saveItinerary(Itinerary);\r\n        } else {\r\n            Itinerary = {\r\n                id: this.props.currentItinerary.id,\r\n                locations: this.props.locations,\r\n                cities: this.props.cities,\r\n                countries: this.props.countries,\r\n            };\r\n            this.props.saveItinerary(Itinerary);\r\n        }\r\n\r\n        console.log(Itinerary.id);\r\n        this.props.getCurrentItineraryID(Itinerary.id);\r\n        axios.get(\"http://localhost:9000/itinerary/exist/\"+ Itinerary.id)\r\n            .then(res => {\r\n                console.log(\"exist worked\");\r\n                console.log(res.data);\r\n                if(res.data) {\r\n                    console.log(\"Going to call patch\");\r\n                    console.log(Itinerary);\r\n                    console.log(this.props.currentItineraryID)\r\n                    axios.patch(\"http://localhost:9000/itinerary/save/\" + this.props.currentItineraryID, Itinerary)\r\n                    .then(res=> {\r\n                        console.log(res.data)\r\n                    })\r\n                    .catch(err=> {\r\n                        console.log(err);\r\n                    })\r\n                } else {\r\n                console.log(\"Going to call post\");\r\n                axios.post(\"http://localhost:9000/itinerary/save\", Itinerary)\r\n                    .then(res => {\r\n                        console.log(\"Itinerary added to db and the Object id is \"  + res.data);\r\n                    })\r\n                    .catch(err => {\r\n                        console.log(err);\r\n                    })\r\n\r\n                }\r\n            })\r\n\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <button className={\"addLocationButton\"} onClick={() => this.saveItinerary()}>Save Itinerary</button>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n        currentItinerary: state.currentItinerary,\r\n        locations: state.locations,\r\n        cities: state.cities,\r\n        countries: state.countries,\r\n        currentItineraryID: state.currentItineraryID,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, {saveItinerary,getCurrentItineraryID})(SaveButton);","import {addLocation} from \"../actions\";\r\nimport React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nconst { uuid } = require('uuidv4');\r\n\r\nclass LocationButton extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n    render() {\r\n        return (\r\n            <button className={\"addLocationButton\"} onClick={this.addLocationToItinerary.bind(this)}>Add Location</button>\r\n        )\r\n    }\r\n    addLocationToItinerary() {\r\n        let currentMapLocation = this.props.mapLocation;\r\n\r\n        let city = currentMapLocation.Area;\r\n        let address = currentMapLocation.Address;\r\n        let country = currentMapLocation.Country;\r\n        let location = currentMapLocation.Name;\r\n\r\n        if(this.props.countries.map(item => item.name).includes(country)){\r\n            if(this.props.cities.map(item => item.name).includes(city)){\r\n                let cityID = this.props.cities.filter((item) => {return item.name == city})[0].id;\r\n                console.log(cityID);\r\n                if(!this.props.locations.map(item => item.location).includes(location)){\r\n                    let locationID = uuid();\r\n                    this.props.addLocation(locationID,location,address,cityID);\r\n                    console.log(\"valid location\");\r\n                    console.log(this.props.locations);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n        mapLocation: state.mapLocation,\r\n        cities: state.cities,\r\n        countries: state.countries,\r\n        locations: state.locations,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps,{addLocation})(LocationButton);","import React from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { changeView, renderLocation, getCurrentItineraryID,saveItinerary} from '../actions';\r\nimport './Itinerary.css';\r\nimport './Iteneraries.css';\r\nimport Collapsible from \"react-collapsible\";\r\nimport City from \"./City\";\r\nimport Map from \"./Map\";\r\nimport SaveButton from \"./SaveButton\";\r\nimport LocationButton from \"./LocationButton\";\r\nimport Dates from \"./Dates\";\r\nimport axios from \"axios\";\r\n\r\n\r\nclass Itinerary extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    componentDidMount(){\r\n        axios.get(\"http://localhost:9000/itinerary/\")\r\n            .then(response => {\r\n            if(response.data.length > 0){\r\n                this.props.renderLocation(response.data[0].locations);\r\n                this.props.getCurrentItineraryID(response.data[0]._id);\r\n                this.props.saveItinerary({id: response.data[0].id});\r\n            } else {\r\n                this.props.renderLocation([]);\r\n            }\r\n        })\r\n            .catch(err => console.log(\"Err\" + err));\r\n        console.log(\"GOT HERE!!!!\");\r\n    }\r\n\r\n\r\n    renderItinerary() {\r\n        const content = [];\r\n        const locations = this.props.locations;\r\n        for (const country of this.props.countries) {\r\n            content.push(\r\n                <Collapsible key={country.name} trigger={\r\n                    <div>\r\n                        <h1>{country.name}</h1>\r\n                        <Dates place={country} class={\"dates\"} type={\"country\"}/>\r\n                    </div>\r\n                }>\r\n\r\n                {this.props.cities.filter(function(city){\r\n                    return city.countryID == country.id;\r\n                }).map(function(city,index){\r\n                    return (<div key={index} className=\"stripe item-font\" onClick={() => this.props.changeView(country,city)}>{city.name}</div>)\r\n                },this)\r\n                }\r\n            </Collapsible>\r\n            )\r\n        }\r\n        return content;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <h1>{this.props.itinerary.name}</h1>\r\n                {this.renderItinerary()}\r\n                <City/>\r\n                <LocationButton/>\r\n                <SaveButton/>\r\n                <Map className={\"map\"}/>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n//state has entire state of app!!\r\nconst mapStateToProps = (state) => { //name is by convention\r\n    return {\r\n        lists: state.lists,\r\n        msgId: state.msgId,\r\n        countries: state.countries,\r\n        cities: state.cities,\r\n        itinerary: state.itinerary,\r\n        locations: state.locations,\r\n    }; //now it will appear as props\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps, {changeView, renderLocation, getCurrentItineraryID,saveItinerary})(Itinerary);\r\n","import React from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { addMsg, selectMsg, deleteMsg } from '../actions';\r\nimport Popup from \"reactjs-popup\";\r\nimport \"./Lists.css\";\r\nimport Collapsible from \"react-collapsible\";\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport {Checkbox} from \"@material-ui/core\";\r\nimport \"./Expandable.css\"\r\nclass Lists extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            currentTargetId: \"none\",\r\n            currentListId: -1,\r\n            addedCountry: [],\r\n            country: require(\"../assets/country_state_city\"),\r\n            countryList: []\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.addList = this.addList.bind(this);\r\n        this.renderCountry = this.renderCountry.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        let targetId = event.target.id;\r\n        this.setState(prevState => ({\r\n            [targetId]: !prevState[targetId]\r\n        }));\r\n        this.setState({currentTargetId: targetId});\r\n        if (this.state.targetId === false) {\r\n            // let countryName = event.target.parentNode.trigger;\r\n            let countryName = \"Albania\";\r\n            let index = null;\r\n\r\n            if (!this.state.addedCountry.includes(countryName)) {\r\n                this.setState({countryList: [{\"name\": [countryName],\r\n                    \"states\": {\"name\": \"Berat District\"}}]});\r\n                this.setState({addedCountry: [countryName]});\r\n\r\n\r\n            } else {\r\n                index = this.state.addedCountry.indexOf(countryName);\r\n                this.state.countryList[index].states.push({\"name\": [[event.target.name]]});\r\n            }\r\n        }\r\n    };\r\n\r\n    addList() {\r\n        let newList = {\r\n            \"listId\": null,\r\n            \"listName\": \"New List\",\r\n            \"countryList\": this.state.countryList\r\n        };\r\n        this.props.addMsg(newList);\r\n        this.setState({\r\n                countryList: []\r\n            });\r\n    }\r\n\r\n    renderCountry() {\r\n        const list = [];\r\n        let checkedName = null;\r\n        for (const item of this.state.country) {\r\n            list.push(\r\n                <React.Fragment>\r\n                <Collapsible trigger={item.name} id={item.id}>\r\n                    {item.states.map((state, index) => {\r\n                        checkedName = \"checkbox\" + index.toString();\r\n                        return (\r\n                            <div className=\"stripe\">\r\n                                <Checkbox checked={this.state.checkedName} onClick={this.handleChange} id={checkedName} name={state.name} />\r\n                                {state.name}\r\n                            </div>\r\n                        )})}\r\n                </Collapsible>\r\n                </React.Fragment>);\r\n        }\r\n\r\n        return list;\r\n    }\r\n\r\n    renderList() {\r\n        const content = [];\r\n        for (const list of this.props.lists) {\r\n            content.push(<Collapsible trigger={list.listName}>\r\n                {list.countryList.map(function(country) {\r\n                        return (<Collapsible trigger={country.name}>\r\n                            {country.states.map(function(state) {\r\n                                return (<div className=\"stripe\">{state.name}</div>)\r\n                            })}\r\n                        </Collapsible>)\r\n                }\r\n\r\n                )\r\n                }\r\n            </Collapsible>)\r\n                }\r\n        return content;\r\n        }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                {this.renderList()}\r\n                <Popup className=\"widthFix\" trigger={<button className=\"button\"> Add List </button>} modal>\r\n                    {close => (\r\n                        <div className=\"modal\">\r\n                            <a className=\"close\" onClick={close}>\r\n                                &times;\r\n                            </a>\r\n                            <div className=\"header\"> Modal Title </div>\r\n                            <div className=\"content\">\r\n                                {this.renderCountry()}\r\n                            </div>\r\n                            <div className=\"actions\">\r\n                                <button\r\n                                    className=\"button\"\r\n                                    onClick={() => {\r\n                                        this.addList();\r\n                                        close();\r\n                                    }}\r\n                                >\r\n                                    Add List\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </Popup>\r\n                <div> {JSON.stringify(this.props.lists[this.props.lists.length-1])} </div>\r\n                <div> {this.state.addedCountry.toString()} </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n//state has entire state of app!!\r\nconst mapStateToProps = (state) => { //name is by convention\r\n    return {\r\n        lists: state.lists,\r\n        msgId: state.msgId\r\n    }; //now it will appear as props\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps, { addMsg, selectMsg, deleteMsg })(Lists);\r\n","import React from 'react';\r\nimport './App.css';\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport Home from \"./Home\";\r\nimport Map from \"./Map\";\r\nimport Itineraries from \"./Itineraries\";\r\nimport Itinerary from \"./Itinerary\";\r\nimport Lists from \"./Lists\";\r\nimport './fonts.css';\r\n\r\nfunction App() {\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Route exact path=\"/itineraries\">\r\n                    <Itineraries />\r\n                </Route>\r\n                <Route exact path=\"/\">\r\n                    <Home />\r\n                </Route>\r\n                <Route exact path=\"/map\">\r\n                    <Map />\r\n                </Route>\r\n                <Route exact path=\"/lists\">\r\n                    <Lists />\r\n                </Route>\r\n                <Route exact path=\"/test\">\r\n                    <Itinerary />\r\n                </Route>\r\n            </div>\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import {combineReducers} from 'redux';\r\nimport '../index.css';\r\n\r\nconst currentLocation = {\r\n    Name: \"\",\r\n    Address: \"\",\r\n    PlacesId: \"ChIJK7VbnXxxhlQRCbKQyeRwBJ4\",\r\n    Area: \"\",\r\n    Country: \"\",\r\n    Info: {}\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst mapLocationReducer = (state = currentLocation, action) => {\r\n    switch(action.type) {\r\n        case 'GET_LOCATION':\r\n            return {\r\n                ...state,\r\n                Name: action.payload.placeName,\r\n                Address: action.payload.fulladdress,\r\n                PlacesId: action.payload.placeId,\r\n                Info: action.payload.info,\r\n                Area: action.payload.placeArea,\r\n                Country: action.payload.placeCountry\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nlet jsonObj = [{\r\n    \"listId\": 0,\r\n    \"listName\": \"Visited Countries/Cities\",\r\n    \"countryList\": [{\r\n        \"id\": 1,\r\n        \"name\": \"Afghanistan\",\r\n        \"iso3\": \"AFG\",\r\n        \"iso2\": \"AF\",\r\n        \"phone_code\": \"93\",\r\n        \"capital\": \"Kabul\",\r\n        \"currency\": \"AFN\",\r\n        \"states\": [\r\n            {\r\n                \"id\": 3901,\r\n                \"name\": \"Badakhshan\",\r\n                \"state_code\": \"BDS\",\r\n                \"cities\": [\r\n                    {\r\n                        \"id\": 52,\r\n                        \"name\": \"Ashkāsham\",\r\n                        \"latitude\": \"36.68333000\",\r\n                        \"longitude\": \"71.53333000\"\r\n                    },\r\n                    {\r\n                        \"id\": 68,\r\n                        \"name\": \"Fayzabad\",\r\n                        \"latitude\": \"37.11664000\",\r\n                        \"longitude\": \"70.58002000\"\r\n                    },\r\n                    {\r\n                        \"id\": 78,\r\n                        \"name\": \"Jurm\",\r\n                        \"latitude\": \"36.86477000\",\r\n                        \"longitude\": \"70.83421000\"\r\n                    },\r\n                    {\r\n                        \"id\": 84,\r\n                        \"name\": \"Khandūd\",\r\n                        \"latitude\": \"36.95127000\",\r\n                        \"longitude\": \"72.31800000\"\r\n                    },\r\n                    {\r\n                        \"id\": 115,\r\n                        \"name\": \"Rāghistān\",\r\n                        \"latitude\": \"37.66079000\",\r\n                        \"longitude\": \"70.67346000\"\r\n                    },\r\n                    {\r\n                        \"id\": 131,\r\n                        \"name\": \"Wākhān\",\r\n                        \"latitude\": \"37.05710000\",\r\n                        \"longitude\": \"73.34928000\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"id\": 3871,\r\n                \"name\": \"Badghis\",\r\n                \"state_code\": \"BDG\",\r\n                \"cities\": [\r\n                    {\r\n                        \"id\": 72,\r\n                        \"name\": \"Ghormach\",\r\n                        \"latitude\": \"35.73062000\",\r\n                        \"longitude\": \"63.78264000\"\r\n                    },\r\n                    {\r\n                        \"id\": 108,\r\n                        \"name\": \"Qala i Naw\",\r\n                        \"latitude\": \"34.98735000\",\r\n                        \"longitude\": \"63.12891000\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"id\": 3875,\r\n                \"name\": \"Baghlan\",\r\n                \"state_code\": \"BGL\",\r\n                \"cities\": [\r\n                    {\r\n                        \"id\": 54,\r\n                        \"name\": \"Baghlān\",\r\n                        \"latitude\": \"36.13068000\",\r\n                        \"longitude\": \"68.70829000\"\r\n                    },\r\n                    {\r\n                        \"id\": 140,\r\n                        \"name\": \"Ḩukūmatī Dahanah-ye Ghōrī\",\r\n                        \"latitude\": \"35.90617000\",\r\n                        \"longitude\": \"68.48869000\"\r\n                    },\r\n                    {\r\n                        \"id\": 101,\r\n                        \"name\": \"Nahrīn\",\r\n                        \"latitude\": \"36.06490000\",\r\n                        \"longitude\": \"69.13343000\"\r\n                    },\r\n                    {\r\n                        \"id\": 105,\r\n                        \"name\": \"Pul-e Khumrī\",\r\n                        \"latitude\": \"35.94458000\",\r\n                        \"longitude\": \"68.71512000\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"id\": 3884,\r\n                \"name\": \"Balkh\",\r\n                \"state_code\": \"BAL\",\r\n                \"cities\": [\r\n                    {\r\n                        \"id\": 55,\r\n                        \"name\": \"Balkh\",\r\n                        \"latitude\": \"36.75635000\",\r\n                        \"longitude\": \"66.89720000\"\r\n                    },\r\n                    {\r\n                        \"id\": 65,\r\n                        \"name\": \"Dowlatābād\",\r\n                        \"latitude\": \"36.98821000\",\r\n                        \"longitude\": \"66.82069000\"\r\n                    },\r\n                    {\r\n                        \"id\": 85,\r\n                        \"name\": \"Khulm\",\r\n                        \"latitude\": \"36.69736000\",\r\n                        \"longitude\": \"67.69826000\"\r\n                    },\r\n                    {\r\n                        \"id\": 91,\r\n                        \"name\": \"Lab-Sar\",\r\n                        \"latitude\": \"36.02634000\",\r\n                        \"longitude\": \"66.83799000\"\r\n                    },\r\n                    {\r\n                        \"id\": 97,\r\n                        \"name\": \"Mazār-e Sharīf\",\r\n                        \"latitude\": \"36.70904000\",\r\n                        \"longitude\": \"67.11087000\"\r\n                    },\r\n                    {\r\n                        \"id\": 112,\r\n                        \"name\": \"Qarchī Gak\",\r\n                        \"latitude\": \"37.03999000\",\r\n                        \"longitude\": \"66.78891000\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"id\": 3872,\r\n                \"name\": \"Bamyan\",\r\n                \"state_code\": \"BAM\",\r\n                \"cities\": [\r\n                    {\r\n                        \"id\": 57,\r\n                        \"name\": \"Bāmyān\",\r\n                        \"latitude\": \"34.82156000\",\r\n                        \"longitude\": \"67.82734000\"\r\n                    },\r\n                    {\r\n                        \"id\": 104,\r\n                        \"name\": \"Panjāb\",\r\n                        \"latitude\": \"34.38795000\",\r\n                        \"longitude\": \"67.02327000\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"id\": 3892,\r\n                \"name\": \"Daykundi\",\r\n                \"state_code\": \"DAY\",\r\n                \"cities\": [\r\n                    {\r\n                        \"id\": 102,\r\n                        \"name\": \"Nīlī\",\r\n                        \"latitude\": \"33.76329000\",\r\n                        \"longitude\": \"66.07617000\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"id\": 3899,\r\n                \"name\": \"Farah\",\r\n                \"state_code\": \"FRA\",\r\n                \"cities\": [\r\n                    {\r\n                        \"id\": 66,\r\n                        \"name\": \"Farah\",\r\n                        \"latitude\": \"32.37451000\",\r\n                        \"longitude\": \"62.11638000\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"id\": 3889,\r\n                \"name\": \"Faryab\",\r\n                \"state_code\": \"FYB\",\r\n                \"cities\": [\r\n                    {\r\n                        \"id\": 50,\r\n                        \"name\": \"Andkhoy\",\r\n                        \"latitude\": \"36.95293000\",\r\n                        \"longitude\": \"65.12376000\"\r\n                    },\r\n                    {\r\n                        \"id\": 96,\r\n                        \"name\": \"Maymana\",\r\n                        \"latitude\": \"35.92139000\",\r\n                        \"longitude\": \"64.78361000\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"id\": 3870,\r\n                \"name\": \"Ghazni\",\r\n                \"state_code\": \"GHA\",\r\n                \"cities\": [\r\n                    {\r\n                        \"id\": 71,\r\n                        \"name\": \"Ghazni\",\r\n                        \"latitude\": \"33.55391000\",\r\n                        \"longitude\": \"68.42096000\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"id\": 3888,\r\n                \"name\": \"Ghōr\",\r\n                \"state_code\": \"GHO\",\r\n                \"cities\": [\r\n                    {\r\n                        \"id\": 67,\r\n                        \"name\": \"Fayrōz Kōh\",\r\n                        \"latitude\": \"34.51952000\",\r\n                        \"longitude\": \"65.25093000\"\r\n                    },\r\n                    {\r\n                        \"id\": 121,\r\n                        \"name\": \"Shahrak\",\r\n                        \"latitude\": \"34.10737000\",\r\n                        \"longitude\": \"64.30520000\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"id\": 3873,\r\n                \"name\": \"Helmand\",\r\n                \"state_code\": \"HEL\",\r\n                \"cities\": [\r\n                    {\r\n                        \"id\": 141,\r\n                        \"name\": \"‘Alāqahdārī Dīshū\",\r\n                        \"latitude\": \"30.43206000\",\r\n                        \"longitude\": \"63.29802000\"\r\n                    },\r\n                    {\r\n                        \"id\": 70,\r\n                        \"name\": \"Gereshk\",\r\n                        \"latitude\": \"31.82089000\",\r\n                        \"longitude\": \"64.57005000\"\r\n                    },\r\n                    {\r\n                        \"id\": 93,\r\n                        \"name\": \"Lashkar Gāh\",\r\n                        \"latitude\": \"31.59382000\",\r\n                        \"longitude\": \"64.37161000\"\r\n                    },\r\n                    {\r\n                        \"id\": 95,\r\n                        \"name\": \"Markaz-e Ḩukūmat-e Darwēshān\",\r\n                        \"latitude\": \"31.13231000\",\r\n                        \"longitude\": \"64.19340000\"\r\n                    },\r\n                    {\r\n                        \"id\": 118,\r\n                        \"name\": \"Sangīn\",\r\n                        \"latitude\": \"32.07275000\",\r\n                        \"longitude\": \"64.83590000\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"id\": 3887,\r\n                \"name\": \"Herat\",\r\n                \"state_code\": \"HER\",\r\n                \"cities\": [\r\n                    {\r\n                        \"id\": 60,\r\n                        \"name\": \"Chahār Burj\",\r\n                        \"latitude\": \"34.24475000\",\r\n                        \"longitude\": \"62.19165000\"\r\n                    },\r\n                    {\r\n                        \"id\": 73,\r\n                        \"name\": \"Ghōriyān\",\r\n                        \"latitude\": \"34.34480000\",\r\n                        \"longitude\": \"61.49321000\"\r\n                    },\r\n                    {\r\n                        \"id\": 74,\r\n                        \"name\": \"Herāt\",\r\n                        \"latitude\": \"34.34817000\",\r\n                        \"longitude\": \"62.19967000\"\r\n                    },\r\n                    {\r\n                        \"id\": 80,\r\n                        \"name\": \"Kafir Qala\",\r\n                        \"latitude\": \"34.66667000\",\r\n                        \"longitude\": \"61.06667000\"\r\n                    },\r\n                    {\r\n                        \"id\": 82,\r\n                        \"name\": \"Karukh\",\r\n                        \"latitude\": \"34.48108000\",\r\n                        \"longitude\": \"62.58630000\"\r\n                    },\r\n                    {\r\n                        \"id\": 88,\r\n                        \"name\": \"Kuhsān\",\r\n                        \"latitude\": \"34.65389000\",\r\n                        \"longitude\": \"61.19778000\"\r\n                    },\r\n                    {\r\n                        \"id\": 90,\r\n                        \"name\": \"Kushk\",\r\n                        \"latitude\": \"33.29565000\",\r\n                        \"longitude\": \"61.95221000\"\r\n                    },\r\n                    {\r\n                        \"id\": 111,\r\n                        \"name\": \"Qarah Bāgh\",\r\n                        \"latitude\": \"34.94023000\",\r\n                        \"longitude\": \"61.77589000\"\r\n                    },\r\n                    {\r\n                        \"id\": 123,\r\n                        \"name\": \"Shīnḏanḏ\",\r\n                        \"latitude\": \"33.30294000\",\r\n                        \"longitude\": \"62.14740000\"\r\n                    },\r\n                    {\r\n                        \"id\": 129,\r\n                        \"name\": \"Tīr Pul\",\r\n                        \"latitude\": \"34.59431000\",\r\n                        \"longitude\": \"61.26895000\"\r\n                    },\r\n                    {\r\n                        \"id\": 135,\r\n                        \"name\": \"Zindah Jān\",\r\n                        \"latitude\": \"34.34264000\",\r\n                        \"longitude\": \"61.74675000\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"id\": 3886,\r\n                \"name\": \"Jowzjan\",\r\n                \"state_code\": \"JOW\",\r\n                \"cities\": [\r\n                    {\r\n                        \"id\": 136,\r\n                        \"name\": \"Āqchah\",\r\n                        \"latitude\": \"36.90500000\",\r\n                        \"longitude\": \"66.18341000\"\r\n                    },\r\n                    {\r\n                        \"id\": 63,\r\n                        \"name\": \"Darzāb\",\r\n                        \"latitude\": \"35.97744000\",\r\n                        \"longitude\": \"65.37828000\"\r\n                    },\r\n                    {\r\n                        \"id\": 113,\r\n                        \"name\": \"Qarqīn\",\r\n                        \"latitude\": \"37.41853000\",\r\n                        \"longitude\": \"66.04358000\"\r\n                    },\r\n                    {\r\n                        \"id\": 122,\r\n                        \"name\": \"Shibirghān\",\r\n                        \"latitude\": \"36.66757000\",\r\n                        \"longitude\": \"65.75290000\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"id\": 3902,\r\n                \"name\": \"Kabul\",\r\n                \"state_code\": \"KAB\",\r\n                \"cities\": [\r\n                    {\r\n                        \"id\": 79,\r\n                        \"name\": \"Kabul\",\r\n                        \"latitude\": \"34.52813000\",\r\n                        \"longitude\": \"69.17233000\"\r\n                    },\r\n                    {\r\n                        \"id\": 99,\r\n                        \"name\": \"Mīr Bachah Kōṯ\",\r\n                        \"latitude\": \"34.74999000\",\r\n                        \"longitude\": \"69.11899000\"\r\n                    },\r\n                    {\r\n                        \"id\": 103,\r\n                        \"name\": \"Paghmān\",\r\n                        \"latitude\": \"34.58787000\",\r\n                        \"longitude\": \"68.95091000\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"id\": 3890,\r\n                \"name\": \"Kandahar\",\r\n                \"state_code\": \"KAN\",\r\n                \"cities\": [\r\n                    {\r\n                        \"id\": 81,\r\n                        \"name\": \"Kandahār\",\r\n                        \"latitude\": \"31.61332000\",\r\n                        \"longitude\": \"65.71013000\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"id\": 3879,\r\n                \"name\": \"Kapisa\",\r\n                \"state_code\": \"KAP\",\r\n                \"cities\": [\r\n                    {\r\n                        \"id\": 124,\r\n                        \"name\": \"Sidqābād\",\r\n                        \"latitude\": \"35.02298000\",\r\n                        \"longitude\": \"69.35112000\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"id\": 3878,\r\n                \"name\": \"Khost\",\r\n                \"state_code\": \"KHO\",\r\n                \"cities\": [\r\n                    {\r\n                        \"id\": 87,\r\n                        \"name\": \"Khōst\",\r\n                        \"latitude\": \"33.33951000\",\r\n                        \"longitude\": \"69.92041000\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"id\": 3876,\r\n                \"name\": \"Kunar\",\r\n                \"state_code\": \"KNR\",\r\n                \"cities\": [\r\n                    {\r\n                        \"id\": 51,\r\n                        \"name\": \"Asadabad\",\r\n                        \"latitude\": \"34.87311000\",\r\n                        \"longitude\": \"71.14697000\"\r\n                    },\r\n                    {\r\n                        \"id\": 138,\r\n                        \"name\": \"Āsmār\",\r\n                        \"latitude\": \"35.03333000\",\r\n                        \"longitude\": \"71.35809000\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"id\": 3900,\r\n                \"name\": \"Kunduz Province\",\r\n                \"state_code\": \"KDZ\",\r\n                \"cities\": [\r\n                    {\r\n                        \"id\": 64,\r\n                        \"name\": \"Dasht-e Archī\",\r\n                        \"latitude\": \"37.13333000\",\r\n                        \"longitude\": \"69.16667000\"\r\n                    },\r\n                    {\r\n                        \"id\": 75,\r\n                        \"name\": \"Imām Şāḩib\",\r\n                        \"latitude\": \"37.18897000\",\r\n                        \"longitude\": \"68.93644000\"\r\n                    },\r\n                    {\r\n                        \"id\": 83,\r\n                        \"name\": \"Khanabad\",\r\n                        \"latitude\": \"36.68250000\",\r\n                        \"longitude\": \"69.11556000\"\r\n                    },\r\n                    {\r\n                        \"id\": 89,\r\n                        \"name\": \"Kunduz\",\r\n                        \"latitude\": \"36.72895000\",\r\n                        \"longitude\": \"68.85700000\"\r\n                    },\r\n                    {\r\n                        \"id\": 114,\r\n                        \"name\": \"Qarāwul\",\r\n                        \"latitude\": \"37.21959000\",\r\n                        \"longitude\": \"68.78020000\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"id\": 3891,\r\n                \"name\": \"Laghman\",\r\n                \"state_code\": \"LAG\",\r\n                \"cities\": [\r\n                    {\r\n                        \"id\": 98,\r\n                        \"name\": \"Mehtar Lām\",\r\n                        \"latitude\": \"34.67139000\",\r\n                        \"longitude\": \"70.20944000\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"id\": 3897,\r\n                \"name\": \"Logar\",\r\n                \"state_code\": \"LOG\",\r\n                \"cities\": [\r\n                    {\r\n                        \"id\": 56,\r\n                        \"name\": \"Baraki Barak\",\r\n                        \"latitude\": \"33.96744000\",\r\n                        \"longitude\": \"68.94920000\"\r\n                    },\r\n                    {\r\n                        \"id\": 139,\r\n                        \"name\": \"Ḩukūmatī Azrah\",\r\n                        \"latitude\": \"34.17355000\",\r\n                        \"longitude\": \"69.64573000\"\r\n                    },\r\n                    {\r\n                        \"id\": 106,\r\n                        \"name\": \"Pul-e ‘Alam\",\r\n                        \"latitude\": \"33.99529000\",\r\n                        \"longitude\": \"69.02274000\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"id\": 3882,\r\n                \"name\": \"Nangarhar\",\r\n                \"state_code\": \"NAN\",\r\n                \"cities\": [\r\n                    {\r\n                        \"id\": 58,\r\n                        \"name\": \"Bāsawul\",\r\n                        \"latitude\": \"34.24749000\",\r\n                        \"longitude\": \"70.87218000\"\r\n                    },\r\n                    {\r\n                        \"id\": 77,\r\n                        \"name\": \"Jalālābād\",\r\n                        \"latitude\": \"34.42647000\",\r\n                        \"longitude\": \"70.45153000\"\r\n                    },\r\n                    {\r\n                        \"id\": 94,\r\n                        \"name\": \"Markaz-e Woluswalī-ye Āchīn\",\r\n                        \"latitude\": \"34.12583000\",\r\n                        \"longitude\": \"70.70778000\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"id\": 3896,\r\n                \"name\": \"Nimruz\",\r\n                \"state_code\": \"NIM\",\r\n                \"cities\": [\r\n                    {\r\n                        \"id\": 86,\r\n                        \"name\": \"Khāsh\",\r\n                        \"latitude\": \"31.52919000\",\r\n                        \"longitude\": \"62.79055000\"\r\n                    },\r\n                    {\r\n                        \"id\": 100,\r\n                        \"name\": \"Mīrābād\",\r\n                        \"latitude\": \"30.43624000\",\r\n                        \"longitude\": \"61.83830000\"\r\n                    },\r\n                    {\r\n                        \"id\": 116,\r\n                        \"name\": \"Rūdbār\",\r\n                        \"latitude\": \"30.15000000\",\r\n                        \"longitude\": \"62.60000000\"\r\n                    },\r\n                    {\r\n                        \"id\": 132,\r\n                        \"name\": \"Zaranj\",\r\n                        \"latitude\": \"30.95962000\",\r\n                        \"longitude\": \"61.86037000\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"id\": 3880,\r\n                \"name\": \"Nuristan\",\r\n                \"state_code\": \"NUR\",\r\n                \"cities\": [\r\n                    {\r\n                        \"id\": 107,\r\n                        \"name\": \"Pārūn\",\r\n                        \"latitude\": \"35.42064000\",\r\n                        \"longitude\": \"70.92261000\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"id\": 3894,\r\n                \"name\": \"Paktia\",\r\n                \"state_code\": \"PIA\",\r\n                \"cities\": [\r\n                    {\r\n                        \"id\": 69,\r\n                        \"name\": \"Gardez\",\r\n                        \"latitude\": \"33.59744000\",\r\n                        \"longitude\": \"69.22592000\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"id\": 3877,\r\n                \"name\": \"Paktika\",\r\n                \"state_code\": \"PKA\",\r\n                \"cities\": [\r\n                    {\r\n                        \"id\": 120,\r\n                        \"name\": \"Saṟōbī\",\r\n                        \"latitude\": \"32.75221000\",\r\n                        \"longitude\": \"69.04587000\"\r\n                    },\r\n                    {\r\n                        \"id\": 134,\r\n                        \"name\": \"Zaṟah Sharan\",\r\n                        \"latitude\": \"33.14641000\",\r\n                        \"longitude\": \"68.79213000\"\r\n                    },\r\n                    {\r\n                        \"id\": 133,\r\n                        \"name\": \"Zarghūn Shahr\",\r\n                        \"latitude\": \"32.84734000\",\r\n                        \"longitude\": \"68.44573000\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"id\": 3881,\r\n                \"name\": \"Panjshir\",\r\n                \"state_code\": \"PAN\",\r\n                \"cities\": [\r\n                    {\r\n                        \"id\": 59,\r\n                        \"name\": \"Bāzārak\",\r\n                        \"latitude\": \"35.31292000\",\r\n                        \"longitude\": \"69.51519000\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"id\": 3895,\r\n                \"name\": \"Parwan\",\r\n                \"state_code\": \"PAR\",\r\n                \"cities\": [\r\n                    {\r\n                        \"id\": 61,\r\n                        \"name\": \"Charikar\",\r\n                        \"latitude\": \"35.01361000\",\r\n                        \"longitude\": \"69.17139000\"\r\n                    },\r\n                    {\r\n                        \"id\": 76,\r\n                        \"name\": \"Jabal os Saraj\",\r\n                        \"latitude\": \"35.11833000\",\r\n                        \"longitude\": \"69.23778000\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"id\": 3883,\r\n                \"name\": \"Samangan\",\r\n                \"state_code\": \"SAM\",\r\n                \"cities\": [\r\n                    {\r\n                        \"id\": 53,\r\n                        \"name\": \"Aībak\",\r\n                        \"latitude\": \"36.26468000\",\r\n                        \"longitude\": \"68.01551000\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"id\": 3885,\r\n                \"name\": \"Sar-e Pol\",\r\n                \"state_code\": \"SAR\",\r\n                \"cities\": [\r\n                    {\r\n                        \"id\": 62,\r\n                        \"name\": \"Chīras\",\r\n                        \"latitude\": \"35.41674000\",\r\n                        \"longitude\": \"65.98234000\"\r\n                    },\r\n                    {\r\n                        \"id\": 92,\r\n                        \"name\": \"Larkird\",\r\n                        \"latitude\": \"35.48936000\",\r\n                        \"longitude\": \"66.66409000\"\r\n                    },\r\n                    {\r\n                        \"id\": 110,\r\n                        \"name\": \"Qal‘ah-ye Shahr\",\r\n                        \"latitude\": \"35.54729000\",\r\n                        \"longitude\": \"65.56760000\"\r\n                    },\r\n                    {\r\n                        \"id\": 117,\r\n                        \"name\": \"Sang-e Chārak\",\r\n                        \"latitude\": \"35.84972000\",\r\n                        \"longitude\": \"66.43694000\"\r\n                    },\r\n                    {\r\n                        \"id\": 119,\r\n                        \"name\": \"Sar-e Pul\",\r\n                        \"latitude\": \"36.21544000\",\r\n                        \"longitude\": \"65.93249000\"\r\n                    },\r\n                    {\r\n                        \"id\": 125,\r\n                        \"name\": \"Tagāw-Bāy\",\r\n                        \"latitude\": \"35.69941000\",\r\n                        \"longitude\": \"66.06164000\"\r\n                    },\r\n                    {\r\n                        \"id\": 128,\r\n                        \"name\": \"Tukzār\",\r\n                        \"latitude\": \"35.94831000\",\r\n                        \"longitude\": \"66.42132000\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"id\": 3893,\r\n                \"name\": \"Takhar\",\r\n                \"state_code\": \"TAK\",\r\n                \"cities\": [\r\n                    {\r\n                        \"id\": 137,\r\n                        \"name\": \"Ārt Khwājah\",\r\n                        \"latitude\": \"37.08571000\",\r\n                        \"longitude\": \"69.47958000\"\r\n                    },\r\n                    {\r\n                        \"id\": 126,\r\n                        \"name\": \"Taloqan\",\r\n                        \"latitude\": \"36.73605000\",\r\n                        \"longitude\": \"69.53451000\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"id\": 3898,\r\n                \"name\": \"Urozgan\",\r\n                \"state_code\": \"URU\",\r\n                \"cities\": [\r\n                    {\r\n                        \"id\": 127,\r\n                        \"name\": \"Tarinkot\",\r\n                        \"latitude\": \"32.62998000\",\r\n                        \"longitude\": \"65.87806000\"\r\n                    },\r\n                    {\r\n                        \"id\": 130,\r\n                        \"name\": \"Uruzgān\",\r\n                        \"latitude\": \"32.92775000\",\r\n                        \"longitude\": \"66.63253000\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"id\": 3874,\r\n                \"name\": \"Zabul\",\r\n                \"state_code\": \"ZAB\",\r\n                \"cities\": [\r\n                    {\r\n                        \"id\": 109,\r\n                        \"name\": \"Qalāt\",\r\n                        \"latitude\": \"32.10575000\",\r\n                        \"longitude\": \"66.90833000\"\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    },\r\n        {\r\n            \"id\": 199,\r\n            \"name\": \"Singapore\",\r\n            \"iso3\": \"SGP\",\r\n            \"iso2\": \"SG\",\r\n            \"phone_code\": \"65\",\r\n            \"capital\": \"Singapur\",\r\n            \"currency\": \"SGD\",\r\n            \"states\": [\r\n                {\r\n                    \"id\": 4651,\r\n                    \"name\": \"Central Singapore Community Development Council\",\r\n                    \"state_code\": \"01\",\r\n                    \"cities\": [\r\n                        {\r\n                            \"id\": 104057,\r\n                            \"name\": \"Singapore\",\r\n                            \"latitude\": \"1.28967000\",\r\n                            \"longitude\": \"103.85007000\"\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"id\": 4649,\r\n                    \"name\": \"North East Community Development Council\",\r\n                    \"state_code\": \"02\",\r\n                    \"cities\": []\r\n                },\r\n                {\r\n                    \"id\": 4653,\r\n                    \"name\": \"North West Community Development Council\",\r\n                    \"state_code\": \"03\",\r\n                    \"cities\": [\r\n                        {\r\n                            \"id\": 104058,\r\n                            \"name\": \"Woodlands\",\r\n                            \"latitude\": \"1.43801000\",\r\n                            \"longitude\": \"103.78877000\"\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"id\": 4650,\r\n                    \"name\": \"South East Community Development Council\",\r\n                    \"state_code\": \"04\",\r\n                    \"cities\": []\r\n                },\r\n                {\r\n                    \"id\": 4652,\r\n                    \"name\": \"South West Community Development Council\",\r\n                    \"state_code\": \"05\",\r\n                    \"cities\": []\r\n                }\r\n            ]\r\n        }]\r\n},\r\n    {\r\n        \"listId\": 1,\r\n        \"listName\": \"Wishlist!\",\r\n        \"countryList\": []\r\n    },\r\n\r\n];\r\n\r\nconst listReducer = (lists = jsonObj, action) => {\r\n    if (action.type === 'ADD_MSG') {\r\n        return [...lists, action.addMsg];\r\n    }\r\n    if (action.type === 'DELETE_MSG') {\r\n        return lists.filter((item, index) => index !== action.deleteMsg);\r\n    }\r\n    return lists;\r\n};\r\n\r\nconst selector = (msgId = 0, action) => {\r\n    if (action.type === 'SELECT_MSG') {\r\n        return action.selectMsg;\r\n    }\r\n    return msgId;\r\n};\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n\r\n\r\n\r\n\r\n\r\nconst defaultLocations = [{id:0, location: \"Rogers Arena\", address: \"800 Griffiths Way, Vancouver, BC V6B 6G1\", cityID: 0, notes: \"\", info: {}},\r\n    {id:1, location: \"Playland\", address: \"2901 E Hastings St, Vancouver, BC V5K 5J1\", cityID: 0, notes: \"\", info: {}},\r\n    {id:2, location: \"Science World\", address: \"1455 Quebec St, Vancouver, BC V6A 3Z7\", cityID: 0, notes: \"\", info: {}},\r\n    {id:3, location: \"Stanley Park\", address: \" Vancouver, BC V6G 1Z4\", cityID: 0, note: \"\", info: {}},\r\n    {id:4, location: \"Capilano Suspension Bridge\", address: \"3735 Capilano Rd, North Vancouver, BC V7R 4J1\", cityID: 0, notes: \"\", info: {}},\r\n    {id:5, location: \"SHOULD NOT RENDER THIS LOCATION\", address: \"3735 Capilano Rd, North Vancouver, BC V7R 4J1\", cityID: 100, notes: \"\", info: {}},\r\n    {id:6, location: \"Craigdarroch Castle\", address: \"1050 Joan Crescent, Victoria, BC V8S 3L5\", cityID: 2, notes: \"\", info: {}},\r\n    {id:7, location: \"Alcatraz Island\", address: \"San Francisco, CA 94133, United States\", cityID: 1, notes: \"\", info: {}},];\r\n\r\nconst locationsReducer = (locations = defaultLocations, action) => {\r\n    if (action.type === \"ADD_LOCATION\"){\r\n        locations.push(action.add);\r\n        return locations;\r\n    }\r\n    else if (action.type === \"DEL_LOCATION\"){\r\n        let newArray = locations.slice();\r\n        let indexToRemove = newArray.findIndex((item) => {\r\n           return action.location_id === item.id;\r\n        });\r\n        newArray.splice(indexToRemove, 1);\r\n        return newArray;\r\n    }\r\n    else if (action.type === \"NEW_LOCATION\"){\r\n        let newLocation = {\r\n            id: action.location_id,\r\n            location: action.location_name,\r\n            address: action.location_address,\r\n            cityID: action.cityID,\r\n            notes: \"\",\r\n            info: {},\r\n        };\r\n        return locations.concat(newLocation);\r\n    }\r\n    else if (action.type === \"RENDER_LOCATION\"){\r\n        return action.payload;\r\n    }\r\n    else if (action.type === \"ADD_NOTES\"){\r\n        let notes = action.add.notes;\r\n        let index = action.add.index;\r\n        console.log(index);\r\n        console.log(locations[index]);\r\n        locations[index].notes = notes;\r\n        return locations;\r\n    }\r\n\r\n\r\n    return locations;\r\n};\r\n\r\nconst defaultCities = [{name: \"Vancouver\", id: 0, countryID: 0, dateRanges : [{start: \"2020/08/20\", end: \"2020/08/21\"}]},\r\n    {name: \"San Francisco\", id: 1, countryID: 1, dateRanges : [{start: \"2020/08/21\", end: \"2020/08/22\"}]},\r\n    {name: \"Victoria\", id: 2, countryID: 0, dateRanges : [{start: \"2020/08/22\", end: \"2020/08/23\"}]}];\r\nconst cityReducer = (cities = defaultCities, action) =>{\r\n    if (action.type === 'START_DATE_CHANGE_CITY'){\r\n        let newArray = cities.slice();\r\n        let indexToChange = newArray.findIndex((item) => {\r\n            return action.place.id === item.id;\r\n        });\r\n        newArray[indexToChange].dateRanges[action.dateIndex].start = action.date;\r\n        return newArray\r\n    }\r\n    else if (action.type === 'END_DATE_CHANGE_CITY'){\r\n        let newArray = cities.slice();\r\n        let indexToChange = newArray.findIndex((item) => {\r\n            return action.place.id === item.id;\r\n        });\r\n        newArray[indexToChange].dateRanges[action.dateIndex].end = action.date;\r\n        return newArray\r\n    }\r\n\r\n    return cities;\r\n};\r\n\r\n\r\nconst defaultCountries = [{name: \"Canada\", id: 0, dateRanges : [{start: \"2020/08/20\", end: \"2020/08/25\"}]},\r\n    {name: \"United States\", id: 1, dateRanges : [{start: \"2020/08/25\", end: \"2020/08/28\"}]}];\r\nconst countryReducer = (countries = defaultCountries, action) =>{\r\n    if (action.type === 'START_DATE_CHANGE_COUNTRY'){\r\n        let newArray = countries.slice();\r\n        let indexToChange = newArray.findIndex((item) => {\r\n            return action.place.id === item.id;\r\n        });\r\n        newArray[indexToChange].dateRanges[action.dateIndex].start = action.date;\r\n        return newArray\r\n    }\r\n    else if (action.type === 'END_DATE_CHANGE_COUNTRY'){\r\n        let newArray = countries.slice();\r\n        let indexToChange = newArray.findIndex((item) => {\r\n            return action.place.id === item.id;\r\n        });\r\n        newArray[indexToChange].dateRanges[action.dateIndex].end = action.date;\r\n        return newArray\r\n    }\r\n    return countries;\r\n};\r\n\r\nconst defaultView = {\r\n    byID:{\r\n        country: 0,\r\n        city: 0,\r\n    }\r\n};\r\nconst currentViewReducer = (currentView = defaultView, action) => {\r\n   if(action.type === \"CHANGE_VIEW\"){\r\n        return action.newView;\r\n    }\r\n    return currentView;\r\n};\r\n\r\nconst itineraryReducer = (itinerary = { name: \"Test itinerary\", dateRanges : [{start: \"2020/08/20\", end: \"2020/08/28\"}]}, action) =>{\r\n    if (action.type === \"NAME_CHANGE\"){\r\n        return{\r\n            ...itinerary,\r\n            name: action.name\r\n        };\r\n    }\r\n    else if (action.type === \"ADD_LOCATION___NULL\") {\r\n        itinerary.push(action.add);\r\n        return itinerary;\r\n    }\r\n    return itinerary;\r\n};\r\n\r\nconst currentItineraryReducer = (currentItinerary = null, action) => {\r\n    if(action.type === \"SAVE_ITINERARY\") {\r\n        return action.payload;\r\n    }\r\n\r\n    return currentItinerary;\r\n}\r\n\r\nconst currentItineraryObjectIDReudcer = (id = null, action) => {\r\n    if(action.type === \"GET_CURRENT_ITINERARY_ID\") {\r\n        return action.payload;\r\n    }\r\n\r\n    return id;\r\n}\r\n\r\n\r\nexport default combineReducers({\r\n    locations: locationsReducer,\r\n    itinerary: itineraryReducer,\r\n    currentView: currentViewReducer,\r\n    cities: cityReducer,\r\n    countries: countryReducer,\r\n    mapLocation: mapLocationReducer,\r\n    lists: listReducer,\r\n    msgId: selector,\r\n    currentItinerary: currentItineraryReducer,\r\n    currentItineraryID: currentItineraryObjectIDReudcer\r\n});\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {Provider} from 'react-redux';\r\nimport {createStore} from 'redux';\r\nimport reducers from './reducers';\r\n\r\nReactDOM.render(\r\n    <Provider store={createStore(reducers)}>\r\n    <App />\r\n    </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}